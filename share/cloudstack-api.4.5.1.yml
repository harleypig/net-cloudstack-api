---
api_version: 4.5.1
commands:
  activateProject:
    description: Activates a project
    isAsync: 'true'
    name: activateProject
    request:
      parms:
        dataType: uuid
        description: id of the project to be modified
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the project's owner
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            project
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the project can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by project
          sinceVersion: 4.2.0
        displaytext:
          dataType: string
          description: the displaytext of the project
        domain:
          dataType: string
          description: the domain name where the project belongs to
        domainid:
          dataType: string
          description: the domain id the project belongs to
        id:
          dataType: string
          description: the id of the project
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            project to acquire
          sinceVersion: 4.2.0
        iplimit:
          dataType: string
          description: the total number of public ip addresses this project can acquire
          sinceVersion: 4.2.0
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            project
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this project
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the project can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by project
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the project
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            project
          sinceVersion: 4.2.0
        networklimit:
          dataType: string
          description: the total number of networks the project can own
          sinceVersion: 4.2.0
        networktotal:
          dataType: long
          description: the total number of networks owned by project
          sinceVersion: 4.2.0
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this project
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the project can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this project
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the project can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this project
          sinceVersion: 4.2.0
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this project
          sinceVersion: 4.2.0
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this project
          sinceVersion: 4.2.0
        state:
          dataType: string
          description: the state of the project
        tags:
          dataType: list
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            project
          sinceVersion: 4.2.0
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            project
          sinceVersion: 4.2.0
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            project
          sinceVersion: 4.2.0
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this project
            to acquire
          sinceVersion: 4.2.0
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this project
          sinceVersion: 4.2.0
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this project
          sinceVersion: 4.2.0
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this project
          sinceVersion: 4.2.0
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this project
          sinceVersion: 4.2.0
        volumeavailable:
          dataType: string
          description: the total volume available for this project
          sinceVersion: 4.2.0
        volumelimit:
          dataType: string
          description: the total volume which can be used by this project
          sinceVersion: 4.2.0
        volumetotal:
          dataType: long
          description: the total volume being used by this project
          sinceVersion: 4.2.0
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this project
          sinceVersion: 4.2.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the project can own
          sinceVersion: 4.2.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by project
          sinceVersion: 4.2.0
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  addAccountToProject:
    description: Adds acoount to a project
    isAsync: 'true'
    name: addAccountToProject
    request:
      parms:
        account:
          dataType: string
          description: name of the account to be added to the project
          required: 'false'
        email:
          dataType: string
          description: email to which invitation to the project is going to be sent
          required: 'false'
        projectid:
          dataType: uuid
          description: id of the project to add the account to
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  addBaremetalDhcp:
    description: adds a baremetal dhcp server
    isAsync: 'true'
    name: addBaremetalDhcp
    request:
      parms:
        dhcpservertype:
          dataType: string
          description: Type of dhcp device
          required: 'true'
        password:
          dataType: string
          description: Credentials to reach external dhcp device
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
        url:
          dataType: string
          description: URL of the external dhcp appliance.
          required: 'true'
        username:
          dataType: string
          description: Credentials to reach external dhcp device
          required: 'true'
    response:
      parms:
        dhcpservertype:
          dataType: string
          description: name of the provider
        id:
          dataType: string
          description: 'device id of '
        physicalnetworkid:
          dataType: string
          description: the physical network to which this external dhcp device belongs
            to
        provider:
          dataType: string
          description: name of the provider
        url:
          dataType: string
          description: url
    user_types:
    - root
  addBaremetalHost:
    description: add a baremetal host
    isAsync: 'false'
    name: addBaremetalHost
    request:
      parms:
        allocationstate:
          dataType: string
          description: Allocation state of this Host for allocation of new resources
          required: 'false'
        clusterid:
          dataType: uuid
          description: the cluster ID for the host
          required: 'false'
        clustername:
          dataType: string
          description: the cluster name for the host
          required: 'false'
        hosttags:
          dataType: list
          description: list of tags to be added to the host
          required: 'false'
          type: list
        hypervisor:
          dataType: string
          description: hypervisor type of the host
          required: 'true'
        ipaddress:
          dataType: string
          description: ip address intentionally allocated to this host after provisioning
          required: 'false'
        password:
          dataType: string
          description: the password for the host
          required: 'true'
        podid:
          dataType: uuid
          description: the Pod ID for the host
          required: 'true'
        url:
          dataType: string
          description: the host URL
          required: 'true'
        username:
          dataType: string
          description: the username for the host
          required: 'true'
        zoneid:
          dataType: uuid
          description: the Zone ID for the host
          required: 'true'
    response:
      parms:
        averageload:
          dataType: long
          description: the cpu average load on the host
        capabilities:
          dataType: string
          description: capabilities of the host
        clusterid:
          dataType: string
          description: the cluster ID of the host
        clustername:
          dataType: string
          description: the cluster name of the host
        clustertype:
          dataType: string
          description: the cluster type of the cluster that host belongs to
        cpuallocated:
          dataType: string
          description: the amount of the host's CPU currently allocated
        cpunumber:
          dataType: integer
          description: the CPU number of the host
        cpusockets:
          dataType: integer
          description: the number of CPU sockets on the host
        cpuspeed:
          dataType: long
          description: the CPU speed of the host
        cpuused:
          dataType: string
          description: the amount of the host's CPU currently used
        cpuwithoverprovisioning:
          dataType: string
          description: 'the amount of the host''s CPU after applying the cpu.overprovisioning.factor '
        created:
          dataType: date
          description: the date and time the host was created
        details:
          dataType: map
          description: Host details in key/value pairs.
          sinceVersion: '4.5'
        disconnected:
          dataType: date
          description: true if the host is disconnected. False otherwise.
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the host
        events:
          dataType: string
          description: events available for the host
        gpugroup:
          dataType: list
          description: GPU cards present in the host
          parms:
            gpugroupname:
              dataType: string
              description: GPU cards present in the host
            vgpu:
              dataType: list
              description: the list of enabled vGPUs
              parms:
                maxcapacity:
                  dataType: long
                  description: Maximum vgpu can be created with this vgpu type on
                    the given gpu group
                maxheads:
                  dataType: long
                  description: Maximum displays per user
                maxresolutionx:
                  dataType: long
                  description: Maximum X resolution per display
                maxresolutiony:
                  dataType: long
                  description: Maximum Y resolution per display
                maxvgpuperpgpu:
                  dataType: long
                  description: Maximum no. of vgpu per gpu card (pgpu)
                remainingcapacity:
                  dataType: long
                  description: Remaining capacity in terms of no. of more VMs that
                    can be deployped with this vGPU type
                vgputype:
                  dataType: string
                  description: Model Name of vGPU
                videoram:
                  dataType: long
                  description: Video RAM for this vGPU type
          sinceVersion: '4.4'
        hahost:
          dataType: boolean
          description: true if the host is Ha host (dedicated to vms started by HA
            process; false otherwise
        hasenoughcapacity:
          dataType: boolean
          description: true if this host has enough CPU and RAM capacity to migrate
            a VM to it, false otherwise
        hosttags:
          dataType: string
          description: comma-separated list of tags for the host
        hypervisor:
          dataType: hypervisortype
          description: the host hypervisor
        hypervisorversion:
          dataType: string
          description: the hypervisor version
        id:
          dataType: string
          description: the ID of the host
        ipaddress:
          dataType: string
          description: the IP address of the host
        islocalstorageactive:
          dataType: boolean
          description: true if local storage is active, false otherwise
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        lastpinged:
          dataType: date
          description: the date and time the host was last pinged
        managementserverid:
          dataType: long
          description: the management server ID of the host
        memoryallocated:
          dataType: long
          description: the amount of the host's memory currently allocated
        memorytotal:
          dataType: long
          description: the memory total of the host
        memoryused:
          dataType: long
          description: the amount of the host's memory currently used
        name:
          dataType: string
          description: the name of the host
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the host
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        oscategoryid:
          dataType: string
          description: the OS category ID of the host
        oscategoryname:
          dataType: string
          description: the OS category name of the host
        podid:
          dataType: string
          description: the Pod ID of the host
        podname:
          dataType: string
          description: the Pod name of the host
        removed:
          dataType: date
          description: the date and time the host was removed
        resourcestate:
          dataType: string
          description: the resource state of the host
        state:
          dataType: status
          description: the state of the host
        suitableformigration:
          dataType: boolean
          description: true if this host is suitable(has enough capacity and satisfies
            all conditions like hosttags, max guests vm limit etc) to migrate a VM
            to it , false otherwise
        type:
          dataType: type
          description: the host type
        version:
          dataType: string
          description: the host version
        zoneid:
          dataType: string
          description: the Zone ID of the host
        zonename:
          dataType: string
          description: the Zone name of the host
    user_types:
    - root
  addBaremetalPxeKickStartServer:
    description: add a baremetal pxe server
    isAsync: 'true'
    name: addBaremetalPxeKickStartServer
    request:
      parms:
        password:
          dataType: string
          description: Credentials to reach external pxe device
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
        podid:
          dataType: uuid
          description: Pod Id
          required: 'false'
        pxeservertype:
          dataType: string
          description: type of pxe device
          required: 'true'
        tftpdir:
          dataType: string
          description: Tftp root directory of PXE server
          required: 'true'
        url:
          dataType: string
          description: URL of the external pxe device
          required: 'true'
        username:
          dataType: string
          description: Credentials to reach external pxe device
          required: 'true'
    response:
      parms:
        dataType: string
        description: Tftp root directory of PXE server
        name: tftpdir
    user_types:
    - root
  addBaremetalPxePingServer:
    description: add a baremetal ping pxe server
    isAsync: 'true'
    name: addBaremetalPxePingServer
    request:
      parms:
        password:
          dataType: string
          description: Credentials to reach external pxe device
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
        pingcifspassword:
          dataType: string
          description: Password of PING storage server
          required: 'false'
        pingcifsusername:
          dataType: string
          description: Username of PING storage server
          required: 'false'
        pingdir:
          dataType: string
          description: Root directory on PING storage server
          required: 'true'
        pingstorageserverip:
          dataType: string
          description: PING storage server ip
          required: 'true'
        podid:
          dataType: uuid
          description: Pod Id
          required: 'false'
        pxeservertype:
          dataType: string
          description: type of pxe device
          required: 'true'
        tftpdir:
          dataType: string
          description: Tftp root directory of PXE server
          required: 'true'
        url:
          dataType: string
          description: URL of the external pxe device
          required: 'true'
        username:
          dataType: string
          description: Credentials to reach external pxe device
          required: 'true'
    response:
      parms:
        pingdir:
          dataType: string
          description: Root directory on PING storage server
        pingstorageserverip:
          dataType: string
          description: PING storage server ip
        tftpdir:
          dataType: string
          description: Tftp root directory of PXE server
    user_types:
    - root
  addBaremetalRct:
    description: adds baremetal rack configuration text
    isAsync: 'true'
    name: addBaremetalRct
    request:
      parms:
        dataType: object
        description: http url to baremetal RCT configuration
        name: baremetalrcturl
        required: 'true'
    response:
      parms:
        id:
          dataType: string
          description: id of rct
        url:
          dataType: string
          description: url
    user_types:
    - root
  addBigSwitchVnsDevice:
    description: Adds a BigSwitch VNS device
    isAsync: 'true'
    name: addBigSwitchVnsDevice
    request:
      parms:
        hostname:
          dataType: string
          description: Hostname of ip address of the BigSwitch VNS Controller.
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
    response:
      parms:
        bigswitchdevicename:
          dataType: string
          description: device name
        hostname:
          dataType: string
          description: the controller Ip address
        physicalnetworkid:
          dataType: string
          description: the physical network to which this BigSwitch Vns belongs to
        provider:
          dataType: string
          description: name of the provider
        vnsdeviceid:
          dataType: string
          description: device id of the BigSwitch Vns
    sinceVersion: 4.1.0
    user_types:
    - root
  addBrocadeVcsDevice:
    description: Adds a Brocade VCS Switch
    isAsync: 'true'
    name: addBrocadeVcsDevice
    request:
      parms:
        hostname:
          dataType: string
          description: Hostname of ip address of the Brocade VCS Switch.
          required: 'true'
        password:
          dataType: string
          description: Credentials to access the Brocade VCS Switch API
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
        username:
          dataType: string
          description: Credentials to access the Brocade VCS Switch API
          required: 'true'
    response:
      parms:
        brocadedevicename:
          dataType: string
          description: device name
        hostname:
          dataType: string
          description: the principal switch Ip address
        physicalnetworkid:
          dataType: string
          description: the physical Network to which this Brocade VCS belongs to
        provider:
          dataType: string
          description: name of the provider
        vcsdeviceid:
          dataType: string
          description: device id of the Brocade Vcs
    user_types:
    - root
  addCluster:
    description: Adds a new cluster
    isAsync: 'false'
    name: addCluster
    request:
      parms:
        allocationstate:
          dataType: string
          description: Allocation state of this cluster for allocation of new resources
          required: 'false'
        clustername:
          dataType: string
          description: the cluster name
          required: 'true'
        clustertype:
          dataType: string
          description: 'type of the cluster: CloudManaged, ExternalManaged'
          required: 'true'
        guestvswitchname:
          dataType: string
          description: Name of virtual switch used for guest traffic in the cluster.
            This would override zone wide traffic label setting.
          required: 'false'
        guestvswitchtype:
          dataType: string
          description: Type of virtual switch used for guest traffic in the cluster.
            Allowed values are, vmwaresvs (for VMware standard vSwitch) and vmwaredvs
            (for VMware distributed vSwitch)
          required: 'false'
        hypervisor:
          dataType: string
          description: 'hypervisor type of the cluster: XenServer,KVM,VMware,Hyperv,BareMetal,Simulator'
          required: 'true'
        password:
          dataType: string
          description: the password for the host
          required: 'false'
        podid:
          dataType: uuid
          description: the Pod ID for the host
          required: 'true'
        publicvswitchname:
          dataType: string
          description: Name of virtual switch used for public traffic in the cluster.  This
            would override zone wide traffic label setting.
          required: 'false'
        publicvswitchtype:
          dataType: string
          description: Type of virtual switch used for public traffic in the cluster.
            Allowed values are, vmwaresvs (for VMware standard vSwitch) and vmwaredvs
            (for VMware distributed vSwitch)
          required: 'false'
        url:
          dataType: string
          description: the URL
          required: 'false'
        username:
          dataType: string
          description: the username for the cluster
          required: 'false'
        vsmipaddress:
          dataType: string
          description: the ipaddress of the VSM associated with this cluster
          required: 'false'
        vsmpassword:
          dataType: string
          description: the password for the VSM associated with this cluster
          required: 'false'
        vsmusername:
          dataType: string
          description: the username for the VSM associated with this cluster
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID for the cluster
          required: 'true'
    response:
      parms:
        allocationstate:
          dataType: string
          description: the allocation state of the cluster
        capacity:
          dataType: list
          description: the capacity of the Cluster
          parms:
            capacitytotal:
              dataType: long
              description: the total capacity available
            capacityused:
              dataType: long
              description: the capacity currently in use
            clusterid:
              dataType: string
              description: the Cluster ID
            clustername:
              dataType: string
              description: the Cluster name
            percentused:
              dataType: string
              description: the percentage of capacity currently in use
            podid:
              dataType: string
              description: the Pod ID
            podname:
              dataType: string
              description: the Pod name
            type:
              dataType: short
              description: the capacity type
            zoneid:
              dataType: string
              description: the Zone ID
            zonename:
              dataType: string
              description: the Zone name
        clustertype:
          dataType: string
          description: the type of the cluster
        cpuovercommitratio:
          dataType: string
          description: The cpu overcommit ratio of the cluster
        hypervisortype:
          dataType: string
          description: the hypervisor type of the cluster
        id:
          dataType: string
          description: the cluster ID
        managedstate:
          dataType: string
          description: whether this cluster is managed by cloudstack
        memoryovercommitratio:
          dataType: string
          description: The memory overcommit ratio of the cluster
        name:
          dataType: string
          description: the cluster name
        podid:
          dataType: string
          description: the Pod ID of the cluster
        podname:
          dataType: string
          description: the Pod name of the cluster
        zoneid:
          dataType: string
          description: the Zone ID of the cluster
        zonename:
          dataType: string
          description: the Zone name of the cluster
    user_types:
    - root
  addGloboDnsHost:
    description: Adds the GloboDNS external host
    isAsync: 'true'
    name: addGloboDnsHost
    request:
      parms:
        password:
          dataType: string
          description: Password for GloboDNS
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
        url:
          dataType: string
          description: GloboDNS url
          required: 'true'
        username:
          dataType: string
          description: Username for GloboDNS
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 4.5.0
    user_types:
    - root
  addGuestOs:
    description: Add a new guest OS type
    isAsync: 'true'
    name: addGuestOs
    request:
      parms:
        name:
          dataType: string
          description: Optional name for Guest OS
          required: 'false'
        oscategoryid:
          dataType: uuid
          description: ID of Guest OS category
          required: 'true'
        osdisplayname:
          dataType: string
          description: Unique display name for Guest OS
          required: 'true'
    response:
      parms:
        description:
          dataType: string
          description: the name/description of the OS type
        id:
          dataType: string
          description: the ID of the OS type
        isuserdefined:
          dataType: string
          description: is the guest OS user defined
        oscategoryid:
          dataType: string
          description: the ID of the OS category
    sinceVersion: 4.4.0
    user_types:
    - root
  addGuestOsMapping:
    description: Adds a guest OS name to hypervisor OS name mapping
    isAsync: 'true'
    name: addGuestOsMapping
    request:
      parms:
        hypervisor:
          dataType: string
          description: 'Hypervisor type. One of : XenServer, KVM, VMWare'
          required: 'true'
        hypervisorversion:
          dataType: string
          description: Hypervisor version to create the mapping for. Use 'default'
            for default versions
          required: 'true'
        osdisplayname:
          dataType: string
          description: Display Name of Guest OS standard type. Either Display Name
            or UUID must be passed
          required: 'false'
        osnameforhypervisor:
          dataType: string
          description: OS name specific to the hypervisor
          required: 'true'
        ostypeid:
          dataType: uuid
          description: UUID of Guest OS type. Either the UUID or Display Name must
            be passed
          required: 'false'
    response:
      parms:
        hypervisor:
          dataType: string
          description: the hypervisor
        hypervisorversion:
          dataType: string
          description: version of the hypervisor for mapping
        id:
          dataType: string
          description: the ID of the Guest OS mapping
        isuserdefined:
          dataType: string
          description: is the mapping user defined
        osdisplayname:
          dataType: string
          description: standard display name for the Guest OS
        osnameforhypervisor:
          dataType: string
          description: hypervisor specific name for the Guest OS
        ostypeid:
          dataType: string
          description: the ID of the Guest OS type
    sinceVersion: 4.4.0
    user_types:
    - root
  addHost:
    description: Adds a new host.
    isAsync: 'false'
    name: addHost
    request:
      parms:
        allocationstate:
          dataType: string
          description: Allocation state of this Host for allocation of new resources
          required: 'false'
        clusterid:
          dataType: uuid
          description: the cluster ID for the host
          required: 'false'
        clustername:
          dataType: string
          description: the cluster name for the host
          required: 'false'
        hosttags:
          dataType: list
          description: list of tags to be added to the host
          required: 'false'
          type: list
        hypervisor:
          dataType: string
          description: hypervisor type of the host
          required: 'true'
        password:
          dataType: string
          description: the password for the host
          required: 'true'
        podid:
          dataType: uuid
          description: the Pod ID for the host
          required: 'true'
        url:
          dataType: string
          description: the host URL
          required: 'true'
        username:
          dataType: string
          description: the username for the host
          required: 'true'
        zoneid:
          dataType: uuid
          description: the Zone ID for the host
          required: 'true'
    response:
      parms:
        averageload:
          dataType: long
          description: the cpu average load on the host
        capabilities:
          dataType: string
          description: capabilities of the host
        clusterid:
          dataType: string
          description: the cluster ID of the host
        clustername:
          dataType: string
          description: the cluster name of the host
        clustertype:
          dataType: string
          description: the cluster type of the cluster that host belongs to
        cpuallocated:
          dataType: string
          description: the amount of the host's CPU currently allocated
        cpunumber:
          dataType: integer
          description: the CPU number of the host
        cpusockets:
          dataType: integer
          description: the number of CPU sockets on the host
        cpuspeed:
          dataType: long
          description: the CPU speed of the host
        cpuused:
          dataType: string
          description: the amount of the host's CPU currently used
        cpuwithoverprovisioning:
          dataType: string
          description: 'the amount of the host''s CPU after applying the cpu.overprovisioning.factor '
        created:
          dataType: date
          description: the date and time the host was created
        details:
          dataType: map
          description: Host details in key/value pairs.
          sinceVersion: '4.5'
        disconnected:
          dataType: date
          description: true if the host is disconnected. False otherwise.
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the host
        events:
          dataType: string
          description: events available for the host
        gpugroup:
          dataType: list
          description: GPU cards present in the host
          parms:
            gpugroupname:
              dataType: string
              description: GPU cards present in the host
            vgpu:
              dataType: list
              description: the list of enabled vGPUs
              parms:
                maxcapacity:
                  dataType: long
                  description: Maximum vgpu can be created with this vgpu type on
                    the given gpu group
                maxheads:
                  dataType: long
                  description: Maximum displays per user
                maxresolutionx:
                  dataType: long
                  description: Maximum X resolution per display
                maxresolutiony:
                  dataType: long
                  description: Maximum Y resolution per display
                maxvgpuperpgpu:
                  dataType: long
                  description: Maximum no. of vgpu per gpu card (pgpu)
                remainingcapacity:
                  dataType: long
                  description: Remaining capacity in terms of no. of more VMs that
                    can be deployped with this vGPU type
                vgputype:
                  dataType: string
                  description: Model Name of vGPU
                videoram:
                  dataType: long
                  description: Video RAM for this vGPU type
          sinceVersion: '4.4'
        hahost:
          dataType: boolean
          description: true if the host is Ha host (dedicated to vms started by HA
            process; false otherwise
        hasenoughcapacity:
          dataType: boolean
          description: true if this host has enough CPU and RAM capacity to migrate
            a VM to it, false otherwise
        hosttags:
          dataType: string
          description: comma-separated list of tags for the host
        hypervisor:
          dataType: hypervisortype
          description: the host hypervisor
        hypervisorversion:
          dataType: string
          description: the hypervisor version
        id:
          dataType: string
          description: the ID of the host
        ipaddress:
          dataType: string
          description: the IP address of the host
        islocalstorageactive:
          dataType: boolean
          description: true if local storage is active, false otherwise
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        lastpinged:
          dataType: date
          description: the date and time the host was last pinged
        managementserverid:
          dataType: long
          description: the management server ID of the host
        memoryallocated:
          dataType: long
          description: the amount of the host's memory currently allocated
        memorytotal:
          dataType: long
          description: the memory total of the host
        memoryused:
          dataType: long
          description: the amount of the host's memory currently used
        name:
          dataType: string
          description: the name of the host
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the host
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        oscategoryid:
          dataType: string
          description: the OS category ID of the host
        oscategoryname:
          dataType: string
          description: the OS category name of the host
        podid:
          dataType: string
          description: the Pod ID of the host
        podname:
          dataType: string
          description: the Pod name of the host
        removed:
          dataType: date
          description: the date and time the host was removed
        resourcestate:
          dataType: string
          description: the resource state of the host
        state:
          dataType: status
          description: the state of the host
        suitableformigration:
          dataType: boolean
          description: true if this host is suitable(has enough capacity and satisfies
            all conditions like hosttags, max guests vm limit etc) to migrate a VM
            to it , false otherwise
        type:
          dataType: type
          description: the host type
        version:
          dataType: string
          description: the host version
        zoneid:
          dataType: string
          description: the Zone ID of the host
        zonename:
          dataType: string
          description: the Zone name of the host
    user_types:
    - root
  addImageStore:
    description: Adds backup image store.
    isAsync: 'false'
    name: addImageStore
    request:
      parms:
        details:
          dataType: map
          description: 'the details for the image store. Example: details[0].key=accesskey&details[0].value=s389ddssaa&details[1].key=secretkey&details[1].value=8dshfsss'
          required: 'false'
          type: map
        name:
          dataType: string
          description: the name for the image store
          required: 'false'
        provider:
          dataType: string
          description: the image store provider name
          required: 'true'
        url:
          dataType: string
          description: the URL for the image store
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID for the image store
          required: 'false'
    response:
      parms:
        details:
          dataType: set
          description: the details of the image store
        id:
          dataType: string
          description: the ID of the image store
        name:
          dataType: string
          description: the name of the image store
        protocol:
          dataType: string
          description: the protocol of the image store
        providername:
          dataType: string
          description: the provider name of the image store
        scope:
          dataType: scopetype
          description: the scope of the image store
        url:
          dataType: string
          description: the url of the image store
        zoneid:
          dataType: string
          description: the Zone ID of the image store
        zonename:
          dataType: string
          description: the Zone name of the image store
    sinceVersion: 4.2.0
    user_types:
    - root
  addIpToNic:
    description: Assigns secondary IP to NIC
    isAsync: 'true'
    name: addIpToNic
    request:
      parms:
        ipaddress:
          dataType: string
          description: Secondary IP Address
          required: 'false'
        nicid:
          dataType: uuid
          description: the ID of the nic to which you want to assign private IP
          required: 'true'
    response:
      parms:
        id:
          dataType: string
          description: the ID of the secondary private IP addr
        ipaddress:
          dataType: string
          description: Secondary IP address
        networkid:
          dataType: string
          description: the ID of the network
        nicid:
          dataType: string
          description: the ID of the nic
        virtualmachineid:
          dataType: string
          description: the ID of the vm
    user_types:
    - domain
    - root
    - user
  addLdapConfiguration:
    description: Add a new Ldap Configuration
    isAsync: 'false'
    name: addLdapConfiguration
    request:
      parms:
        hostname:
          dataType: string
          description: Hostname
          required: 'true'
        port:
          dataType: integer
          description: Port
          required: 'true'
    response:
      parms:
        hostname:
          dataType: string
          description: hostname
        port:
          dataType: int
          description: port
    sinceVersion: 4.2.0
    user_types:
    - root
  addNetscalerLoadBalancer:
    description: Adds a netscaler load balancer device
    isAsync: 'true'
    name: addNetscalerLoadBalancer
    request:
      parms:
        gslbprovider:
          dataType: boolean
          description: true if NetScaler device being added is for providing GSLB
            service
          required: 'false'
        gslbproviderprivateip:
          dataType: string
          description: public IP of the site
          required: 'false'
        gslbproviderpublicip:
          dataType: string
          description: public IP of the site
          required: 'false'
        isexclusivegslbprovider:
          dataType: boolean
          description: true if NetScaler device being added is for providing GSLB
            service exclusively and can not be used for LB
          required: 'false'
        networkdevicetype:
          dataType: string
          description: Netscaler device type supports NetscalerMPXLoadBalancer, NetscalerVPXLoadBalancer,
            NetscalerSDXLoadBalancer
          required: 'true'
        password:
          dataType: string
          description: Credentials to reach netscaler load balancer device
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
        url:
          dataType: string
          description: URL of the netscaler load balancer appliance.
          required: 'true'
        username:
          dataType: string
          description: Credentials to reach netscaler load balancer device
          required: 'true'
    response:
      parms:
        gslbprovider:
          dataType: boolean
          description: true if NetScaler device is provisioned to be a GSLB service
            provider
        gslbproviderprivateip:
          dataType: string
          description: private IP of the NetScaler representing GSLB site
        gslbproviderpublicip:
          dataType: string
          description: public IP of the NetScaler representing GSLB site
        ipaddress:
          dataType: string
          description: the management IP address of the external load balancer
        isexclusivegslbprovider:
          dataType: boolean
          description: true if NetScaler device is provisioned exclusively to be a
            GSLB service provider
        lbdevicecapacity:
          dataType: long
          description: device capacity
        lbdevicededicated:
          dataType: boolean
          description: true if device is dedicated for an account
        lbdeviceid:
          dataType: string
          description: device id of the netscaler load balancer
        lbdevicename:
          dataType: string
          description: device name
        lbdevicestate:
          dataType: string
          description: device state
        physicalnetworkid:
          dataType: string
          description: the physical network to which this netscaler device belongs
            to
        podids:
          dataType: list
          description: Used when NetScaler device is provider of EIP service. This
            parameter represents the list of pod's, for which there exists a policy
            based route on datacenter L3 router to route pod's subnet IP to a NetScaler
            device.
        privateinterface:
          dataType: string
          description: the private interface of the load balancer
        provider:
          dataType: string
          description: name of the provider
        publicinterface:
          dataType: string
          description: the public interface of the load balancer
    user_types:
    - root
  addNetworkDevice:
    description: 'Adds a network device of one of the following types: ExternalDhcp,
      ExternalFirewall, ExternalLoadBalancer, PxeServer'
    isAsync: 'false'
    name: addNetworkDevice
    request:
      parms:
        networkdeviceparameterlist:
          dataType: map
          description: parameters for network device
          required: 'false'
          type: map
        networkdevicetype:
          dataType: string
          description: Network device type, now supports ExternalDhcp, PxeServer,
            NetscalerMPXLoadBalancer, NetscalerVPXLoadBalancer, NetscalerSDXLoadBalancer,
            F5BigIpLoadBalancer, JuniperSRXFirewall, PaloAltoFirewall
          required: 'false'
    response:
      parms:
        dataType: string
        description: the ID of the network device
        name: id
    user_types:
    - root
  addNetworkServiceProvider:
    description: Adds a network serviceProvider to a physical network
    isAsync: 'true'
    name: addNetworkServiceProvider
    request:
      parms:
        destinationphysicalnetworkid:
          dataType: uuid
          description: the destination Physical Network ID to bridge to
          required: 'false'
        name:
          dataType: string
          description: the name for the physical network service provider
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID to add the provider to
          required: 'true'
        servicelist:
          dataType: list
          description: the list of services to be enabled for this physical network
            service provider
          required: 'false'
          type: list
    response:
      parms:
        canenableindividualservice:
          dataType: boolean
          description: true if individual services can be enabled/disabled
        destinationphysicalnetworkid:
          dataType: string
          description: the destination physical network
        id:
          dataType: string
          description: uuid of the network provider
        name:
          dataType: string
          description: the provider name
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        servicelist:
          dataType: list
          description: services for this provider
        state:
          dataType: string
          description: state of the network provider
    sinceVersion: 3.0.0
    user_types:
    - root
  addNicToVirtualMachine:
    description: Adds VM to specified network by creating a NIC
    isAsync: 'true'
    name: addNicToVirtualMachine
    request:
      parms:
        ipaddress:
          dataType: string
          description: IP Address for the new network
          required: 'false'
        networkid:
          dataType: uuid
          description: Network ID
          required: 'true'
        virtualmachineid:
          dataType: uuid
          description: Virtual Machine ID
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  addNiciraNvpDevice:
    description: Adds a Nicira NVP device
    isAsync: 'true'
    name: addNiciraNvpDevice
    request:
      parms:
        hostname:
          dataType: string
          description: Hostname of ip address of the Nicira NVP Controller.
          required: 'true'
        l3gatewayserviceuuid:
          dataType: string
          description: The L3 Gateway Service UUID configured on the Nicira Controller
          required: 'false'
        password:
          dataType: string
          description: Credentials to access the Nicira Controller API
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
        transportzoneuuid:
          dataType: string
          description: The Transportzone UUID configured on the Nicira Controller
          required: 'true'
        username:
          dataType: string
          description: Credentials to access the Nicira Controller API
          required: 'true'
    response:
      parms:
        hostname:
          dataType: string
          description: the controller Ip address
        l3gatewayserviceuuid:
          dataType: string
          description: this L3 gateway service Uuid
        niciradevicename:
          dataType: string
          description: device name
        nvpdeviceid:
          dataType: string
          description: device id of the Nicire Nvp
        physicalnetworkid:
          dataType: string
          description: the physical network to which this Nirica Nvp belongs to
        provider:
          dataType: string
          description: name of the provider
        transportzoneuuid:
          dataType: string
          description: the transport zone Uuid
    user_types:
    - root
  addOpenDaylightController:
    description: Adds an OpenDyalight controler
    isAsync: 'true'
    name: addOpenDaylightController
    request:
      parms:
        password:
          dataType: string
          description: Credential to access the OpenDaylight API
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
        url:
          dataType: string
          description: Api URL of the OpenDaylight Controller.
          required: 'true'
        username:
          dataType: string
          description: Username to access the OpenDaylight API
          required: 'true'
    response:
      parms:
        id:
          dataType: string
          description: device id of the controller
        name:
          dataType: string
          description: the name assigned to the controller
        physicalnetworkid:
          dataType: string
          description: the physical network to which this controller belongs to
        url:
          dataType: string
          description: the url of the controller api
        username:
          dataType: string
          description: the username to authenticate to the controller
    user_types:
    - root
  addPaloAltoFirewall:
    description: Adds a Palo Alto firewall device
    isAsync: 'true'
    name: addPaloAltoFirewall
    request:
      parms:
        networkdevicetype:
          dataType: string
          description: supports only PaloAltoFirewall
          required: 'true'
        password:
          dataType: string
          description: Credentials to reach Palo Alto firewall device
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
        url:
          dataType: string
          description: URL of the Palo Alto appliance.
          required: 'true'
        username:
          dataType: string
          description: Credentials to reach Palo Alto firewall device
          required: 'true'
    response:
      parms:
        fwdevicecapacity:
          dataType: long
          description: device capacity
        fwdeviceid:
          dataType: string
          description: device id of the Palo Alto firewall
        fwdevicename:
          dataType: string
          description: device name
        fwdevicestate:
          dataType: string
          description: device state
        ipaddress:
          dataType: string
          description: the management IP address of the external firewall
        numretries:
          dataType: string
          description: the number of times to retry requests to the external firewall
        physicalnetworkid:
          dataType: string
          description: the physical network to which this Palo Alto firewall belongs
            to
        privateinterface:
          dataType: string
          description: the private interface of the external firewall
        privatezone:
          dataType: string
          description: the private security zone of the external firewall
        provider:
          dataType: string
          description: name of the provider
        publicinterface:
          dataType: string
          description: the public interface of the external firewall
        publiczone:
          dataType: string
          description: the public security zone of the external firewall
        timeout:
          dataType: string
          description: the timeout (in seconds) for requests to the external firewall
        usageinterface:
          dataType: string
          description: the usage interface of the external firewall
        username:
          dataType: string
          description: the username that's used to log in to the external firewall
        zoneid:
          dataType: string
          description: the zone ID of the external firewall
    user_types:
    - root
  addRegion:
    description: Adds a Region
    isAsync: 'false'
    name: addRegion
    request:
      parms:
        endpoint:
          dataType: string
          description: Region service endpoint
          required: 'true'
        id:
          dataType: integer
          description: Id of the Region
          required: 'true'
        name:
          dataType: string
          description: Name of the region
          required: 'true'
    response:
      parms:
        endpoint:
          dataType: string
          description: the end point of the region
        gslbserviceenabled:
          dataType: boolean
          description: true if GSLB service is enabled in the region, false otherwise
        id:
          dataType: integer
          description: the ID of the region
        name:
          dataType: string
          description: the name of the region
        portableipserviceenabled:
          dataType: boolean
          description: true if security groups support is enabled, false otherwise
    user_types:
    - root
  addResourceDetail:
    description: Adds detail for the Resource.
    isAsync: 'true'
    name: addResourceDetail
    request:
      parms:
        details:
          dataType: map
          description: Map of (key/value pairs)
          required: 'true'
          type: map
        fordisplay:
          dataType: boolean
          description: pass false if you want this detail to be disabled for the regular
            user. True by default
          required: 'false'
          sinceVersion: '4.4'
        resourceid:
          dataType: string
          description: resource id to create the details for
          required: 'true'
        resourcetype:
          dataType: string
          description: type of the resource
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  addS3:
    description: Adds S3
    isAsync: 'false'
    name: addS3
    request:
      parms:
        accesskey:
          dataType: string
          description: S3 access key
          required: 'true'
        bucket:
          dataType: string
          description: name of the template storage bucket
          required: 'true'
        connectiontimeout:
          dataType: integer
          description: connection timeout (milliseconds)
          required: 'false'
        endpoint:
          dataType: string
          description: S3 host name
          required: 'false'
        maxerrorretry:
          dataType: integer
          description: maximum number of times to retry on error
          required: 'false'
        secretkey:
          dataType: string
          description: S3 secret key
          required: 'true'
        sockettimeout:
          dataType: integer
          description: socket timeout (milliseconds)
          required: 'false'
        usehttps:
          dataType: boolean
          description: connect to the S3 endpoint via HTTPS?
          required: 'false'
    response:
      parms:
        details:
          dataType: set
          description: the details of the image store
        id:
          dataType: string
          description: the ID of the image store
        name:
          dataType: string
          description: the name of the image store
        protocol:
          dataType: string
          description: the protocol of the image store
        providername:
          dataType: string
          description: the provider name of the image store
        scope:
          dataType: scopetype
          description: the scope of the image store
        url:
          dataType: string
          description: the url of the image store
        zoneid:
          dataType: string
          description: the Zone ID of the image store
        zonename:
          dataType: string
          description: the Zone name of the image store
    sinceVersion: 4.0.0
    user_types:
    - root
  addSecondaryStorage:
    description: Adds secondary storage.
    isAsync: 'false'
    name: addSecondaryStorage
    request:
      parms:
        url:
          dataType: string
          description: the URL for the secondary storage
          required: 'true'
        zoneid:
          dataType: uuid
          description: the Zone ID for the secondary storage
          required: 'false'
    response:
      parms:
        details:
          dataType: set
          description: the details of the image store
        id:
          dataType: string
          description: the ID of the image store
        name:
          dataType: string
          description: the name of the image store
        protocol:
          dataType: string
          description: the protocol of the image store
        providername:
          dataType: string
          description: the provider name of the image store
        scope:
          dataType: scopetype
          description: the scope of the image store
        url:
          dataType: string
          description: the url of the image store
        zoneid:
          dataType: string
          description: the Zone ID of the image store
        zonename:
          dataType: string
          description: the Zone name of the image store
    user_types:
    - root
  addStratosphereSsp:
    description: Adds stratosphere ssp server
    isAsync: 'false'
    name: addStratosphereSsp
    request:
      parms:
        name:
          dataType: string
          description: stratosphere ssp api name
          required: 'true'
        password:
          dataType: string
          description: stratosphere ssp api password
          required: 'false'
        tenantuuid:
          dataType: string
          description: stratosphere ssp tenant uuid
          required: 'false'
        url:
          dataType: string
          description: stratosphere ssp server url
          required: 'true'
        username:
          dataType: string
          description: stratosphere ssp api username
          required: 'false'
        zoneid:
          dataType: uuid
          description: the zone ID
          required: 'true'
    response:
      parms:
        hostid:
          dataType: string
          description: server id of the stratosphere ssp server
        name:
          dataType: string
          description: name
        url:
          dataType: string
          description: url of ssp endpoint
        zoneid:
          dataType: string
          description: zone which this ssp controls
    user_types:
    - root
  addSwift:
    description: Adds Swift.
    isAsync: 'false'
    name: addSwift
    request:
      parms:
        account:
          dataType: string
          description: the account for swift
          required: 'false'
        key:
          dataType: string
          description: ' key for the user for swift'
          required: 'false'
        url:
          dataType: string
          description: the URL for swift
          required: 'true'
        username:
          dataType: string
          description: the username for swift
          required: 'false'
    response:
      parms:
        details:
          dataType: set
          description: the details of the image store
        id:
          dataType: string
          description: the ID of the image store
        name:
          dataType: string
          description: the name of the image store
        protocol:
          dataType: string
          description: the protocol of the image store
        providername:
          dataType: string
          description: the provider name of the image store
        scope:
          dataType: scopetype
          description: the scope of the image store
        url:
          dataType: string
          description: the url of the image store
        zoneid:
          dataType: string
          description: the Zone ID of the image store
        zonename:
          dataType: string
          description: the Zone name of the image store
    sinceVersion: 3.0.0
    user_types:
    - root
  addTrafficMonitor:
    description: Adds Traffic Monitor Host for Direct Network Usage
    isAsync: 'false'
    name: addTrafficMonitor
    request:
      parms:
        excludezones:
          dataType: string
          description: Traffic going into the listed zones will not be metered
          required: 'false'
        includezones:
          dataType: string
          description: Traffic going into the listed zones will be metered
          required: 'false'
        url:
          dataType: string
          description: URL of the traffic monitor Host
          required: 'true'
        zoneid:
          dataType: uuid
          description: Zone in which to add the external firewall appliance.
          required: 'true'
    response:
      parms:
        id:
          dataType: string
          description: the ID of the external firewall
        ipaddress:
          dataType: string
          description: the management IP address of the external firewall
        numretries:
          dataType: string
          description: the number of times to retry requests to the external firewall
        timeout:
          dataType: string
          description: the timeout (in seconds) for requests to the external firewall
        zoneid:
          dataType: string
          description: the zone ID of the external firewall
    user_types:
    - root
  addTrafficType:
    description: Adds traffic type to a physical network
    isAsync: 'true'
    name: addTrafficType
    request:
      parms:
        hypervnetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a Hyperv host
          required: 'false'
        isolationmethod:
          dataType: string
          description: Used if physical network has multiple isolation types and traffic
            type is public. Choose which isolation method. Valid options currently
            'vlan' or 'vxlan', defaults to 'vlan'.
          required: 'false'
        kvmnetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a KVM host
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
        traffictype:
          dataType: string
          description: the trafficType to be added to the physical network
          required: 'true'
        vlan:
          dataType: string
          description: The VLAN id to be used for Management traffic by VMware host
          required: 'false'
        vmwarenetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a VMware host
          required: 'false'
        xennetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a XenServer host
          required: 'false'
    response:
      parms:
        hypervnetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a HyperV host
        id:
          dataType: string
          description: id of the network provider
        kvmnetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a KVM host
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        traffictype:
          dataType: string
          description: the trafficType to be added to the physical network
        vmwarenetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a VMware host
        xennetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a XenServer host
    sinceVersion: 3.0.0
    user_types:
    - root
  addUcsManager:
    description: Adds a Ucs manager
    isAsync: 'false'
    name: addUcsManager
    request:
      parms:
        name:
          dataType: string
          description: the name of UCS manager
          required: 'false'
        password:
          dataType: string
          description: the password of UCS
          required: 'true'
        url:
          dataType: string
          description: the name of UCS url
          required: 'true'
        username:
          dataType: string
          description: the username of UCS
          required: 'true'
        zoneid:
          dataType: uuid
          description: the Zone id for the ucs manager
          required: 'true'
    response:
      parms:
        id:
          dataType: string
          description: the ID of the ucs manager
        name:
          dataType: string
          description: the name of ucs manager
        url:
          dataType: string
          description: the url of ucs manager
        zoneid:
          dataType: string
          description: the zone ID of ucs manager
    user_types:
    - root
  addVpnUser:
    description: Adds vpn users
    isAsync: 'true'
    name: addVpnUser
    request:
      parms:
        account:
          dataType: string
          description: an optional account for the vpn user. Must be used with domainId.
          required: 'false'
        domainid:
          dataType: uuid
          description: an optional domainId for the vpn user. If the account parameter
            is used, domainId must also be used.
          required: 'false'
        password:
          dataType: string
          description: password for the username
          required: 'true'
        projectid:
          dataType: uuid
          description: add vpn user to the specific project
          required: 'false'
        username:
          dataType: string
          description: username for the vpn user
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account of the remote access vpn
        domain:
          dataType: string
          description: the domain name of the account of the remote access vpn
        domainid:
          dataType: string
          description: the domain id of the account of the remote access vpn
        id:
          dataType: string
          description: the vpn userID
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        state:
          dataType: string
          description: the state of the Vpn User
        username:
          dataType: string
          description: the username of the vpn user
    user_types:
    - domain
    - root
    - user
  archiveAlerts:
    description: Archive one or more alerts.
    isAsync: 'false'
    name: archiveAlerts
    request:
      parms:
        enddate:
          dataType: date
          description: end date range to archive alerts (including) this date (use
            format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
          required: 'false'
        ids:
          dataType: list
          description: the IDs of the alerts
          required: 'false'
          type: list
        startdate:
          dataType: date
          description: start date range to archive alerts (including) this date (use
            format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
          required: 'false'
        type:
          dataType: string
          description: archive by alert type
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  archiveEvents:
    description: Archive one or more events.
    isAsync: 'false'
    name: archiveEvents
    request:
      parms:
        enddate:
          dataType: date
          description: end date range to archive events (including) this date (use
            format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
          required: 'false'
        ids:
          dataType: list
          description: the IDs of the events
          required: 'false'
          type: list
        startdate:
          dataType: date
          description: start date range to archive events (including) this date (use
            format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
          required: 'false'
        type:
          dataType: string
          description: archive by event type
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  assignCertToLoadBalancer:
    description: Assigns a certificate to a Load Balancer Rule
    isAsync: 'true'
    name: assignCertToLoadBalancer
    request:
      parms:
        certid:
          dataType: uuid
          description: the ID of the certificate
          required: 'true'
        lbruleid:
          dataType: uuid
          description: the ID of the load balancer rule
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  assignToGlobalLoadBalancerRule:
    description: Assign load balancer rule or list of load balancer rules to a global
      load balancer rules.
    isAsync: 'true'
    name: assignToGlobalLoadBalancerRule
    request:
      parms:
        gslblbruleweightsmap:
          dataType: map
          description: Map of LB rule id's and corresponding weights (between 1-100)
            in the GSLB rule, if not specified weight of a LB rule is defaulted to
            1. Specified as 'gslblbruleweightsmap[0].loadbalancerid=UUID&gslblbruleweightsmap[0].weight=10'
          required: 'false'
          type: map
        id:
          dataType: uuid
          description: the ID of the global load balancer rule
          required: 'true'
        loadbalancerrulelist:
          dataType: list
          description: the list load balancer rules that will be assigned to gloabal
            load balacner rule
          required: 'true'
          type: list
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  assignToLoadBalancerRule:
    description: Assigns virtual machine or a list of virtual machines to a load balancer
      rule.
    isAsync: 'true'
    name: assignToLoadBalancerRule
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the load balancer rule
          required: 'true'
        virtualmachineids:
          dataType: list
          description: the list of IDs of the virtual machine that are being assigned
            to the load balancer rule(i.e. virtualMachineIds=1,2,3)
          required: 'false'
          type: list
        vmidipmap:
          dataType: map
          description: VM ID and IP map, vmidipmap[0].vmid=1 vmidipmap[0].ip=10.1.1.75
          required: 'false'
          sinceVersion: '4.4'
          type: map
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  assignVirtualMachine:
    description: Change ownership of a VM from one account to another. This API is
      available for Basic zones with security groups and Advanced zones with guest
      networks. A root administrator can reassign a VM from any account to any other
      account in any domain. A domain administrator can reassign a VM to any account
      in the same domain.
    isAsync: 'false'
    name: assignVirtualMachine
    request:
      parms:
        account:
          dataType: string
          description: account name of the new VM owner.
          required: 'true'
        domainid:
          dataType: uuid
          description: domain id of the new VM owner.
          required: 'true'
        networkids:
          dataType: list
          description: list of new network ids in which the moved VM will participate.
            In case no network ids are provided the VM will be part of the default
            network for that zone. In case there is no network yet created for the
            new account the default network will be created.
          required: 'false'
          type: list
        securitygroupids:
          dataType: list
          description: list of security group ids to be applied on the virtual machine.
            In case no security groups are provided the VM is part of the default
            security group.
          required: 'false'
          type: list
        virtualmachineid:
          dataType: uuid
          description: id of the VM to be moved
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
  associateIpAddress:
    description: Acquires and associates a public IP to an account.
    isAsync: 'true'
    name: associateIpAddress
    request:
      parms:
        account:
          dataType: string
          description: the account to associate with this IP address
          required: 'false'
        domainid:
          dataType: uuid
          description: the ID of the domain to associate with this IP address
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the ip to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        isportable:
          dataType: boolean
          description: should be set to true if public IP is required to be transferable
            across zones, if not specified defaults to false
          required: 'false'
        networkid:
          dataType: uuid
          description: The network this ip address should be associated to.
          required: 'false'
        projectid:
          dataType: uuid
          description: Deploy vm for the project
          required: 'false'
        regionid:
          dataType: integer
          description: region ID from where portable ip is to be associated.
          required: 'false'
        vpcid:
          dataType: uuid
          description: the VPC you want the ip address to be associated with
          required: 'false'
        zoneid:
          dataType: uuid
          description: the ID of the availability zone you want to acquire an public
            IP address from
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account the public IP address is associated with
        allocated:
          dataType: date
          description: date the public IP address was acquired
        associatednetworkid:
          dataType: string
          description: the ID of the Network associated with the IP address
        associatednetworkname:
          dataType: string
          description: the name of the Network associated with the IP address
        domain:
          dataType: string
          description: the domain the public IP address is associated with
        domainid:
          dataType: string
          description: the domain ID the public IP address is associated with
        fordisplay:
          dataType: boolean
          description: is public ip for display to the regular user
          sinceVersion: '4.4'
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the IP address
        id:
          dataType: string
          description: public IP address id
        ipaddress:
          dataType: string
          description: public IP address
        isportable:
          dataType: boolean
          description: is public IP portable across the zones
        issourcenat:
          dataType: boolean
          description: true if the IP address is a source nat address, false otherwise
        isstaticnat:
          dataType: boolean
          description: true if this ip is for static nat, false otherwise
        issystem:
          dataType: boolean
          description: true if this ip is system ip (was allocated as a part of deployVm
            or createLbRule)
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        networkid:
          dataType: string
          description: the ID of the Network where ip belongs to
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        purpose:
          dataType: string
          description: purpose of the IP address. In Acton this value is not null
            for Ips with isSystem=true, and can have either StaticNat or LB value
        state:
          dataType: string
          description: 'State of the ip address. Can be: Allocatin, Allocated and
            Releasing'
        tags:
          dataType: list
          description: the list of resource tags associated with ip address
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        virtualmachinedisplayname:
          dataType: string
          description: virutal machine display name the ip address is assigned to
            (not null only for static nat Ip)
        virtualmachineid:
          dataType: string
          description: virutal machine id the ip address is assigned to (not null
            only for static nat Ip)
        virtualmachinename:
          dataType: string
          description: virutal machine name the ip address is assigned to (not null
            only for static nat Ip)
        vlanid:
          dataType: string
          description: the ID of the VLAN associated with the IP address. This parameter
            is visible to ROOT admins only
        vlanname:
          dataType: string
          description: the VLAN associated with the IP address
        vmipaddress:
          dataType: string
          description: virutal machine (dnat) ip address (not null only for static
            nat Ip)
        vpcid:
          dataType: string
          description: VPC the ip belongs to
        zoneid:
          dataType: string
          description: the ID of the zone the public IP address belongs to
        zonename:
          dataType: string
          description: the name of the zone the public IP address belongs to
    user_types:
    - domain
    - root
    - user
  associateUcsProfileToBlade:
    description: associate a profile to a blade
    isAsync: 'true'
    name: associateUcsProfileToBlade
    request:
      parms:
        bladeid:
          dataType: uuid
          description: blade id
          required: 'true'
        profiledn:
          dataType: string
          description: profile dn
          required: 'true'
        ucsmanagerid:
          dataType: uuid
          description: ucs manager id
          required: 'true'
    response:
      parms:
        bladedn:
          dataType: string
          description: ucs blade dn
        hostid:
          dataType: string
          description: cloudstack host id this blade associates to
        id:
          dataType: string
          description: ucs blade id
        profiledn:
          dataType: string
          description: associated ucs profile dn
        ucsmanagerid:
          dataType: string
          description: ucs manager id
    user_types:
    - root
  attachIso:
    description: Attaches an ISO to a virtual machine.
    isAsync: 'true'
    name: attachIso
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the ISO file
          required: 'true'
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  attachVolume:
    description: Attaches a disk volume to a virtual machine.
    isAsync: 'true'
    name: attachVolume
    request:
      parms:
        deviceid:
          dataType: long
          description: the ID of the device to map the volume to within the guest
            OS. If no deviceId is passed in, the next available deviceId will be chosen.
            Possible values for a Linux OS are:* 0 - /dev/xvda* 1 - /dev/xvdb* 2 -
            /dev/xvdc* 4 - /dev/xvde* 5 - /dev/xvdf* 6 - /dev/xvdg* 7 - /dev/xvdh*
            8 - /dev/xvdi* 9 - /dev/xvdj
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the disk volume
          required: 'true'
        virtualmachineid:
          dataType: uuid
          description: '    the ID of the virtual machine'
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the disk volume
        attached:
          dataType: date
          description: the date the volume was attached to a VM instance
        chaininfo:
          dataType: string
          description: the chain info of the volume
          sinceVersion: '4.4'
        created:
          dataType: date
          description: the date the disk volume was created
        destroyed:
          dataType: boolean
          description: the boolean state of whether the volume is destroyed or not
        deviceid:
          dataType: long
          description: the ID of the device on user vm the volume is attahed to. This
            tag is not returned when the volume is detached.
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the disk volume
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the disk volume
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the disk volume
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the disk volume
        diskofferingdisplaytext:
          dataType: string
          description: the display text of the disk offering
        diskofferingid:
          dataType: string
          description: ID of the disk offering
        diskofferingname:
          dataType: string
          description: name of the disk offering
        displayvolume:
          dataType: boolean
          description: an optional field whether to the display the volume to the
            end user or not.
        domain:
          dataType: string
          description: the domain associated with the disk volume
        domainid:
          dataType: string
          description: the ID of the domain associated with the disk volume
        hypervisor:
          dataType: string
          description: Hypervisor the volume belongs to
        id:
          dataType: string
          description: ID of the disk volume
        isextractable:
          dataType: boolean
          description: true if the volume is extractable, false otherwise
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        maxiops:
          dataType: long
          description: max iops of the disk volume
        miniops:
          dataType: long
          description: min iops of the disk volume
        name:
          dataType: string
          description: name of the disk volume
        path:
          dataType: string
          description: the path of the volume
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes.
        quiescevm:
          dataType: boolean
          description: need quiesce vm or not when taking snapshot
          sinceVersion: '4.3'
        serviceofferingdisplaytext:
          dataType: string
          description: the display text of the service offering for root disk
        serviceofferingid:
          dataType: string
          description: ID of the service offering for root disk
        serviceofferingname:
          dataType: string
          description: name of the service offering for root disk
        size:
          dataType: long
          description: size of the disk volume
        snapshotid:
          dataType: string
          description: ID of the snapshot from which this volume was created
        state:
          dataType: string
          description: the state of the disk volume
        status:
          dataType: string
          description: the status of the volume
        storage:
          dataType: string
          description: name of the primary storage hosting the disk volume
        storageid:
          dataType: string
          description: id of the primary storage hosting the disk volume; returned
            to admin user only
          sinceVersion: '4.3'
        storagetype:
          dataType: string
          description: shared or local storage
        tags:
          dataType: set
          description: the list of resource tags associated with volume
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        type:
          dataType: string
          description: type of the disk volume (ROOT or DATADISK)
        virtualmachineid:
          dataType: string
          description: id of the virtual machine
        vmdisplayname:
          dataType: string
          description: display name of the virtual machine
        vmname:
          dataType: string
          description: name of the virtual machine
        vmstate:
          dataType: string
          description: state of the virtual machine
        zoneid:
          dataType: string
          description: ID of the availability zone
        zonename:
          dataType: string
          description: name of the availability zone
    user_types:
    - domain
    - root
    - user
  authorizeSecurityGroupEgress:
    description: Authorizes a particular egress rule for this security group
    isAsync: 'true'
    name: authorizeSecurityGroupEgress
    request:
      parms:
        account:
          dataType: string
          description: an optional account for the security group. Must be used with
            domainId.
          required: 'false'
        cidrlist:
          dataType: list
          description: the cidr list associated
          required: 'false'
          type: list
        domainid:
          dataType: uuid
          description: an optional domainId for the security group. If the account
            parameter is used, domainId must also be used.
          required: 'false'
        endport:
          dataType: integer
          description: end port for this egress rule
          required: 'false'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
          required: 'false'
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
          required: 'false'
        projectid:
          dataType: uuid
          description: an optional project of the security group
          required: 'false'
        protocol:
          dataType: string
          description: TCP is default. UDP is the other supported protocol
          required: 'false'
        securitygroupid:
          dataType: uuid
          description: The ID of the security group. Mutually exclusive with securityGroupName
            parameter
          required: 'false'
        securitygroupname:
          dataType: string
          description: The name of the security group. Mutually exclusive with securityGroupName
            parameter
          required: 'false'
        startport:
          dataType: integer
          description: start port for this egress rule
          required: 'false'
        usersecuritygrouplist:
          dataType: map
          description: user to security group mapping
          required: 'false'
          type: map
    response:
      parms:
        account:
          dataType: string
          description: account owning the security group rule
        cidr:
          dataType: string
          description: the CIDR notation for the base IP address of the security group
            rule
        endport:
          dataType: integer
          description: 'the ending IP of the security group rule '
        icmpcode:
          dataType: integer
          description: the code for the ICMP message response
        icmptype:
          dataType: integer
          description: the type of the ICMP message response
        protocol:
          dataType: string
          description: the protocol of the security group rule
        ruleid:
          dataType: string
          description: the id of the security group rule
        securitygroupname:
          dataType: string
          description: security group name
        startport:
          dataType: integer
          description: the starting IP of the security group rule
        tags:
          dataType: set
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  authorizeSecurityGroupIngress:
    description: Authorizes a particular ingress rule for this security group
    isAsync: 'true'
    name: authorizeSecurityGroupIngress
    request:
      parms:
        account:
          dataType: string
          description: an optional account for the security group. Must be used with
            domainId.
          required: 'false'
        cidrlist:
          dataType: list
          description: the cidr list associated
          required: 'false'
          type: list
        domainid:
          dataType: uuid
          description: an optional domainId for the security group. If the account
            parameter is used, domainId must also be used.
          required: 'false'
        endport:
          dataType: integer
          description: end port for this ingress rule
          required: 'false'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
          required: 'false'
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
          required: 'false'
        projectid:
          dataType: uuid
          description: an optional project of the security group
          required: 'false'
        protocol:
          dataType: string
          description: TCP is default. UDP is the other supported protocol
          required: 'false'
        securitygroupid:
          dataType: uuid
          description: The ID of the security group. Mutually exclusive with securityGroupName
            parameter
          required: 'false'
        securitygroupname:
          dataType: string
          description: The name of the security group. Mutually exclusive with securityGroupName
            parameter
          required: 'false'
        startport:
          dataType: integer
          description: start port for this ingress rule
          required: 'false'
        usersecuritygrouplist:
          dataType: map
          description: user to security group mapping
          required: 'false'
          type: map
    response:
      parms:
        account:
          dataType: string
          description: account owning the security group rule
        cidr:
          dataType: string
          description: the CIDR notation for the base IP address of the security group
            rule
        endport:
          dataType: integer
          description: 'the ending IP of the security group rule '
        icmpcode:
          dataType: integer
          description: the code for the ICMP message response
        icmptype:
          dataType: integer
          description: the type of the ICMP message response
        protocol:
          dataType: string
          description: the protocol of the security group rule
        ruleid:
          dataType: string
          description: the id of the security group rule
        securitygroupname:
          dataType: string
          description: security group name
        startport:
          dataType: integer
          description: the starting IP of the security group rule
        tags:
          dataType: set
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    user_types:
    - domain
    - root
    - user
  cancelHostMaintenance:
    description: Cancels host maintenance.
    isAsync: 'true'
    name: cancelHostMaintenance
    request:
      parms:
        dataType: uuid
        description: the host ID
        name: id
        required: 'true'
    response:
      parms:
        averageload:
          dataType: long
          description: the cpu average load on the host
        capabilities:
          dataType: string
          description: capabilities of the host
        clusterid:
          dataType: string
          description: the cluster ID of the host
        clustername:
          dataType: string
          description: the cluster name of the host
        clustertype:
          dataType: string
          description: the cluster type of the cluster that host belongs to
        cpuallocated:
          dataType: string
          description: the amount of the host's CPU currently allocated
        cpunumber:
          dataType: integer
          description: the CPU number of the host
        cpusockets:
          dataType: integer
          description: the number of CPU sockets on the host
        cpuspeed:
          dataType: long
          description: the CPU speed of the host
        cpuused:
          dataType: string
          description: the amount of the host's CPU currently used
        cpuwithoverprovisioning:
          dataType: string
          description: 'the amount of the host''s CPU after applying the cpu.overprovisioning.factor '
        created:
          dataType: date
          description: the date and time the host was created
        details:
          dataType: map
          description: Host details in key/value pairs.
          sinceVersion: '4.5'
        disconnected:
          dataType: date
          description: true if the host is disconnected. False otherwise.
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the host
        events:
          dataType: string
          description: events available for the host
        gpugroup:
          dataType: list
          description: GPU cards present in the host
          parms:
            gpugroupname:
              dataType: string
              description: GPU cards present in the host
            vgpu:
              dataType: list
              description: the list of enabled vGPUs
              parms:
                maxcapacity:
                  dataType: long
                  description: Maximum vgpu can be created with this vgpu type on
                    the given gpu group
                maxheads:
                  dataType: long
                  description: Maximum displays per user
                maxresolutionx:
                  dataType: long
                  description: Maximum X resolution per display
                maxresolutiony:
                  dataType: long
                  description: Maximum Y resolution per display
                maxvgpuperpgpu:
                  dataType: long
                  description: Maximum no. of vgpu per gpu card (pgpu)
                remainingcapacity:
                  dataType: long
                  description: Remaining capacity in terms of no. of more VMs that
                    can be deployped with this vGPU type
                vgputype:
                  dataType: string
                  description: Model Name of vGPU
                videoram:
                  dataType: long
                  description: Video RAM for this vGPU type
          sinceVersion: '4.4'
        hahost:
          dataType: boolean
          description: true if the host is Ha host (dedicated to vms started by HA
            process; false otherwise
        hasenoughcapacity:
          dataType: boolean
          description: true if this host has enough CPU and RAM capacity to migrate
            a VM to it, false otherwise
        hosttags:
          dataType: string
          description: comma-separated list of tags for the host
        hypervisor:
          dataType: hypervisortype
          description: the host hypervisor
        hypervisorversion:
          dataType: string
          description: the hypervisor version
        id:
          dataType: string
          description: the ID of the host
        ipaddress:
          dataType: string
          description: the IP address of the host
        islocalstorageactive:
          dataType: boolean
          description: true if local storage is active, false otherwise
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        lastpinged:
          dataType: date
          description: the date and time the host was last pinged
        managementserverid:
          dataType: long
          description: the management server ID of the host
        memoryallocated:
          dataType: long
          description: the amount of the host's memory currently allocated
        memorytotal:
          dataType: long
          description: the memory total of the host
        memoryused:
          dataType: long
          description: the amount of the host's memory currently used
        name:
          dataType: string
          description: the name of the host
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the host
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        oscategoryid:
          dataType: string
          description: the OS category ID of the host
        oscategoryname:
          dataType: string
          description: the OS category name of the host
        podid:
          dataType: string
          description: the Pod ID of the host
        podname:
          dataType: string
          description: the Pod name of the host
        removed:
          dataType: date
          description: the date and time the host was removed
        resourcestate:
          dataType: string
          description: the resource state of the host
        state:
          dataType: status
          description: the state of the host
        suitableformigration:
          dataType: boolean
          description: true if this host is suitable(has enough capacity and satisfies
            all conditions like hosttags, max guests vm limit etc) to migrate a VM
            to it , false otherwise
        type:
          dataType: type
          description: the host type
        version:
          dataType: string
          description: the host version
        zoneid:
          dataType: string
          description: the Zone ID of the host
        zonename:
          dataType: string
          description: the Zone name of the host
    user_types:
    - root
  cancelStorageMaintenance:
    description: Cancels maintenance for primary storage
    isAsync: 'true'
    name: cancelStorageMaintenance
    request:
      parms:
        dataType: uuid
        description: the primary storage ID
        name: id
        required: 'true'
    response:
      parms:
        capacityiops:
          dataType: long
          description: IOPS CloudStack can provision from this storage pool
        clusterid:
          dataType: string
          description: the ID of the cluster for the storage pool
        clustername:
          dataType: string
          description: the name of the cluster for the storage pool
        created:
          dataType: date
          description: the date and time the storage pool was created
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the storage pool
        disksizeused:
          dataType: long
          description: the host's currently used disk size
        hypervisor:
          dataType: string
          description: the hypervisor type of the storage pool
        id:
          dataType: string
          description: the ID of the storage pool
        ipaddress:
          dataType: string
          description: the IP address of the storage pool
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the name of the storage pool
        overprovisionfactor:
          dataType: string
          description: the overprovisionfactor for the storage pool
          sinceVersion: '4.4'
        path:
          dataType: string
          description: the storage pool path
        podid:
          dataType: string
          description: the Pod ID of the storage pool
        podname:
          dataType: string
          description: the Pod name of the storage pool
        scope:
          dataType: string
          description: the scope of the storage pool
        state:
          dataType: storagepoolstatus
          description: the state of the storage pool
        storagecapabilities:
          dataType: map
          description: the storage pool capabilities
        suitableformigration:
          dataType: boolean
          description: true if this pool is suitable to migrate a volume, false otherwise
        tags:
          dataType: string
          description: the tags for the storage pool
        type:
          dataType: string
          description: the storage pool type
        zoneid:
          dataType: string
          description: the Zone ID of the storage pool
        zonename:
          dataType: string
          description: the Zone name of the storage pool
    user_types:
    - root
  changeServiceForRouter:
    description: Upgrades domain router to a new service offering
    isAsync: 'false'
    name: changeServiceForRouter
    request:
      parms:
        id:
          dataType: uuid
          description: The ID of the router
          required: 'true'
        serviceofferingid:
          dataType: uuid
          description: the service offering ID to apply to the domain router
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the router
        created:
          dataType: date
          description: the date and time the router was created
        dns1:
          dataType: string
          description: the first DNS for the router
        dns2:
          dataType: string
          description: the second DNS for the router
        domain:
          dataType: string
          description: the domain associated with the router
        domainid:
          dataType: string
          description: the domain ID associated with the router
        gateway:
          dataType: string
          description: the gateway for the router
        guestipaddress:
          dataType: string
          description: the guest IP address for the router
        guestmacaddress:
          dataType: string
          description: the guest MAC address for the router
        guestnetmask:
          dataType: string
          description: the guest netmask for the router
        guestnetworkid:
          dataType: string
          description: the ID of the corresponding guest network
        hostid:
          dataType: string
          description: the host ID for the router
        hostname:
          dataType: string
          description: the hostname for the router
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the id of the router
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the router
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the router
        isredundantrouter:
          dataType: boolean
          description: if this router is an redundant virtual router
        linklocalip:
          dataType: string
          description: the link local IP address for the router
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the router
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the router
        linklocalnetworkid:
          dataType: string
          description: the ID of the corresponding link local network
        name:
          dataType: string
          description: the name of the router
        networkdomain:
          dataType: string
          description: the network domain for the router
        nic:
          dataType: set
          description: the list of nics associated with the router
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
          sinceVersion: '4.0'
        podid:
          dataType: string
          description: the Pod ID for the router
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        publicip:
          dataType: string
          description: the public IP address for the router
        publicmacaddress:
          dataType: string
          description: the public MAC address for the router
        publicnetmask:
          dataType: string
          description: the public netmask for the router
        publicnetworkid:
          dataType: string
          description: the ID of the corresponding public network
        redundantstate:
          dataType: string
          description: the state of redundant virtual router
        requiresupgrade:
          dataType: boolean
          description: true if the router template requires upgrader
        role:
          dataType: string
          description: role of the domain router
        scriptsversion:
          dataType: string
          description: the version of scripts
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        state:
          dataType: state
          description: the state of the router
        templateid:
          dataType: string
          description: the template ID for the router
        version:
          dataType: string
          description: the version of template
        vpcid:
          dataType: string
          description: VPC the router belongs to
        zoneid:
          dataType: string
          description: the Zone ID for the router
        zonename:
          dataType: string
          description: the Zone name for the router
    user_types:
    - domain
    - root
  changeServiceForSystemVm:
    description: Changes the service offering for a system vm (console proxy or secondary
      storage). The system vm must be in a "Stopped" state for this command to take
      effect.
    isAsync: 'false'
    name: changeServiceForSystemVm
    request:
      parms:
        details:
          dataType: map
          description: name value pairs of custom parameters for cpu, memory and cpunumber.
            example details[i].name=value
          required: 'false'
          type: map
        id:
          dataType: uuid
          description: The ID of the system vm
          required: 'true'
        serviceofferingid:
          dataType: uuid
          description: the service offering ID to apply to the system vm
          required: 'true'
    response:
      parms:
        activeviewersessions:
          dataType: integer
          description: the number of active console sessions for the console proxy
            system vm
        created:
          dataType: date
          description: the date and time the system VM was created
        dns1:
          dataType: string
          description: the first DNS for the system VM
        dns2:
          dataType: string
          description: the second DNS for the system VM
        gateway:
          dataType: string
          description: the gateway for the system VM
        hostid:
          dataType: string
          description: the host ID for the system VM
        hostname:
          dataType: string
          description: the hostname for the system VM
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the system VM
        jobid:
          dataType: string
          description: the job ID associated with the system VM. This is only displayed
            if the router listed is part of a currently running asynchronous job.
        jobstatus:
          dataType: integer
          description: the job status associated with the system VM.  This is only
            displayed if the router listed is part of a currently running asynchronous
            job.
        linklocalip:
          dataType: string
          description: the link local IP address for the system vm
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the system vm
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the system vm
        name:
          dataType: string
          description: the name of the system VM
        networkdomain:
          dataType: string
          description: the network domain for the system VM
        podid:
          dataType: string
          description: the Pod ID for the system VM
        privateip:
          dataType: string
          description: the private IP address for the system VM
        privatemacaddress:
          dataType: string
          description: the private MAC address for the system VM
        privatenetmask:
          dataType: string
          description: the private netmask for the system VM
        publicip:
          dataType: string
          description: the public IP address for the system VM
        publicmacaddress:
          dataType: string
          description: the public MAC address for the system VM
        publicnetmask:
          dataType: string
          description: the public netmask for the system VM
        state:
          dataType: string
          description: the state of the system VM
        systemvmtype:
          dataType: string
          description: the system VM type
        templateid:
          dataType: string
          description: the template ID for the system VM
        zoneid:
          dataType: string
          description: the Zone ID for the system VM
        zonename:
          dataType: string
          description: the Zone name for the system VM
    user_types:
    - root
  changeServiceForVirtualMachine:
    description: Changes the service offering for a virtual machine. The virtual machine
      must be in a "Stopped" state for this command to take effect.
    isAsync: 'false'
    name: changeServiceForVirtualMachine
    request:
      parms:
        details:
          dataType: map
          description: name value pairs of custom parameters for cpu, memory and cpunumber.
            example details[i].name=value
          required: 'false'
          type: map
        id:
          dataType: uuid
          description: The ID of the virtual machine
          required: 'true'
        serviceofferingid:
          dataType: uuid
          description: the service offering ID to apply to the virtual machine
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  cleanVMReservations:
    description: Cleanups VM reservations in the database.
    isAsync: 'true'
    name: cleanVMReservations
    request: {}
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  configureInternalLoadBalancerElement:
    description: Configures an Internal Load Balancer element.
    isAsync: 'true'
    name: configureInternalLoadBalancerElement
    request:
      parms:
        enabled:
          dataType: boolean
          description: Enables/Disables the Internal Load Balancer element
          required: 'true'
        id:
          dataType: uuid
          description: the ID of the internal lb provider
          required: 'true'
    response:
      parms:
        enabled:
          dataType: boolean
          description: Enabled/Disabled the element
        id:
          dataType: string
          description: the id of the internal load balancer element
        nspid:
          dataType: string
          description: the physical network service provider id of the element
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
  configureNetscalerLoadBalancer:
    description: configures a netscaler load balancer device
    isAsync: 'true'
    name: configureNetscalerLoadBalancer
    request:
      parms:
        inline:
          dataType: boolean
          description: true if netscaler load balancer is intended to be used in in-line
            with firewall, false if netscaler load balancer will side-by-side with
            firewall
          required: 'false'
        lbdevicecapacity:
          dataType: long
          description: capacity of the device, Capacity will be interpreted as number
            of networks device can handle
          required: 'false'
        lbdevicededicated:
          dataType: boolean
          description: true if this netscaler device to dedicated for a account, false
            if the netscaler device will be shared by multiple accounts
          required: 'false'
        lbdeviceid:
          dataType: uuid
          description: Netscaler load balancer device ID
          required: 'true'
        podids:
          dataType: list
          description: Used when NetScaler device is provider of EIP service. This
            parameter represents the list of pod's, for which there exists a policy
            based route on datacenter L3 router to route pod's subnet IP to a NetScaler
            device.
          required: 'false'
          type: list
    response:
      parms:
        gslbprovider:
          dataType: boolean
          description: true if NetScaler device is provisioned to be a GSLB service
            provider
        gslbproviderprivateip:
          dataType: string
          description: private IP of the NetScaler representing GSLB site
        gslbproviderpublicip:
          dataType: string
          description: public IP of the NetScaler representing GSLB site
        ipaddress:
          dataType: string
          description: the management IP address of the external load balancer
        isexclusivegslbprovider:
          dataType: boolean
          description: true if NetScaler device is provisioned exclusively to be a
            GSLB service provider
        lbdevicecapacity:
          dataType: long
          description: device capacity
        lbdevicededicated:
          dataType: boolean
          description: true if device is dedicated for an account
        lbdeviceid:
          dataType: string
          description: device id of the netscaler load balancer
        lbdevicename:
          dataType: string
          description: device name
        lbdevicestate:
          dataType: string
          description: device state
        physicalnetworkid:
          dataType: string
          description: the physical network to which this netscaler device belongs
            to
        podids:
          dataType: list
          description: Used when NetScaler device is provider of EIP service. This
            parameter represents the list of pod's, for which there exists a policy
            based route on datacenter L3 router to route pod's subnet IP to a NetScaler
            device.
        privateinterface:
          dataType: string
          description: the private interface of the load balancer
        provider:
          dataType: string
          description: name of the provider
        publicinterface:
          dataType: string
          description: the public interface of the load balancer
    user_types:
    - root
  configureOvsElement:
    description: Configures an ovs element.
    isAsync: 'true'
    name: configureOvsElement
    request:
      parms:
        enabled:
          dataType: boolean
          description: Enabled/Disabled the service provider
          required: 'true'
        id:
          dataType: uuid
          description: the ID of the ovs provider
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the provider
        domain:
          dataType: string
          description: the domain associated with the provider
        domainid:
          dataType: string
          description: the domain ID associated with the provider
        enabled:
          dataType: boolean
          description: Enabled/Disabled the service provider
        id:
          dataType: string
          description: the id of the ovs
        nspid:
          dataType: string
          description: the physical network service provider id of the provider
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
    user_types:
    - domain
    - root
  configurePaloAltoFirewall:
    description: Configures a Palo Alto firewall device
    isAsync: 'true'
    name: configurePaloAltoFirewall
    request:
      parms:
        fwdevicecapacity:
          dataType: long
          description: capacity of the firewall device, Capacity will be interpreted
            as number of networks device can handle
          required: 'false'
        fwdeviceid:
          dataType: uuid
          description: Palo Alto firewall device ID
          required: 'true'
    response:
      parms:
        fwdevicecapacity:
          dataType: long
          description: device capacity
        fwdeviceid:
          dataType: string
          description: device id of the Palo Alto firewall
        fwdevicename:
          dataType: string
          description: device name
        fwdevicestate:
          dataType: string
          description: device state
        ipaddress:
          dataType: string
          description: the management IP address of the external firewall
        numretries:
          dataType: string
          description: the number of times to retry requests to the external firewall
        physicalnetworkid:
          dataType: string
          description: the physical network to which this Palo Alto firewall belongs
            to
        privateinterface:
          dataType: string
          description: the private interface of the external firewall
        privatezone:
          dataType: string
          description: the private security zone of the external firewall
        provider:
          dataType: string
          description: name of the provider
        publicinterface:
          dataType: string
          description: the public interface of the external firewall
        publiczone:
          dataType: string
          description: the public security zone of the external firewall
        timeout:
          dataType: string
          description: the timeout (in seconds) for requests to the external firewall
        usageinterface:
          dataType: string
          description: the usage interface of the external firewall
        username:
          dataType: string
          description: the username that's used to log in to the external firewall
        zoneid:
          dataType: string
          description: the zone ID of the external firewall
    user_types:
    - root
  configureVirtualRouterElement:
    description: Configures a virtual router element.
    isAsync: 'true'
    name: configureVirtualRouterElement
    request:
      parms:
        enabled:
          dataType: boolean
          description: Enabled/Disabled the service provider
          required: 'true'
        id:
          dataType: uuid
          description: the ID of the virtual router provider
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the provider
        domain:
          dataType: string
          description: the domain associated with the provider
        domainid:
          dataType: string
          description: the domain ID associated with the provider
        enabled:
          dataType: boolean
          description: Enabled/Disabled the service provider
        id:
          dataType: string
          description: the id of the router
        nspid:
          dataType: string
          description: the physical network service provider id of the provider
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
    user_types:
    - domain
    - root
  copyIso:
    description: Copies an iso from one zone to another.
    isAsync: 'true'
    name: copyIso
    request:
      parms:
        destzoneid:
          dataType: uuid
          description: ID of the zone the template is being copied to.
          required: 'true'
        id:
          dataType: uuid
          description: Template ID.
          required: 'true'
        sourcezoneid:
          dataType: uuid
          description: ID of the zone the template is currently hosted on. If not
            specified and template is cross-zone, then we will sync this template
            to region wide image store.
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name to which the template belongs
        accountid:
          dataType: string
          description: the account id to which the template belongs
        bootable:
          dataType: boolean
          description: true if the ISO is bootable, false otherwise
        checksum:
          dataType: string
          description: checksum of the template
        created:
          dataType: date
          description: the date this template was created
        crossZones:
          dataType: boolean
          description: true if the template is managed across all Zones, false otherwise
        details:
          dataType: map
          description: additional key/value details tied with template
        displaytext:
          dataType: string
          description: the template display text
        domain:
          dataType: string
          description: the name of the domain to which the template belongs
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        format:
          dataType: imageformat
          description: the format of the template.
        hostid:
          dataType: string
          description: the ID of the secondary storage host for the template
        hostname:
          dataType: string
          description: the name of the secondary storage host for the template
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the template ID
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
        isextractable:
          dataType: boolean
          description: true if the template is extractable, false otherwise
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        isready:
          dataType: boolean
          description: true if the template is ready to be deployed from, false otherwise.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the template name
        ostypeid:
          dataType: string
          description: the ID of the OS type for this template.
        ostypename:
          dataType: string
          description: the name of the OS type for this template.
        passwordenabled:
          dataType: boolean
          description: true if the reset password feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the template
        projectid:
          dataType: string
          description: the project id of the template
        removed:
          dataType: date
          description: the date this template was removed
        size:
          dataType: long
          description: the size of the template
        sourcetemplateid:
          dataType: string
          description: the template ID of the parent template if present
        sshkeyenabled:
          dataType: boolean
          description: true if template is sshkey enabled, false otherwise
        status:
          dataType: string
          description: the status of the template
        tags:
          dataType: set
          description: the list of resource tags associated with tempate
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatetag:
          dataType: string
          description: the tag of this template
        templatetype:
          dataType: string
          description: the type of the template
        zoneid:
          dataType: string
          description: the ID of the zone for this template
        zonename:
          dataType: string
          description: the name of the zone for this template
    user_types:
    - domain
    - root
    - user
  copyTemplate:
    description: Copies a template from one zone to another.
    isAsync: 'true'
    name: copyTemplate
    request:
      parms:
        destzoneid:
          dataType: uuid
          description: ID of the zone the template is being copied to.
          required: 'true'
        id:
          dataType: uuid
          description: Template ID.
          required: 'true'
        sourcezoneid:
          dataType: uuid
          description: ID of the zone the template is currently hosted on. If not
            specified and template is cross-zone, then we will sync this template
            to region wide image store.
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name to which the template belongs
        accountid:
          dataType: string
          description: the account id to which the template belongs
        bootable:
          dataType: boolean
          description: true if the ISO is bootable, false otherwise
        checksum:
          dataType: string
          description: checksum of the template
        created:
          dataType: date
          description: the date this template was created
        crossZones:
          dataType: boolean
          description: true if the template is managed across all Zones, false otherwise
        details:
          dataType: map
          description: additional key/value details tied with template
        displaytext:
          dataType: string
          description: the template display text
        domain:
          dataType: string
          description: the name of the domain to which the template belongs
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        format:
          dataType: imageformat
          description: the format of the template.
        hostid:
          dataType: string
          description: the ID of the secondary storage host for the template
        hostname:
          dataType: string
          description: the name of the secondary storage host for the template
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the template ID
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
        isextractable:
          dataType: boolean
          description: true if the template is extractable, false otherwise
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        isready:
          dataType: boolean
          description: true if the template is ready to be deployed from, false otherwise.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the template name
        ostypeid:
          dataType: string
          description: the ID of the OS type for this template.
        ostypename:
          dataType: string
          description: the name of the OS type for this template.
        passwordenabled:
          dataType: boolean
          description: true if the reset password feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the template
        projectid:
          dataType: string
          description: the project id of the template
        removed:
          dataType: date
          description: the date this template was removed
        size:
          dataType: long
          description: the size of the template
        sourcetemplateid:
          dataType: string
          description: the template ID of the parent template if present
        sshkeyenabled:
          dataType: boolean
          description: true if template is sshkey enabled, false otherwise
        status:
          dataType: string
          description: the status of the template
        tags:
          dataType: set
          description: the list of resource tags associated with tempate
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatetag:
          dataType: string
          description: the tag of this template
        templatetype:
          dataType: string
          description: the type of the template
        zoneid:
          dataType: string
          description: the ID of the zone for this template
        zonename:
          dataType: string
          description: the name of the zone for this template
    user_types:
    - domain
    - root
    - user
  createAccount:
    description: Creates an account
    isAsync: 'false'
    name: createAccount
    request:
      parms:
        account:
          dataType: string
          description: Creates the user under the specified account. If no account
            is specified, the username will be used as the account name.
          required: 'false'
        accountdetails:
          dataType: map
          description: details for account used to store specific parameters
          required: 'false'
          type: map
        accountid:
          dataType: string
          description: Account UUID, required for adding account from external provisioning
            system
          required: 'false'
        accounttype:
          dataType: short
          description: Type of the account.  Specify 0 for user, 1 for root admin,
            and 2 for domain admin
          required: 'true'
        domainid:
          dataType: uuid
          description: Creates the user under the specified domain.
          required: 'false'
        email:
          dataType: string
          description: email
          required: 'true'
        firstname:
          dataType: string
          description: firstname
          required: 'true'
        lastname:
          dataType: string
          description: lastname
          required: 'true'
        networkdomain:
          dataType: string
          description: Network domain for the account's networks
          required: 'false'
        password:
          dataType: string
          description: Clear text password (Default hashed to SHA256SALT). If you
            wish to use any other hashing algorithm, you would need to write a custom
            authentication adapter See Docs section.
          required: 'true'
        timezone:
          dataType: string
          description: Specifies a timezone for this command. For more information
            on the timezone parameter, see Time Zone Format.
          required: 'false'
        userid:
          dataType: string
          description: User UUID, required for adding account from external provisioning
            system
          required: 'false'
        username:
          dataType: string
          description: Unique username.
          required: 'true'
    response:
      parms:
        accountdetails:
          dataType: map
          description: details for the account
        accounttype:
          dataType: short
          description: account type (admin, domain-admin, user)
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            account
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the account can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by account
          sinceVersion: 4.2.0
        defaultzoneid:
          dataType: string
          description: the default zone of the account
        domain:
          dataType: string
          description: name of the Domain the account belongs too
        domainid:
          dataType: string
          description: id of the Domain the account belongs too
        groups:
          dataType: list
          description: the list of acl groups that account belongs to
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the account
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            account to acquire
        iplimit:
          dataType: string
          description: the total number of public ip addresses this account can acquire
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            account
        iscleanuprequired:
          dataType: boolean
          description: true if the account requires cleanup
        isdefault:
          dataType: boolean
          description: true if account is default, false otherwise
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this account
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the account can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by account
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the account
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            account
          sinceVersion: 3.0.1
        networkdomain:
          dataType: string
          description: the network domain
        networklimit:
          dataType: string
          description: the total number of networks the account can own
          sinceVersion: 3.0.1
        networktotal:
          dataType: long
          description: the total number of networks owned by account
          sinceVersion: 3.0.1
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this account
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the account can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        projectavailable:
          dataType: string
          description: the total number of projects available for administration by
            this account
          sinceVersion: 3.0.1
        projectlimit:
          dataType: string
          description: the total number of projects the account can own
          sinceVersion: 3.0.1
        projecttotal:
          dataType: long
          description: the total number of projects being administrated by this account
          sinceVersion: 3.0.1
        receivedbytes:
          dataType: long
          description: the total number of network traffic bytes received
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this account
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the account can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        sentbytes:
          dataType: long
          description: the total number of network traffic bytes sent
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this account
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this account
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this account
        state:
          dataType: string
          description: the state of the account
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            account
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            account
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            account
        user:
          dataType: list
          description: the list of users associated with account
          parms:
            account:
              dataType: string
              description: the account name of the user
            accountid:
              dataType: string
              description: the account ID of the user
            accounttype:
              dataType: short
              description: the account type of the user
            apikey:
              dataType: string
              description: the api key of the user
            created:
              dataType: date
              description: the date and time the user account was created
            domain:
              dataType: string
              description: the domain name of the user
            domainid:
              dataType: string
              description: the domain ID of the user
            email:
              dataType: string
              description: the user email address
            firstname:
              dataType: string
              description: the user firstname
            id:
              dataType: string
              description: the user ID
            iscallerchilddomain:
              dataType: boolean
              description: the boolean value representing if the updating target is
                in caller's child domain
            isdefault:
              dataType: boolean
              description: true if user is default, false otherwise
              sinceVersion: 4.2.0
            lastname:
              dataType: string
              description: the user lastname
            secretkey:
              dataType: string
              description: the secret key of the user
            state:
              dataType: string
              description: the user state
            timezone:
              dataType: string
              description: the timezone user was created in
            username:
              dataType: string
              description: the user name
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this account
            to acquire
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this account
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this account
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this account
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this account
        volumeavailable:
          dataType: string
          description: the total volume available for this account
        volumelimit:
          dataType: string
          description: the total volume which can be used by this account
        volumetotal:
          dataType: long
          description: the total volume being used by this account
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this account
          sinceVersion: 4.0.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the account can own
          sinceVersion: 4.0.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by account
          sinceVersion: 4.0.0
    user_types:
    - domain
    - root
  createAffinityGroup:
    description: Creates an affinity/anti-affinity group
    isAsync: 'true'
    name: createAffinityGroup
    request:
      parms:
        account:
          dataType: string
          description: an account for the affinity group. Must be used with domainId.
          required: 'false'
        description:
          dataType: string
          description: optional description of the affinity group
          required: 'false'
        domainid:
          dataType: uuid
          description: domainId of the account owning the affinity group
          required: 'false'
        name:
          dataType: string
          description: name of the affinity group
          required: 'true'
        type:
          dataType: string
          description: Type of the affinity group from the available affinity/anti-affinity
            group types
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the affinity group
        description:
          dataType: string
          description: the description of the affinity group
        domain:
          dataType: string
          description: the domain name of the affinity group
        domainid:
          dataType: string
          description: the domain ID of the affinity group
        id:
          dataType: string
          description: the ID of the affinity group
        name:
          dataType: string
          description: the name of the affinity group
        type:
          dataType: string
          description: the type of the affinity group
        virtualmachineIds:
          dataType: list
          description: 'virtual machine Ids associated with this affinity group '
    user_types:
    - domain
    - root
    - user
  createAutoScalePolicy:
    description: Creates an autoscale policy for a provision or deprovision action,
      the action is taken when the all the conditions evaluates to true for the specified
      duration. The policy is in effect once it is attached to a autscale vm group.
    isAsync: 'true'
    name: createAutoScalePolicy
    request:
      parms:
        action:
          dataType: string
          description: the action to be executed if all the conditions evaluate to
            true for the specified duration.
          required: 'true'
        conditionids:
          dataType: list
          description: the list of IDs of the conditions that are being evaluated
            on every interval
          required: 'true'
          type: list
        duration:
          dataType: integer
          description: the duration for which the conditions have to be true before
            action is taken
          required: 'true'
        quiettime:
          dataType: integer
          description: the cool down period for which the policy should not be evaluated
            after the action has been taken
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the autoscale policy
        action:
          dataType: string
          description: the action to be executed if all the conditions evaluate to
            true for the specified duration.
        conditions:
          dataType: list
          description: the list of IDs of the conditions that are being evaluated
            on every interval
        domain:
          dataType: string
          description: the domain name of the autoscale policy
        domainid:
          dataType: string
          description: the domain ID of the autoscale policy
        duration:
          dataType: integer
          description: the duration for which the conditions have to be true before
            action is taken
        id:
          dataType: string
          description: the autoscale policy ID
        project:
          dataType: string
          description: the project name of the autoscale policy
        projectid:
          dataType: string
          description: the project id autoscale policy
        quiettime:
          dataType: integer
          description: the cool down period for which the policy should not be evaluated
            after the action has been taken
    user_types:
    - domain
    - root
    - user
  createAutoScaleVmGroup:
    description: Creates and automatically starts a virtual machine based on a service
      offering, disk offering, and template.
    isAsync: 'true'
    name: createAutoScaleVmGroup
    request:
      parms:
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the group to the
            end user or not
          required: 'false'
          sinceVersion: '4.4'
        interval:
          dataType: integer
          description: the frequency at which the conditions have to be evaluated
          required: 'false'
        lbruleid:
          dataType: uuid
          description: the ID of the load balancer rule
          required: 'true'
        maxmembers:
          dataType: integer
          description: the maximum number of members in the vmgroup, The number of
            instances in the vm group will be equal to or less than this number.
          required: 'true'
        minmembers:
          dataType: integer
          description: the minimum number of members in the vmgroup, the number of
            instances in the vm group will be equal to or more than this number.
          required: 'true'
        scaledownpolicyids:
          dataType: list
          description: list of scaledown autoscale policies
          required: 'true'
          type: list
        scaleuppolicyids:
          dataType: list
          description: list of scaleup autoscale policies
          required: 'true'
          type: list
        vmprofileid:
          dataType: uuid
          description: the autoscale profile that contains information about the vms
            in the vm group.
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the instance group
        domain:
          dataType: string
          description: the domain name of the vm profile
        domainid:
          dataType: string
          description: the domain ID of the vm profile
        fordisplay:
          dataType: boolean
          description: is group for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the autoscale vm group ID
        interval:
          dataType: int
          description: the frequency at which the conditions have to be evaluated
        lbruleid:
          dataType: string
          description: the load balancer rule ID
        maxmembers:
          dataType: int
          description: the maximum number of members in the vmgroup, The number of
            instances in the vm group will be equal to or less than this number.
        minmembers:
          dataType: int
          description: the minimum number of members in the vmgroup, the number of
            instances in the vm group will be equal to or more than this number.
        project:
          dataType: string
          description: the project name of the vm profile
        projectid:
          dataType: string
          description: the project id vm profile
        scaledownpolicies:
          dataType: list
          description: list of scaledown autoscale policies
        scaleuppolicies:
          dataType: list
          description: list of scaleup autoscale policies
        state:
          dataType: string
          description: the current state of the AutoScale Vm Group
        vmprofileid:
          dataType: string
          description: the autoscale profile that contains information about the vms
            in the vm group.
    user_types:
    - domain
    - root
    - user
  createAutoScaleVmProfile:
    description: Creates a profile that contains information about the virtual machine
      which will be provisioned automatically by autoscale feature.
    isAsync: 'true'
    name: createAutoScaleVmProfile
    request:
      parms:
        autoscaleuserid:
          dataType: uuid
          description: the ID of the user used to launch and destroy the VMs
          required: 'false'
        counterparam:
          dataType: map
          description: 'counterparam list. Example: counterparam[0].name=snmpcommunity&counterparam[0].value=public&counterparam[1].name=snmpport&counterparam[1].value=161'
          required: 'false'
          type: map
        destroyvmgraceperiod:
          dataType: integer
          description: the time allowed for existing connections to get closed before
            a vm is destroyed
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the profile to the
            end user or not
          required: 'false'
          sinceVersion: '4.4'
        otherdeployparams:
          dataType: string
          description: parameters other than zoneId/serviceOfferringId/templateId
            of the auto deployed virtual machine
          required: 'false'
        serviceofferingid:
          dataType: uuid
          description: the service offering of the auto deployed virtual machine
          required: 'true'
        templateid:
          dataType: uuid
          description: the template of the auto deployed virtual machine
          required: 'true'
        zoneid:
          dataType: uuid
          description: availability zone for the auto deployed virtual machine
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the instance group
        autoscaleuserid:
          dataType: string
          description: the ID of the user used to launch and destroy the VMs
        destroyvmgraceperiod:
          dataType: integer
          description: the time allowed for existing connections to get closed before
            a vm is destroyed
        domain:
          dataType: string
          description: the domain name of the vm profile
        domainid:
          dataType: string
          description: the domain ID of the vm profile
        fordisplay:
          dataType: boolean
          description: is profile for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the autoscale vm profile ID
        otherdeployparams:
          dataType: string
          description: parameters other than zoneId/serviceOfferringId/templateId
            to be used while deploying a virtual machine
        project:
          dataType: string
          description: the project name of the vm profile
        projectid:
          dataType: string
          description: the project id vm profile
        serviceofferingid:
          dataType: string
          description: the service offering to be used while deploying a virtual machine
        templateid:
          dataType: string
          description: the template to be used while deploying a virtual machine
        zoneid:
          dataType: string
          description: the availability zone to be used while deploying a virtual
            machine
    user_types:
    - domain
    - root
    - user
  createCondition:
    description: Creates a condition
    isAsync: 'true'
    name: createCondition
    request:
      parms:
        account:
          dataType: string
          description: the account of the condition. Must be used with the domainId
            parameter.
          required: 'false'
        counterid:
          dataType: uuid
          description: ID of the Counter.
          required: 'true'
        domainid:
          dataType: uuid
          description: the domain ID of the account.
          required: 'false'
        relationaloperator:
          dataType: string
          description: Relational Operator to be used with threshold.
          required: 'true'
        threshold:
          dataType: long
          description: Threshold value.
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the Condition.
        counter:
          dataType: list
          description: Details of the Counter.
        domain:
          dataType: string
          description: the domain name of the owner.
        domainid:
          dataType: string
          description: the domain id of the Condition owner
        id:
          dataType: string
          description: the id of the Condition
        project:
          dataType: string
          description: the project name of the Condition
        projectid:
          dataType: string
          description: the project id of the Condition.
        relationaloperator:
          dataType: string
          description: Relational Operator to be used with threshold.
        threshold:
          dataType: long
          description: Threshold Value for the counter.
        zoneid:
          dataType: string
          description: zone id of counter
    user_types:
    - domain
    - root
    - user
  createCounter:
    description: Adds metric counter
    isAsync: 'true'
    name: createCounter
    request:
      parms:
        name:
          dataType: string
          description: Name of the counter.
          required: 'true'
        source:
          dataType: string
          description: Source of the counter.
          required: 'true'
        value:
          dataType: string
          description: Value of the counter e.g. oid in case of snmp.
          required: 'true'
    response:
      parms:
        id:
          dataType: string
          description: the id of the Counter
        name:
          dataType: string
          description: Name of the counter.
        source:
          dataType: string
          description: Source of the counter.
        value:
          dataType: string
          description: Value in case of snmp or other specific counters.
        zoneid:
          dataType: string
          description: zone id of counter
    user_types:
    - root
  createDiskOffering:
    description: Creates a disk offering.
    isAsync: 'false'
    name: createDiskOffering
    request:
      parms:
        bytesreadrate:
          dataType: long
          description: bytes read rate of the disk offering
          required: 'false'
        byteswriterate:
          dataType: long
          description: bytes write rate of the disk offering
          required: 'false'
        customized:
          dataType: boolean
          description: whether disk offering size is custom or not
          required: 'false'
        customizediops:
          dataType: boolean
          description: whether disk offering iops is custom or not
          required: 'false'
        disksize:
          dataType: long
          description: size of the disk offering in GB
          required: 'false'
        displayoffering:
          dataType: boolean
          description: an optional field, whether to display the offering to the end
            user or not.
          required: 'false'
        displaytext:
          dataType: string
          description: alternate display text of the disk offering
          required: 'true'
        domainid:
          dataType: uuid
          description: the ID of the containing domain, null for public offerings
          required: 'false'
        hypervisorsnapshotreserve:
          dataType: integer
          description: Hypervisor snapshot reserve space as a percent of a volume
            (for managed storage using Xen or VMware)
          required: 'false'
        iopsreadrate:
          dataType: long
          description: io requests read rate of the disk offering
          required: 'false'
        iopswriterate:
          dataType: long
          description: io requests write rate of the disk offering
          required: 'false'
        maxiops:
          dataType: long
          description: max iops of the disk offering
          required: 'false'
        miniops:
          dataType: long
          description: min iops of the disk offering
          required: 'false'
        name:
          dataType: string
          description: name of the disk offering
          required: 'true'
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes. Valid values are
            thin, sparse, fat.
          required: 'false'
        storagetype:
          dataType: string
          description: the storage type of the disk offering. Values are local and
            shared.
          required: 'false'
        tags:
          dataType: string
          description: tags for the disk offering
          required: 'false'
    response:
      parms:
        cacheMode:
          dataType: string
          description: the cache mode to use for this disk offering. none, writeback
            or writethrough
          sinceVersion: '4.4'
        created:
          dataType: date
          description: the date this disk offering was created
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the disk offering
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the disk offering
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the disk offering
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the disk offering
        disksize:
          dataType: long
          description: the size of the disk offering in GB
        displayoffering:
          dataType: boolean
          description: whether to display the offering to the end user or not.
        displaytext:
          dataType: string
          description: an alternate display text of the disk offering.
        domain:
          dataType: string
          description: the domain name this disk offering belongs to. Ignore this
            information as it is not currently applicable.
        domainid:
          dataType: string
          description: the domain ID this disk offering belongs to. Ignore this information
            as it is not currently applicable.
        hypervisorsnapshotreserve:
          dataType: integer
          description: Hypervisor snapshot reserve space as a percent of a volume
            (for managed storage using Xen or VMware)
          sinceVersion: '4.4'
        id:
          dataType: string
          description: unique ID of the disk offering
        iscustomized:
          dataType: boolean
          description: true if disk offering uses custom size, false otherwise
        iscustomizediops:
          dataType: boolean
          description: true if disk offering uses custom iops, false otherwise
        maxiops:
          dataType: long
          description: the max iops of the disk offering
        miniops:
          dataType: long
          description: the min iops of the disk offering
        name:
          dataType: string
          description: the name of the disk offering
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes. Valid values are
            thin, sparse, fat.
          sinceVersion: 4.4.0
        storagetype:
          dataType: string
          description: the storage type for this disk offering
        tags:
          dataType: string
          description: the tags for the disk offering
    user_types:
    - root
  createDomain:
    description: Creates a domain
    isAsync: 'false'
    name: createDomain
    request:
      parms:
        domainid:
          dataType: string
          description: Domain UUID, required for adding domain from another Region
          required: 'false'
        name:
          dataType: string
          description: creates domain with this name
          required: 'true'
        networkdomain:
          dataType: string
          description: Network domain for networks in the domain
          required: 'false'
        parentdomainid:
          dataType: uuid
          description: assigns new domain a parent domain by domain ID of the parent.  If
            no parent domain is specied, the ROOT domain is assumed.
          required: 'false'
    response:
      parms:
        haschild:
          dataType: boolean
          description: whether the domain has one or more sub-domains
        id:
          dataType: string
          description: the ID of the domain
        level:
          dataType: integer
          description: the level of the domain
        name:
          dataType: string
          description: the name of the domain
        networkdomain:
          dataType: string
          description: the network domain
        parentdomainid:
          dataType: string
          description: the domain ID of the parent domain
        parentdomainname:
          dataType: string
          description: the domain name of the parent domain
        path:
          dataType: string
          description: the path of the domain
    user_types:
    - root
  createEgressFirewallRule:
    description: 'Creates a egress firewall rule for a given network '
    isAsync: 'true'
    name: createEgressFirewallRule
    request:
      parms:
        cidrlist:
          dataType: list
          description: the cidr list to forward traffic from
          required: 'false'
          type: list
        endport:
          dataType: integer
          description: the ending port of firewall rule
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
          required: 'false'
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
          required: 'false'
        networkid:
          dataType: uuid
          description: the network id of the port forwarding rule
          required: 'true'
        protocol:
          dataType: string
          description: the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.
          required: 'true'
        startport:
          dataType: integer
          description: the starting port of firewall rule
          required: 'false'
        type:
          dataType: string
          description: 'type of firewallrule: system/user'
          required: 'false'
    response:
      parms:
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        endport:
          dataType: string
          description: the ending port of firewall rule's port range
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
        id:
          dataType: string
          description: the ID of the firewall rule
        ipaddress:
          dataType: string
          description: the public ip address for the firewall rule
        ipaddressid:
          dataType: string
          description: the public ip address id for the firewall rule
        networkid:
          dataType: string
          description: the network id of the firewall rule
        protocol:
          dataType: string
          description: the protocol of the firewall rule
        startport:
          dataType: string
          description: the starting port of firewall rule's port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    user_types:
    - domain
    - root
    - user
  createFirewallRule:
    description: Creates a firewall rule for a given ip address
    isAsync: 'true'
    name: createFirewallRule
    request:
      parms:
        cidrlist:
          dataType: list
          description: the cidr list to forward traffic from
          required: 'false'
          type: list
        endport:
          dataType: integer
          description: the ending port of firewall rule
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
          required: 'false'
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
          required: 'false'
        ipaddressid:
          dataType: uuid
          description: the IP address id of the port forwarding rule
          required: 'true'
        protocol:
          dataType: string
          description: the protocol for the firewall rule. Valid values are TCP/UDP/ICMP.
          required: 'true'
        startport:
          dataType: integer
          description: the starting port of firewall rule
          required: 'false'
        type:
          dataType: string
          description: 'type of firewallrule: system/user'
          required: 'false'
    response:
      parms:
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        endport:
          dataType: string
          description: the ending port of firewall rule's port range
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
        id:
          dataType: string
          description: the ID of the firewall rule
        ipaddress:
          dataType: string
          description: the public ip address for the firewall rule
        ipaddressid:
          dataType: string
          description: the public ip address id for the firewall rule
        networkid:
          dataType: string
          description: the network id of the firewall rule
        protocol:
          dataType: string
          description: the protocol of the firewall rule
        startport:
          dataType: string
          description: the starting port of firewall rule's port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    user_types:
    - domain
    - root
    - user
  createGlobalLoadBalancerRule:
    description: Creates a global load balancer rule
    isAsync: 'true'
    name: createGlobalLoadBalancerRule
    request:
      parms:
        account:
          dataType: string
          description: the account associated with the global load balancer. Must
            be used with the domainId parameter.
          required: 'false'
        description:
          dataType: string
          description: the description of the load balancer rule
          required: 'false'
        domainid:
          dataType: uuid
          description: the domain ID associated with the load balancer
          required: 'false'
        gslbdomainname:
          dataType: string
          description: domain name for the GSLB service.
          required: 'true'
        gslblbmethod:
          dataType: string
          description: load balancer algorithm (roundrobin, leastconn, proximity)
            that method is used to distribute traffic across the zones participating
            in global server load balancing, if not specified defaults to 'round robin'
          required: 'false'
        gslbservicetype:
          dataType: string
          description: GSLB service type (tcp, udp, http)
          required: 'true'
        gslbstickysessionmethodname:
          dataType: string
          description: session sticky method (sourceip) if not specified defaults
            to sourceip
          required: 'false'
        name:
          dataType: string
          description: name of the load balancer rule
          required: 'true'
        regionid:
          dataType: integer
          description: region where the global load balancer is going to be created.
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account of the load balancer rule
        description:
          dataType: string
          description: the description of the global load balancer rule
        domain:
          dataType: string
          description: the domain of the load balancer rule
        domainid:
          dataType: string
          description: the domain ID of the load balancer rule
        gslbdomainname:
          dataType: string
          description: DNS domain name given for the global load balancer
        gslblbmethod:
          dataType: string
          description: Load balancing method used for the global load balancer
        gslbservicetype:
          dataType: string
          description: GSLB service type
        gslbstickysessionmethodname:
          dataType: string
          description: session persistence method used for the global load balancer
        id:
          dataType: string
          description: global load balancer rule ID
        loadbalancerrule:
          dataType: list
          description: List of load balancer rules that are part of GSLB rule
          parms:
            account:
              dataType: string
              description: the account of the load balancer rule
            algorithm:
              dataType: string
              description: the load balancer algorithm (source, roundrobin, leastconn)
            cidrlist:
              dataType: string
              description: the cidr list to forward traffic from
            description:
              dataType: string
              description: the description of the load balancer
            domain:
              dataType: string
              description: the domain of the load balancer rule
            domainid:
              dataType: string
              description: the domain ID of the load balancer rule
            fordisplay:
              dataType: boolean
              description: is rule for display to the regular user
              sinceVersion: '4.4'
            id:
              dataType: string
              description: the load balancer rule ID
            name:
              dataType: string
              description: the name of the load balancer
            networkid:
              dataType: string
              description: the id of the guest network the lb rule belongs to
            privateport:
              dataType: string
              description: the private port
            project:
              dataType: string
              description: the project name of the load balancer
            projectid:
              dataType: string
              description: the project id of the load balancer
            protocol:
              dataType: string
              description: the protocol of the loadbalanacer rule
            publicip:
              dataType: string
              description: the public ip address
            publicipid:
              dataType: string
              description: the public ip address id
            publicport:
              dataType: string
              description: the public port
            state:
              dataType: string
              description: the state of the rule
            tags:
              dataType: list
              description: the list of resource tags associated with load balancer
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
            zoneid:
              dataType: string
              description: the id of the zone the rule belongs to
        name:
          dataType: string
          description: name of the global load balancer rule
        project:
          dataType: string
          description: the project name of the load balancer
        projectid:
          dataType: string
          description: the project id of the load balancer
        regionid:
          dataType: integer
          description: Region Id in which global load balancer is created
    user_types:
    - domain
    - root
    - user
  createInstanceGroup:
    description: Creates a vm group
    isAsync: 'false'
    name: createInstanceGroup
    request:
      parms:
        account:
          dataType: string
          description: the account of the instance group. The account parameter must
            be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: the domain ID of account owning the instance group
          required: 'false'
        name:
          dataType: string
          description: the name of the instance group
          required: 'true'
        projectid:
          dataType: uuid
          description: The project of the instance group
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the instance group
        created:
          dataType: date
          description: time and date the instance group was created
        domain:
          dataType: string
          description: the domain name of the instance group
        domainid:
          dataType: string
          description: the domain ID of the instance group
        id:
          dataType: string
          description: the id of the instance group
        name:
          dataType: string
          description: the name of the instance group
        project:
          dataType: string
          description: the project name of the group
        projectid:
          dataType: string
          description: the project id of the group
    user_types:
    - domain
    - root
    - user
  createInternalLoadBalancerElement:
    description: Create an Internal Load Balancer element.
    isAsync: 'true'
    name: createInternalLoadBalancerElement
    request:
      parms:
        dataType: uuid
        description: the network service provider ID of the internal load balancer
          element
        name: nspid
        required: 'true'
    response:
      parms:
        enabled:
          dataType: boolean
          description: Enabled/Disabled the element
        id:
          dataType: string
          description: the id of the internal load balancer element
        nspid:
          dataType: string
          description: the physical network service provider id of the element
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
  createIpForwardingRule:
    description: Creates an ip forwarding rule
    isAsync: 'true'
    name: createIpForwardingRule
    request:
      parms:
        cidrlist:
          dataType: list
          description: the cidr list to forward traffic from
          required: 'false'
          type: list
        endport:
          dataType: integer
          description: the end port for the rule
          required: 'false'
        ipaddressid:
          dataType: uuid
          description: the public IP address id of the forwarding rule, already associated
            via associateIp
          required: 'true'
        openfirewall:
          dataType: boolean
          description: if true, firewall rule for source/end pubic port is automatically
            created; if false - firewall rule has to be created explicitely. Has value
            true by default
          required: 'false'
        protocol:
          dataType: string
          description: the protocol for the rule. Valid values are TCP or UDP.
          required: 'true'
        startport:
          dataType: integer
          description: the start port for the rule
          required: 'true'
    response:
      parms:
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        fordisplay:
          dataType: boolean
          description: is firewall for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the ID of the port forwarding rule
        ipaddress:
          dataType: string
          description: the public ip address for the port forwarding rule
        ipaddressid:
          dataType: string
          description: the public ip address id for the port forwarding rule
        networkid:
          dataType: string
          description: the id of the guest network the port forwarding rule belongs
            to
        privateendport:
          dataType: string
          description: the ending port of port forwarding rule's private port range
        privateport:
          dataType: string
          description: the starting port of port forwarding rule's private port range
        protocol:
          dataType: string
          description: the protocol of the port forwarding rule
        publicendport:
          dataType: string
          description: the ending port of port forwarding rule's private port range
        publicport:
          dataType: string
          description: the starting port of port forwarding rule's public port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        virtualmachinedisplayname:
          dataType: string
          description: the VM display name for the port forwarding rule
        virtualmachineid:
          dataType: string
          description: the VM ID for the port forwarding rule
        virtualmachinename:
          dataType: string
          description: the VM name for the port forwarding rule
        vmguestip:
          dataType: string
          description: the vm ip address for the port forwarding rule
    user_types:
    - domain
    - root
    - user
  createLBHealthCheckPolicy:
    description: 'Creates a Load Balancer healthcheck policy '
    isAsync: 'true'
    name: createLBHealthCheckPolicy
    request:
      parms:
        description:
          dataType: string
          description: the description of the load balancer HealthCheck policy
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        healthythreshold:
          dataType: integer
          description: Number of consecutive health check success before declaring
            an instance healthy
          required: 'false'
        intervaltime:
          dataType: integer
          description: Amount of time between health checks (1 sec - 20940 sec)
          required: 'false'
        lbruleid:
          dataType: uuid
          description: the ID of the load balancer rule
          required: 'true'
        pingpath:
          dataType: string
          description: HTTP Ping Path
          required: 'false'
        responsetimeout:
          dataType: integer
          description: Time to wait when receiving a response from the health check
            (2sec - 60 sec)
          required: 'false'
        unhealthythreshold:
          dataType: integer
          description: Number of consecutive health check failures before declaring
            an instance unhealthy
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the HealthCheck policy
        domain:
          dataType: string
          description: the domain of the HealthCheck policy
        domainid:
          dataType: string
          description: the domain ID of the HealthCheck policy
        healthcheckpolicy:
          dataType: list
          description: the list of healthcheckpolicies
          parms:
            description:
              dataType: string
              description: the description of the healthcheck policy
            fordisplay:
              dataType: boolean
              description: is policy for display to the regular user
              sinceVersion: '4.4'
            healthcheckinterval:
              dataType: int
              description: Amount of time between health checks
            healthcheckthresshold:
              dataType: int
              description: Number of consecutive health check success before declaring
                an instance healthy
            id:
              dataType: string
              description: the LB HealthCheck policy ID
            pingpath:
              dataType: string
              description: the pingpath  of the healthcheck policy
            responsetime:
              dataType: int
              description: Time to wait when receiving a response from the health
                check
            state:
              dataType: string
              description: the state of the policy
            unhealthcheckthresshold:
              dataType: int
              description: Number of consecutive health check failures before declaring
                an instance unhealthy.
        lbruleid:
          dataType: string
          description: the LB rule ID
        zoneid:
          dataType: string
          description: the id of the zone the HealthCheck policy belongs to
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
    - user
  createLBStickinessPolicy:
    description: 'Creates a Load Balancer stickiness policy '
    isAsync: 'true'
    name: createLBStickinessPolicy
    request:
      parms:
        description:
          dataType: string
          description: the description of the LB Stickiness policy
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        lbruleid:
          dataType: uuid
          description: the ID of the load balancer rule
          required: 'true'
        methodname:
          dataType: string
          description: 'name of the LB Stickiness policy method, possible values can
            be obtained from ListNetworks API '
          required: 'true'
        name:
          dataType: string
          description: name of the LB Stickiness policy
          required: 'true'
        param:
          dataType: map
          description: 'param list. Example: param[0].name=cookiename&param[0].value=LBCookie '
          required: 'false'
          type: map
    response:
      parms:
        account:
          dataType: string
          description: the account of the Stickiness policy
        description:
          dataType: string
          description: the description of the Stickiness policy
        domain:
          dataType: string
          description: the domain of the Stickiness policy
        domainid:
          dataType: string
          description: the domain ID of the Stickiness policy
        lbruleid:
          dataType: string
          description: the LB rule ID
        name:
          dataType: string
          description: the name of the Stickiness policy
        state:
          dataType: string
          description: the state of the policy
        stickinesspolicy:
          dataType: list
          description: the list of stickinesspolicies
          parms:
            description:
              dataType: string
              description: the description of the Stickiness policy
            fordisplay:
              dataType: boolean
              description: is policy for display to the regular user
              sinceVersion: '4.4'
            id:
              dataType: string
              description: the LB Stickiness policy ID
            methodname:
              dataType: string
              description: the method name of the Stickiness policy
            name:
              dataType: string
              description: the name of the Stickiness policy
            params:
              dataType: map
              description: the params of the policy
            state:
              dataType: string
              description: the state of the policy
        zoneid:
          dataType: string
          description: the id of the zone the Stickiness policy belongs to
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  createLoadBalancer:
    description: Creates a Load Balancer
    isAsync: 'true'
    name: createLoadBalancer
    request:
      parms:
        algorithm:
          dataType: string
          description: load balancer algorithm (source, roundrobin, leastconn)
          required: 'true'
        description:
          dataType: string
          description: the description of the Load Balancer
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        instanceport:
          dataType: integer
          description: the TCP port of the virtual machine where the network traffic
            will be load balanced to
          required: 'true'
        name:
          dataType: string
          description: name of the Load Balancer
          required: 'true'
        networkid:
          dataType: uuid
          description: The guest network the Load Balancer will be created for
          required: 'true'
        scheme:
          dataType: string
          description: the load balancer scheme. Supported value in this release is
            Internal
          required: 'true'
        sourceipaddress:
          dataType: string
          description: the source ip address the network traffic will be load balanced
            from
          required: 'false'
        sourceipaddressnetworkid:
          dataType: uuid
          description: the network id of the source ip address
          required: 'true'
        sourceport:
          dataType: integer
          description: the source port the network traffic will be load balanced from
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account of the Load Balancer
        algorithm:
          dataType: string
          description: the load balancer algorithm (source, roundrobin, leastconn)
        description:
          dataType: string
          description: the description of the Load Balancer
        domain:
          dataType: string
          description: the domain of the Load Balancer
        domainid:
          dataType: string
          description: the domain ID of the Load Balancer
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the Load Balancer ID
        loadbalancerinstance:
          dataType: list
          description: the list of instances associated with the Load Balancer
          parms:
            id:
              dataType: string
              description: the instance ID
            ipaddress:
              dataType: string
              description: the ip address of the instance
            name:
              dataType: string
              description: the name of the instance
            state:
              dataType: string
              description: the state of the instance
        loadbalancerrule:
          dataType: list
          description: the list of rules associated with the Load Balancer
          parms:
            instanceport:
              dataType: integer
              description: instance port of the load balancer rule
            sourceport:
              dataType: integer
              description: source port of the load balancer rule
            state:
              dataType: string
              description: the state of the load balancer rule
        name:
          dataType: string
          description: the name of the Load Balancer
        networkid:
          dataType: string
          description: Load Balancer network id
        project:
          dataType: string
          description: the project name of the Load Balancer
        projectid:
          dataType: string
          description: the project id of the Load Balancer
        sourceipaddress:
          dataType: string
          description: Load Balancer source ip
        sourceipaddressnetworkid:
          dataType: string
          description: Load Balancer source ip network id
        tags:
          dataType: list
          description: the list of resource tags associated with the Load Balancer
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
    - user
  createLoadBalancerRule:
    description: Creates a load balancer rule
    isAsync: 'true'
    name: createLoadBalancerRule
    request:
      parms:
        account:
          dataType: string
          description: the account associated with the load balancer. Must be used
            with the domainId parameter.
          required: 'false'
        algorithm:
          dataType: string
          description: load balancer algorithm (source, roundrobin, leastconn)
          required: 'true'
        cidrlist:
          dataType: list
          description: the cidr list to forward traffic from
          required: 'false'
          type: list
        description:
          dataType: string
          description: the description of the load balancer rule
          required: 'false'
        domainid:
          dataType: uuid
          description: the domain ID associated with the load balancer
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        name:
          dataType: string
          description: name of the load balancer rule
          required: 'true'
        networkid:
          dataType: uuid
          description: The guest network this rule will be created for. Required when
            public Ip address is not associated with any Guest network yet (VPC case)
          required: 'false'
        openfirewall:
          dataType: boolean
          description: if true, firewall rule for source/end pubic port is automatically
            created; if false - firewall rule has to be created explicitely. If not
            specified 1) defaulted to false when LB rule is being created for VPC
            guest network 2) in all other cases defaulted to true
          required: 'false'
        privateport:
          dataType: integer
          description: the private port of the private ip address/virtual machine
            where the network traffic will be load balanced to
          required: 'true'
        protocol:
          dataType: string
          description: The protocol for the LB
          required: 'false'
        publicipid:
          dataType: uuid
          description: public ip address id from where the network traffic will be
            load balanced from
          required: 'false'
        publicport:
          dataType: integer
          description: the public port from where the network traffic will be load
            balanced from
          required: 'true'
        zoneid:
          dataType: uuid
          description: zone where the load balancer is going to be created. This parameter
            is required when LB service provider is ElasticLoadBalancerVm
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the load balancer rule
        algorithm:
          dataType: string
          description: the load balancer algorithm (source, roundrobin, leastconn)
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        description:
          dataType: string
          description: the description of the load balancer
        domain:
          dataType: string
          description: the domain of the load balancer rule
        domainid:
          dataType: string
          description: the domain ID of the load balancer rule
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the load balancer rule ID
        name:
          dataType: string
          description: the name of the load balancer
        networkid:
          dataType: string
          description: the id of the guest network the lb rule belongs to
        privateport:
          dataType: string
          description: the private port
        project:
          dataType: string
          description: the project name of the load balancer
        projectid:
          dataType: string
          description: the project id of the load balancer
        protocol:
          dataType: string
          description: the protocol of the loadbalanacer rule
        publicip:
          dataType: string
          description: the public ip address
        publicipid:
          dataType: string
          description: the public ip address id
        publicport:
          dataType: string
          description: the public port
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with load balancer
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        zoneid:
          dataType: string
          description: the id of the zone the rule belongs to
    user_types:
    - domain
    - root
    - user
  createNetwork:
    description: Creates a network
    isAsync: 'false'
    name: createNetwork
    request:
      parms:
        account:
          dataType: string
          description: account who will own the network
          required: 'false'
        aclid:
          dataType: uuid
          description: Network ACL Id associated for the network
          required: 'false'
        acltype:
          dataType: string
          description: Access control type; supported values are account and domain.
            In 3.0 all shared networks should have aclType=Domain, and all Isolated
            networks - Account. Account means that only the account owner can use
            the network, domain - all accouns in the domain can use the network
          required: 'false'
        displaynetwork:
          dataType: boolean
          description: an optional field, whether to the display the network to the
            end user or not.
          required: 'false'
        displaytext:
          dataType: string
          description: the display text of the network
          required: 'true'
        domainid:
          dataType: uuid
          description: domain ID of the account owning a network
          required: 'false'
        endip:
          dataType: string
          description: the ending IP address in the network IP range. If not specified,
            will be defaulted to startIP
          required: 'false'
        endipv6:
          dataType: string
          description: the ending IPv6 address in the IPv6 network range
          required: 'false'
        gateway:
          dataType: string
          description: the gateway of the network. Required for Shared networks and
            Isolated networks when it belongs to VPC
          required: 'false'
        ip6cidr:
          dataType: string
          description: the CIDR of IPv6 network, must be at least /64
          required: 'false'
        ip6gateway:
          dataType: string
          description: the gateway of the IPv6 network. Required for Shared networks
          required: 'false'
        isolatedpvlan:
          dataType: string
          description: the isolated private vlan for this network
          required: 'false'
        name:
          dataType: string
          description: the name of the network
          required: 'true'
        netmask:
          dataType: string
          description: the netmask of the network. Required for Shared networks and
            Isolated networks when it belongs to VPC
          required: 'false'
        networkdomain:
          dataType: string
          description: network domain
          required: 'false'
        networkofferingid:
          dataType: uuid
          description: the network offering id
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID the network belongs to
          required: 'false'
        projectid:
          dataType: uuid
          description: an optional project for the ssh key
          required: 'false'
        startip:
          dataType: string
          description: the beginning IP address in the network IP range
          required: 'false'
        startipv6:
          dataType: string
          description: the beginning IPv6 address in the IPv6 network range
          required: 'false'
        subdomainaccess:
          dataType: boolean
          description: Defines whether to allow subdomains to use networks dedicated
            to their parent domain(s). Should be used with aclType=Domain, defaulted
            to allow.subdomain.network.access global config if not specified
          required: 'false'
        vlan:
          dataType: string
          description: the ID or VID of the network
          required: 'false'
        vpcid:
          dataType: uuid
          description: the VPC network belongs to
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID for the network
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the network
        aclid:
          dataType: string
          description: ACL Id associated with the VPC network
        acltype:
          dataType: string
          description: acl type - access type to the network
        broadcastdomaintype:
          dataType: string
          description: Broadcast domain type of the network
        broadcasturi:
          dataType: string
          description: broadcast uri of the network. This parameter is visible to
            ROOT admins only
        canusefordeploy:
          dataType: boolean
          description: list networks available for vm deployment
        cidr:
          dataType: string
          description: Cloudstack managed address space, all CloudStack managed VMs
            get IP address from CIDR
        displaynetwork:
          dataType: boolean
          description: an optional field, whether to the display the network to the
            end user or not.
        displaytext:
          dataType: string
          description: the displaytext of the network
        dns1:
          dataType: string
          description: the first DNS for the network
        dns2:
          dataType: string
          description: the second DNS for the network
        domain:
          dataType: string
          description: the domain name of the network owner
        domainid:
          dataType: string
          description: the domain id of the network owner
        gateway:
          dataType: string
          description: the network's gateway
        id:
          dataType: string
          description: the id of the network
        ip6cidr:
          dataType: string
          description: the cidr of IPv6 network
        ip6gateway:
          dataType: string
          description: the gateway of IPv6 network
        isdefault:
          dataType: boolean
          description: true if network is default, false otherwise
        ispersistent:
          dataType: boolean
          description: list networks that are persistent
        issystem:
          dataType: boolean
          description: true if network is system, false otherwise
        name:
          dataType: string
          description: the name of the network
        netmask:
          dataType: string
          description: the network's netmask
        networkcidr:
          dataType: string
          description: the network CIDR of the guest network configured with IP reservation.
            It is the summation of CIDR and RESERVED_IP_RANGE
        networkdomain:
          dataType: string
          description: the network domain
        networkofferingavailability:
          dataType: string
          description: availability of the network offering the network is created
            from
        networkofferingconservemode:
          dataType: boolean
          description: true if network offering is ip conserve mode enabled
        networkofferingdisplaytext:
          dataType: string
          description: display text of the network offering the network is created
            from
        networkofferingid:
          dataType: string
          description: network offering id the network is created from
        networkofferingname:
          dataType: string
          description: name of the network offering the network is created from
        physicalnetworkid:
          dataType: string
          description: the physical network id
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        related:
          dataType: string
          description: related to what other network configuration
        reservediprange:
          dataType: string
          description: the network's IP range not to be used by CloudStack guest VMs
            and can be used for non CloudStack purposes
        restartrequired:
          dataType: boolean
          description: true network requires restart
        service:
          dataType: list
          description: the list of services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        specifyipranges:
          dataType: boolean
          description: true if network supports specifying ip ranges, false otherwise
        state:
          dataType: string
          description: state of the network
        strechedl2subnet:
          dataType: boolean
          description: true if network can span multiple zones
          sinceVersion: '4.4'
        subdomainaccess:
          dataType: boolean
          description: true if users from subdomains can access the domain level network
        tags:
          dataType: list
          description: the list of resource tags associated with network
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        traffictype:
          dataType: string
          description: the traffic type of the network
        type:
          dataType: string
          description: the type of the network
        vlan:
          dataType: string
          description: The vlan of the network. This parameter is visible to ROOT
            admins only
        vpcid:
          dataType: string
          description: VPC the network belongs to
        zoneid:
          dataType: string
          description: zone id of the network
        zonename:
          dataType: string
          description: the name of the zone the network belongs to
        zonesnetworkspans:
          dataType: set
          description: If a network is enabled for 'streched l2 subnet' then represents
            zones on which network currently spans
          sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  createNetworkACL:
    description: Creates a ACL rule in the given network (the network has to belong
      to VPC)
    isAsync: 'true'
    name: createNetworkACL
    request:
      parms:
        aclid:
          dataType: uuid
          description: The network of the vm the ACL will be created for
          required: 'false'
        action:
          dataType: string
          description: scl entry action, allow or deny
          required: 'false'
        cidrlist:
          dataType: list
          description: the cidr list to allow traffic from/to
          required: 'false'
          type: list
        endport:
          dataType: integer
          description: the ending port of ACL
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
          required: 'false'
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
          required: 'false'
        networkid:
          dataType: uuid
          description: The network of the vm the ACL will be created for
          required: 'false'
        number:
          dataType: integer
          description: The network of the vm the ACL will be created for
          required: 'false'
        protocol:
          dataType: string
          description: the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL
            or valid protocol number
          required: 'true'
        startport:
          dataType: integer
          description: the starting port of ACL
          required: 'false'
        traffictype:
          dataType: string
          description: the traffic type for the ACL,can be Ingress or Egress, defaulted
            to Ingress if not specified
          required: 'false'
    response:
      parms:
        aclid:
          dataType: string
          description: the ID of the ACL this item belongs to
        action:
          dataType: string
          description: Action of ACL Item. Allow/Deny
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        endport:
          dataType: string
          description: the ending port of ACL's port range
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
        id:
          dataType: string
          description: the ID of the ACL Item
        number:
          dataType: integer
          description: Number of the ACL Item
        protocol:
          dataType: string
          description: the protocol of the ACL
        startport:
          dataType: string
          description: the starting port of ACL's port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the network ACLs
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        traffictype:
          dataType: string
          description: the traffic type for the ACL
    user_types:
    - domain
    - root
    - user
  createNetworkACLList:
    description: Creates a Network ACL for the given VPC
    isAsync: 'true'
    name: createNetworkACLList
    request:
      parms:
        description:
          dataType: string
          description: Description of the network ACL List
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the list to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        name:
          dataType: string
          description: Name of the network ACL List
          required: 'true'
        vpcid:
          dataType: uuid
          description: Id of the VPC associated with this network ACL List
          required: 'true'
    response:
      parms:
        description:
          dataType: string
          description: Description of the ACL
        fordisplay:
          dataType: boolean
          description: is ACL for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the ID of the ACL
        name:
          dataType: string
          description: the Name of the ACL
        vpcid:
          dataType: string
          description: Id of the VPC this ACL is associated with
    user_types:
    - domain
    - root
    - user
  createNetworkOffering:
    description: Creates a network offering.
    isAsync: 'false'
    name: createNetworkOffering
    request:
      parms:
        availability:
          dataType: string
          description: the availability of network offering. Default value is Optional
          required: 'false'
        conservemode:
          dataType: boolean
          description: true if the network offering is IP conserve mode enabled
          required: 'false'
        details:
          dataType: map
          description: Network offering details in key/value pairs. Supported keys
            are internallbprovider/publiclbprovider with service provider as a value
          required: 'false'
          sinceVersion: 4.2.0
          type: map
        displaytext:
          dataType: string
          description: the display text of the network offering
          required: 'true'
        egressdefaultpolicy:
          dataType: boolean
          description: true if guest network default egress policy is allow; false
            if default egress policy is deny
          required: 'false'
        guestiptype:
          dataType: string
          description: 'guest type of the network offering: Shared or Isolated'
          required: 'true'
        ispersistent:
          dataType: boolean
          description: true if network offering supports persistent networks; defaulted
            to false if not specified
          required: 'false'
        keepaliveenabled:
          dataType: boolean
          description: if true keepalive will be turned on in the loadbalancer. At
            the time of writing this has only an effect on haproxy; the mode http
            and httpclose options are unset in the haproxy conf file.
          required: 'false'
        maxconnections:
          dataType: integer
          description: maximum number of concurrent connections supported by the network
            offering
          required: 'false'
        name:
          dataType: string
          description: the name of the network offering
          required: 'true'
        networkrate:
          dataType: integer
          description: data transfer rate in megabits per second allowed
          required: 'false'
        servicecapabilitylist:
          dataType: map
          description: desired service capabilities as part of network offering
          required: 'false'
          type: map
        serviceofferingid:
          dataType: uuid
          description: the service offering ID used by virtual router provider
          required: 'false'
        serviceproviderlist:
          dataType: map
          description: provider to service mapping. If not specified, the provider
            for the service will be mapped to the default provider on the physical
            network
          required: 'false'
          type: map
        specifyipranges:
          dataType: boolean
          description: true if network offering supports specifying ip ranges; defaulted
            to false if not specified
          required: 'false'
        specifyvlan:
          dataType: boolean
          description: true if network offering supports vlans
          required: 'false'
        supportedservices:
          dataType: list
          description: services supported by the network offering
          required: 'true'
          type: list
        tags:
          dataType: string
          description: the tags for the network offering.
          required: 'false'
        traffictype:
          dataType: string
          description: the traffic type for the network offering. Supported type in
            current release is GUEST only
          required: 'true'
    response:
      parms:
        availability:
          dataType: string
          description: availability of the network offering
        conservemode:
          dataType: boolean
          description: true if network offering is ip conserve mode enabled
        created:
          dataType: date
          description: the date this network offering was created
        details:
          dataType: map
          description: additional key/value details tied with network offering
          sinceVersion: 4.2.0
        displaytext:
          dataType: string
          description: an alternate display text of the network offering.
        egressdefaultpolicy:
          dataType: boolean
          description: true if guest network default egress policy is allow; false
            if default egress policy is deny
        forvpc:
          dataType: boolean
          description: true if network offering can be used by VPC networks only
        guestiptype:
          dataType: string
          description: guest type of the network offering, can be Shared or Isolated
        id:
          dataType: string
          description: the id of the network offering
        isdefault:
          dataType: boolean
          description: true if network offering is default, false otherwise
        ispersistent:
          dataType: boolean
          description: true if network offering supports persistent networks, false
            otherwise
        maxconnections:
          dataType: integer
          description: maximum number of concurrents connections to be handled by
            lb
        name:
          dataType: string
          description: the name of the network offering
        networkrate:
          dataType: integer
          description: data transfer rate in megabits per second allowed.
        service:
          dataType: list
          description: the list of supported services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        serviceofferingid:
          dataType: string
          description: the ID of the service offering used by virtual router provider
        specifyipranges:
          dataType: boolean
          description: true if network offering supports specifying ip ranges, false
            otherwise
        specifyvlan:
          dataType: boolean
          description: true if network offering supports vlans, false otherwise
        state:
          dataType: string
          description: state of the network offering. Can be Disabled/Enabled/Inactive
        supportsstrechedl2subnet:
          dataType: boolean
          description: true if network offering supports network that span multiple
            zones
          sinceVersion: '4.4'
        tags:
          dataType: string
          description: the tags for the network offering
        traffictype:
          dataType: string
          description: the traffic type for the network offering, supported types
            are Public, Management, Control, Guest, Vlan or Storage.
    sinceVersion: 3.0.0
    user_types:
    - root
  createPhysicalNetwork:
    description: Creates a physical network
    isAsync: 'true'
    name: createPhysicalNetwork
    request:
      parms:
        broadcastdomainrange:
          dataType: string
          description: the broadcast domain range for the physical network[Pod or
            Zone]. In Acton release it can be Zone only in Advance zone, and Pod in
            Basic
          required: 'false'
        domainid:
          dataType: uuid
          description: domain ID of the account owning a physical network
          required: 'false'
        isolationmethods:
          dataType: list
          description: the isolation method for the physical network[VLAN/L3/GRE]
          required: 'false'
          type: list
        name:
          dataType: string
          description: the name of the physical network
          required: 'true'
        networkspeed:
          dataType: string
          description: the speed for the physical network[1G/10G]
          required: 'false'
        tags:
          dataType: list
          description: Tag the physical network
          required: 'false'
          type: list
        vlan:
          dataType: string
          description: the VLAN for the physical network
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID for the physical network
          required: 'true'
    response:
      parms:
        broadcastdomainrange:
          dataType: string
          description: Broadcast domain range of the physical network
        domainid:
          dataType: string
          description: the domain id of the physical network owner
        id:
          dataType: string
          description: the uuid of the physical network
        isolationmethods:
          dataType: string
          description: isolation methods
        name:
          dataType: string
          description: name of the physical network
        networkspeed:
          dataType: string
          description: the speed of the physical network
        state:
          dataType: string
          description: state of the physical network
        tags:
          dataType: string
          description: comma separated tag
        vlan:
          dataType: string
          description: the vlan of the physical network
        zoneid:
          dataType: string
          description: zone id of the physical network
    sinceVersion: 3.0.0
    user_types:
    - root
  createPod:
    description: Creates a new Pod.
    isAsync: 'false'
    name: createPod
    request:
      parms:
        allocationstate:
          dataType: string
          description: Allocation state of this Pod for allocation of new resources
          required: 'false'
        endip:
          dataType: string
          description: the ending IP address for the Pod
          required: 'false'
        gateway:
          dataType: string
          description: the gateway for the Pod
          required: 'true'
        name:
          dataType: string
          description: the name of the Pod
          required: 'true'
        netmask:
          dataType: string
          description: the netmask for the Pod
          required: 'true'
        startip:
          dataType: string
          description: the starting IP address for the Pod
          required: 'true'
        zoneid:
          dataType: uuid
          description: the Zone ID in which the Pod will be created
          required: 'true'
    response:
      parms:
        allocationstate:
          dataType: string
          description: the allocation state of the Pod
        capacity:
          dataType: list
          description: the capacity of the Pod
          parms:
            capacitytotal:
              dataType: long
              description: the total capacity available
            capacityused:
              dataType: long
              description: the capacity currently in use
            clusterid:
              dataType: string
              description: the Cluster ID
            clustername:
              dataType: string
              description: the Cluster name
            percentused:
              dataType: string
              description: the percentage of capacity currently in use
            podid:
              dataType: string
              description: the Pod ID
            podname:
              dataType: string
              description: the Pod name
            type:
              dataType: short
              description: the capacity type
            zoneid:
              dataType: string
              description: the Zone ID
            zonename:
              dataType: string
              description: the Zone name
        endip:
          dataType: string
          description: the ending IP for the Pod
        gateway:
          dataType: string
          description: the gateway of the Pod
        id:
          dataType: string
          description: the ID of the Pod
        name:
          dataType: string
          description: the name of the Pod
        netmask:
          dataType: string
          description: the netmask of the Pod
        startip:
          dataType: string
          description: the starting IP for the Pod
        zoneid:
          dataType: string
          description: the Zone ID of the Pod
        zonename:
          dataType: string
          description: the Zone name of the Pod
    user_types:
    - root
  createPortForwardingRule:
    description: Creates a port forwarding rule
    isAsync: 'true'
    name: createPortForwardingRule
    request:
      parms:
        cidrlist:
          dataType: list
          description: the cidr list to forward traffic from
          required: 'false'
          type: list
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        ipaddressid:
          dataType: uuid
          description: the IP address id of the port forwarding rule
          required: 'true'
        networkid:
          dataType: uuid
          description: the network of the virtual machine the port forwarding rule
            will be created for. Required when public IP address is not associated
            with any guest network yet (VPC case).
          required: 'false'
        openfirewall:
          dataType: boolean
          description: if true, firewall rule for source/end public port is automatically
            created; if false - firewall rule has to be created explicitly. If not
            specified 1) defaulted to false when PF rule is being created for VPC
            guest network 2) in all other cases defaulted to true
          required: 'false'
        privateendport:
          dataType: integer
          description: the ending port of port forwarding rule's private port range
          required: 'false'
        privateport:
          dataType: integer
          description: the starting port of port forwarding rule's private port range
          required: 'true'
        protocol:
          dataType: string
          description: the protocol for the port fowarding rule. Valid values are
            TCP or UDP.
          required: 'true'
        publicendport:
          dataType: integer
          description: the ending port of port forwarding rule's private port range
          required: 'false'
        publicport:
          dataType: integer
          description: the starting port of port forwarding rule's public port range
          required: 'true'
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine for the port forwarding rule
          required: 'true'
        vmguestip:
          dataType: string
          description: VM guest nic secondary IP address for the port forwarding rule
          required: 'false'
    response:
      parms:
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        fordisplay:
          dataType: boolean
          description: is firewall for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the ID of the port forwarding rule
        ipaddress:
          dataType: string
          description: the public ip address for the port forwarding rule
        ipaddressid:
          dataType: string
          description: the public ip address id for the port forwarding rule
        networkid:
          dataType: string
          description: the id of the guest network the port forwarding rule belongs
            to
        privateendport:
          dataType: string
          description: the ending port of port forwarding rule's private port range
        privateport:
          dataType: string
          description: the starting port of port forwarding rule's private port range
        protocol:
          dataType: string
          description: the protocol of the port forwarding rule
        publicendport:
          dataType: string
          description: the ending port of port forwarding rule's private port range
        publicport:
          dataType: string
          description: the starting port of port forwarding rule's public port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        virtualmachinedisplayname:
          dataType: string
          description: the VM display name for the port forwarding rule
        virtualmachineid:
          dataType: string
          description: the VM ID for the port forwarding rule
        virtualmachinename:
          dataType: string
          description: the VM name for the port forwarding rule
        vmguestip:
          dataType: string
          description: the vm ip address for the port forwarding rule
    user_types:
    - domain
    - root
    - user
  createPortableIpRange:
    description: adds a range of portable public IP's to a region
    isAsync: 'true'
    name: createPortableIpRange
    request:
      parms:
        endip:
          dataType: string
          description: the ending IP address in the portable IP range
          required: 'true'
        gateway:
          dataType: string
          description: the gateway for the portable IP range
          required: 'true'
        netmask:
          dataType: string
          description: the netmask of the portable IP range
          required: 'true'
        regionid:
          dataType: integer
          description: Id of the Region
          required: 'true'
        startip:
          dataType: string
          description: the beginning IP address in the portable IP range
          required: 'true'
        vlan:
          dataType: string
          description: VLAN id, if not specified defaulted to untagged
          required: 'false'
    response:
      parms:
        endip:
          dataType: string
          description: the end ip of the portable IP range
        gateway:
          dataType: string
          description: the gateway of the VLAN IP range
        id:
          dataType: string
          description: portable IP range ID
        netmask:
          dataType: string
          description: the netmask of the VLAN IP range
        portableipaddress:
          dataType: list
          description: List of portable IP and association with zone/network/vpc details
            that are part of GSLB rule
          parms:
            accountid:
              dataType: string
              description: the account ID the portable IP address is associated with
            allocated:
              dataType: date
              description: date the portal IP address was acquired
            domainid:
              dataType: string
              description: the domain ID the portable IP address is associated with
            ipaddress:
              dataType: string
              description: public IP address
            networkid:
              dataType: string
              description: the ID of the Network where ip belongs to
            physicalnetworkid:
              dataType: string
              description: the physical network this belongs to
            regionid:
              dataType: integer
              description: Region Id in which global load balancer is created
            state:
              dataType: string
              description: 'State of the ip address. Can be: Allocatin, Allocated
                and Releasing'
            vpcid:
              dataType: string
              description: VPC the ip belongs to
            zoneid:
              dataType: string
              description: the ID of the zone the public IP address belongs to
        regionid:
          dataType: integer
          description: Region Id in which portable ip range is provisioned
        startip:
          dataType: string
          description: the start ip of the portable IP range
        vlan:
          dataType: string
          description: the ID or VID of the VLAN.
    sinceVersion: 4.2.0
    user_types:
    - root
  createPrivateGateway:
    description: Creates a private gateway
    isAsync: 'true'
    name: createPrivateGateway
    request:
      parms:
        aclid:
          dataType: uuid
          description: the ID of the network ACL
          required: 'false'
        gateway:
          dataType: string
          description: the gateway of the Private gateway
          required: 'true'
        ipaddress:
          dataType: string
          description: the IP address of the Private gateaway
          required: 'true'
        netmask:
          dataType: string
          description: the netmask of the Private gateway
          required: 'true'
        networkofferingid:
          dataType: uuid
          description: the uuid of the network offering to use for the private gateways
            network connection
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID the network belongs to
          required: 'false'
        sourcenatsupported:
          dataType: boolean
          description: 'source NAT supported value. Default value false. If ''true''
            source NAT is enabled on the private gateway ''false'': sourcenat is not
            supported'
          required: 'false'
        vlan:
          dataType: string
          description: the network implementation uri for the private gateway
          required: 'true'
        vpcid:
          dataType: uuid
          description: the VPC network belongs to
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the private gateway
        aclid:
          dataType: string
          description: ACL Id set for private gateway
        domain:
          dataType: string
          description: the domain associated with the private gateway
        domainid:
          dataType: string
          description: the ID of the domain associated with the private gateway
        gateway:
          dataType: string
          description: the gateway
        id:
          dataType: string
          description: the id of the private gateway
        ipaddress:
          dataType: string
          description: the private gateway's ip address
        netmask:
          dataType: string
          description: the private gateway's netmask
        physicalnetworkid:
          dataType: string
          description: the physical network id
        project:
          dataType: string
          description: the project name of the private gateway
        projectid:
          dataType: string
          description: the project id of the private gateway
        sourcenatsupported:
          dataType: boolean
          description: Souce Nat enable status
        state:
          dataType: string
          description: State of the gateway, can be Creating, Ready, Deleting
        vlan:
          dataType: string
          description: the network implementation uri for the private gateway
        vpcid:
          dataType: string
          description: VPC the private gateaway belongs to
        zoneid:
          dataType: string
          description: zone id of the private gateway
        zonename:
          dataType: string
          description: the name of the zone the private gateway belongs to
    user_types:
    - root
  createProject:
    description: Creates a project
    isAsync: 'true'
    name: createProject
    request:
      parms:
        account:
          dataType: string
          description: account who will be Admin for the project
          required: 'false'
        displaytext:
          dataType: string
          description: display text of the project
          required: 'true'
        domainid:
          dataType: uuid
          description: domain ID of the account owning a project
          required: 'false'
        name:
          dataType: string
          description: name of the project
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the project's owner
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            project
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the project can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by project
          sinceVersion: 4.2.0
        displaytext:
          dataType: string
          description: the displaytext of the project
        domain:
          dataType: string
          description: the domain name where the project belongs to
        domainid:
          dataType: string
          description: the domain id the project belongs to
        id:
          dataType: string
          description: the id of the project
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            project to acquire
          sinceVersion: 4.2.0
        iplimit:
          dataType: string
          description: the total number of public ip addresses this project can acquire
          sinceVersion: 4.2.0
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            project
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this project
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the project can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by project
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the project
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            project
          sinceVersion: 4.2.0
        networklimit:
          dataType: string
          description: the total number of networks the project can own
          sinceVersion: 4.2.0
        networktotal:
          dataType: long
          description: the total number of networks owned by project
          sinceVersion: 4.2.0
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this project
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the project can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this project
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the project can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this project
          sinceVersion: 4.2.0
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this project
          sinceVersion: 4.2.0
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this project
          sinceVersion: 4.2.0
        state:
          dataType: string
          description: the state of the project
        tags:
          dataType: list
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            project
          sinceVersion: 4.2.0
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            project
          sinceVersion: 4.2.0
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            project
          sinceVersion: 4.2.0
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this project
            to acquire
          sinceVersion: 4.2.0
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this project
          sinceVersion: 4.2.0
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this project
          sinceVersion: 4.2.0
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this project
          sinceVersion: 4.2.0
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this project
          sinceVersion: 4.2.0
        volumeavailable:
          dataType: string
          description: the total volume available for this project
          sinceVersion: 4.2.0
        volumelimit:
          dataType: string
          description: the total volume which can be used by this project
          sinceVersion: 4.2.0
        volumetotal:
          dataType: long
          description: the total volume being used by this project
          sinceVersion: 4.2.0
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this project
          sinceVersion: 4.2.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the project can own
          sinceVersion: 4.2.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by project
          sinceVersion: 4.2.0
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  createRemoteAccessVpn:
    description: Creates a l2tp/ipsec remote access vpn
    isAsync: 'true'
    name: createRemoteAccessVpn
    request:
      parms:
        account:
          dataType: string
          description: an optional account for the VPN. Must be used with domainId.
          required: 'false'
        domainid:
          dataType: uuid
          description: an optional domainId for the VPN. If the account parameter
            is used, domainId must also be used.
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the vpn to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        iprange:
          dataType: string
          description: the range of ip addresses to allocate to vpn clients. The first
            ip in the range will be taken by the vpn server
          required: 'false'
        openfirewall:
          dataType: boolean
          description: if true, firewall rule for source/end pubic port is automatically
            created; if false - firewall rule has to be created explicitely. Has value
            true by default
          required: 'false'
        publicipid:
          dataType: uuid
          description: public ip address id of the vpn server
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account of the remote access vpn
        domain:
          dataType: string
          description: the domain name of the account of the remote access vpn
        domainid:
          dataType: string
          description: the domain id of the account of the remote access vpn
        fordisplay:
          dataType: boolean
          description: is vpn for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the remote access vpn
        iprange:
          dataType: string
          description: the range of ips to allocate to the clients
        presharedkey:
          dataType: string
          description: the ipsec preshared key
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        publicip:
          dataType: string
          description: the public ip address of the vpn server
        publicipid:
          dataType: string
          description: the public ip address of the vpn server
        state:
          dataType: string
          description: the state of the rule
    user_types:
    - domain
    - root
    - user
  createSSHKeyPair:
    description: Create a new keypair and returns the private key
    isAsync: 'false'
    name: createSSHKeyPair
    request:
      parms:
        account:
          dataType: string
          description: an optional account for the ssh key. Must be used with domainId.
          required: 'false'
        domainid:
          dataType: uuid
          description: an optional domainId for the ssh key. If the account parameter
            is used, domainId must also be used.
          required: 'false'
        name:
          dataType: string
          description: Name of the keypair
          required: 'true'
        projectid:
          dataType: uuid
          description: an optional project for the ssh key
          required: 'false'
    response:
      parms:
        dataType: string
        description: Private key
        name: privatekey
    user_types:
    - domain
    - root
    - user
  createSecondaryStagingStore:
    description: create secondary staging store.
    isAsync: 'false'
    name: createSecondaryStagingStore
    request:
      parms:
        details:
          dataType: map
          description: the details for the staging store
          required: 'false'
          type: map
        provider:
          dataType: string
          description: the staging store provider name
          required: 'false'
        scope:
          dataType: string
          description: 'the scope of the staging store: zone only for now'
          required: 'false'
        url:
          dataType: string
          description: the URL for the staging store
          required: 'true'
        zoneid:
          dataType: uuid
          description: the Zone ID for the staging store
          required: 'false'
    response:
      parms:
        details:
          dataType: set
          description: the details of the image store
        id:
          dataType: string
          description: the ID of the image store
        name:
          dataType: string
          description: the name of the image store
        protocol:
          dataType: string
          description: the protocol of the image store
        providername:
          dataType: string
          description: the provider name of the image store
        scope:
          dataType: scopetype
          description: the scope of the image store
        url:
          dataType: string
          description: the url of the image store
        zoneid:
          dataType: string
          description: the Zone ID of the image store
        zonename:
          dataType: string
          description: the Zone name of the image store
    user_types:
    - root
  createSecurityGroup:
    description: Creates a security group
    isAsync: 'false'
    name: createSecurityGroup
    request:
      parms:
        account:
          dataType: string
          description: an optional account for the security group. Must be used with
            domainId.
          required: 'false'
        description:
          dataType: string
          description: the description of the security group
          required: 'false'
        domainid:
          dataType: uuid
          description: an optional domainId for the security group. If the account
            parameter is used, domainId must also be used.
          required: 'false'
        name:
          dataType: string
          description: name of the security group
          required: 'true'
        projectid:
          dataType: uuid
          description: Create security group for project
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the security group
        description:
          dataType: string
          description: the description of the security group
        domain:
          dataType: string
          description: the domain name of the security group
        domainid:
          dataType: string
          description: the domain ID of the security group
        egressrule:
          dataType: set
          description: the list of egress rules associated with the security group
          parms:
            account:
              dataType: string
              description: account owning the security group rule
            cidr:
              dataType: string
              description: the CIDR notation for the base IP address of the security
                group rule
            endport:
              dataType: integer
              description: 'the ending IP of the security group rule '
            icmpcode:
              dataType: integer
              description: the code for the ICMP message response
            icmptype:
              dataType: integer
              description: the type of the ICMP message response
            protocol:
              dataType: string
              description: the protocol of the security group rule
            ruleid:
              dataType: string
              description: the id of the security group rule
            securitygroupname:
              dataType: string
              description: security group name
            startport:
              dataType: integer
              description: the starting IP of the security group rule
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        id:
          dataType: string
          description: the ID of the security group
        ingressrule:
          dataType: set
          description: the list of ingress rules associated with the security group
          parms:
            account:
              dataType: string
              description: account owning the security group rule
            cidr:
              dataType: string
              description: the CIDR notation for the base IP address of the security
                group rule
            endport:
              dataType: integer
              description: 'the ending IP of the security group rule '
            icmpcode:
              dataType: integer
              description: the code for the ICMP message response
            icmptype:
              dataType: integer
              description: the type of the ICMP message response
            protocol:
              dataType: string
              description: the protocol of the security group rule
            ruleid:
              dataType: string
              description: the id of the security group rule
            securitygroupname:
              dataType: string
              description: security group name
            startport:
              dataType: integer
              description: the starting IP of the security group rule
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the name of the security group
        project:
          dataType: string
          description: the project name of the group
        projectid:
          dataType: string
          description: the project id of the group
        tags:
          dataType: set
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    user_types:
    - domain
    - root
    - user
  createServiceInstance:
    description: Creates a system virtual-machine that implements network services
    isAsync: 'true'
    name: createServiceInstance
    request:
      parms:
        account:
          dataType: string
          description: An optional account for the virtual machine. Must be used with
            domainId.
          required: 'false'
        domainid:
          dataType: uuid
          description: An optional domainId for the virtual machine. If the account
            parameter is used, domainId must also be used.
          required: 'false'
        leftnetworkid:
          dataType: uuid
          description: The left (inside) network for service instance
          required: 'true'
        name:
          dataType: string
          description: The name of the service instance
          required: 'true'
        projectid:
          dataType: uuid
          description: Project ID for the service instance
          required: 'false'
        rightnetworkid:
          dataType: uuid
          description: The right (outside) network ID for the service instance
          required: 'true'
        serviceofferingid:
          dataType: uuid
          description: The service offering ID that defines the resources consumed
            by the service appliance
          required: 'true'
        templateid:
          dataType: uuid
          description: The template ID that specifies the image for the service appliance
          required: 'true'
        zoneid:
          dataType: uuid
          description: Availability zone for the service instance
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        id:
          dataType: string
          description: the ID of the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
    user_types:
    - root
  createServiceOffering:
    description: Creates a service offering.
    isAsync: 'false'
    name: createServiceOffering
    request:
      parms:
        bytesreadrate:
          dataType: long
          description: bytes read rate of the disk offering
          required: 'false'
        byteswriterate:
          dataType: long
          description: bytes write rate of the disk offering
          required: 'false'
        cpunumber:
          dataType: integer
          description: the CPU number of the service offering
          required: 'false'
        cpuspeed:
          dataType: integer
          description: the CPU speed of the service offering in MHz.
          required: 'false'
        customizediops:
          dataType: boolean
          description: whether compute offering iops is custom or not
          required: 'false'
          sinceVersion: '4.4'
        deploymentplanner:
          dataType: string
          description: The deployment planner heuristics used to deploy a VM of this
            offering. If null, value of global config vm.deployment.planner is used
          required: 'false'
        displaytext:
          dataType: string
          description: the display text of the service offering
          required: 'true'
        domainid:
          dataType: uuid
          description: the ID of the containing domain, null for public offerings
          required: 'false'
        hosttags:
          dataType: string
          description: the host tag for this service offering.
          required: 'false'
        hypervisorsnapshotreserve:
          dataType: integer
          description: Hypervisor snapshot reserve space as a percent of a volume
            (for managed storage using Xen or VMware)
          required: 'false'
          sinceVersion: '4.4'
        iopsreadrate:
          dataType: long
          description: io requests read rate of the disk offering
          required: 'false'
        iopswriterate:
          dataType: long
          description: io requests write rate of the disk offering
          required: 'false'
        issystem:
          dataType: boolean
          description: is this a system vm offering
          required: 'false'
        isvolatile:
          dataType: boolean
          description: true if the virtual machine needs to be volatile so that on
            every reboot of VM, original root disk is dettached then destroyed and
            a fresh root disk is created and attached to VM
          required: 'false'
        limitcpuuse:
          dataType: boolean
          description: restrict the CPU usage to committed service offering
          required: 'false'
        maxiops:
          dataType: long
          description: max iops of the compute offering
          required: 'false'
          sinceVersion: '4.4'
        memory:
          dataType: integer
          description: the total memory of the service offering in MB
          required: 'false'
        miniops:
          dataType: long
          description: min iops of the compute offering
          required: 'false'
          sinceVersion: '4.4'
        name:
          dataType: string
          description: the name of the service offering
          required: 'true'
        networkrate:
          dataType: integer
          description: data transfer rate in megabits per second allowed. Supported
            only for non-System offering and system offerings having "domainrouter"
            systemvmtype
          required: 'false'
        offerha:
          dataType: boolean
          description: the HA for the service offering
          required: 'false'
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes. Valid values are
            thin, sparse, fat.
          required: 'false'
        serviceofferingdetails:
          dataType: map
          description: details for planner, used to store specific parameters
          required: 'false'
          type: map
        storagetype:
          dataType: string
          description: the storage type of the service offering. Values are local
            and shared.
          required: 'false'
        systemvmtype:
          dataType: string
          description: the system VM type. Possible types are "domainrouter", "consoleproxy"
            and "secondarystoragevm".
          required: 'false'
        tags:
          dataType: string
          description: the tags for this service offering.
          required: 'false'
    response:
      parms:
        cpunumber:
          dataType: integer
          description: the number of CPU
        cpuspeed:
          dataType: integer
          description: the clock rate CPU speed in Mhz
        created:
          dataType: date
          description: the date this service offering was created
        defaultuse:
          dataType: boolean
          description: is this a  default system vm offering
        deploymentplanner:
          dataType: string
          description: deployment strategy used to deploy VM.
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the service offering
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the service offering
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the service offering
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the service offering
        displaytext:
          dataType: string
          description: an alternate display text of the service offering.
        domain:
          dataType: string
          description: Domain name for the offering
        domainid:
          dataType: string
          description: the domain id of the service offering
        hosttags:
          dataType: string
          description: the host tag for the service offering
        hypervisorsnapshotreserve:
          dataType: integer
          description: Hypervisor snapshot reserve space as a percent of a volume
            (for managed storage using Xen or VMware)
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the service offering
        iscustomized:
          dataType: boolean
          description: is true if the offering is customized
          sinceVersion: 4.3.0
        iscustomizediops:
          dataType: boolean
          description: true if disk offering uses custom iops, false otherwise
          sinceVersion: '4.4'
        issystem:
          dataType: boolean
          description: is this a system vm offering
        isvolatile:
          dataType: boolean
          description: true if the vm needs to be volatile, i.e., on every reboot
            of vm from API root disk is discarded and creates a new root disk
        limitcpuuse:
          dataType: boolean
          description: restrict the CPU usage to committed service offering
        maxiops:
          dataType: long
          description: the max iops of the disk offering
          sinceVersion: '4.4'
        memory:
          dataType: integer
          description: the memory in MB
        miniops:
          dataType: long
          description: the min iops of the disk offering
          sinceVersion: '4.4'
        name:
          dataType: string
          description: the name of the service offering
        networkrate:
          dataType: integer
          description: data transfer rate in megabits per second allowed.
        offerha:
          dataType: boolean
          description: the ha support in the service offering
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes. Valid values are
            thin, sparse, fat.
          sinceVersion: 4.4.0
        serviceofferingdetails:
          dataType: map
          description: additional key/value details tied with this service offering
          sinceVersion: 4.2.0
        storagetype:
          dataType: string
          description: the storage type for this service offering
        systemvmtype:
          dataType: string
          description: is this a the systemvm type for system vm offering
        tags:
          dataType: string
          description: the tags for the service offering
    user_types:
    - root
  createSnapshot:
    description: Creates an instant snapshot of a volume.
    isAsync: 'true'
    name: createSnapshot
    request:
      parms:
        account:
          dataType: string
          description: The account of the snapshot. The account parameter must be
            used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: The domain ID of the snapshot. If used with the account parameter,
            specifies a domain for the account associated with the disk volume.
          required: 'false'
        policyid:
          dataType: uuid
          description: policy id of the snapshot, if this is null, then use MANUAL_POLICY.
          required: 'false'
        quiescevm:
          dataType: boolean
          description: quiesce vm if true
          required: 'false'
        volumeid:
          dataType: uuid
          description: The ID of the disk volume
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the snapshot
        created:
          dataType: date
          description: '  the date the snapshot was created'
        domain:
          dataType: string
          description: the domain name of the snapshot's account
        domainid:
          dataType: string
          description: the domain ID of the snapshot's account
        id:
          dataType: string
          description: ID of the snapshot
        intervaltype:
          dataType: string
          description: valid types are hourly, daily, weekly, monthy, template, and
            none.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: name of the snapshot
        physicalsize:
          dataType: long
          description: physical size of backedup snapshot on image store
        project:
          dataType: string
          description: the project name of the snapshot
        projectid:
          dataType: string
          description: the project id of the snapshot
        revertable:
          dataType: boolean
          description: indicates whether the underlying storage supports reverting
            the volume to this snapshot
        snapshottype:
          dataType: string
          description: the type of the snapshot
        state:
          dataType: state
          description: the state of the snapshot. BackedUp means that snapshot is
            ready to be used; Creating - the snapshot is being allocated on the primary
            storage; BackingUp - the snapshot is being backed up on secondary storage
        tags:
          dataType: list
          description: the list of resource tags associated with snapshot
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        volumeid:
          dataType: string
          description: ID of the disk volume
        volumename:
          dataType: string
          description: name of the disk volume
        volumetype:
          dataType: string
          description: type of the disk volume
        zoneid:
          dataType: string
          description: id of the availability zone
    user_types:
    - domain
    - root
    - user
  createSnapshotPolicy:
    description: Creates a snapshot policy for the account.
    isAsync: 'false'
    name: createSnapshotPolicy
    request:
      parms:
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the policy to the
            end user or not
          required: 'false'
          sinceVersion: '4.4'
        intervaltype:
          dataType: string
          description: valid values are HOURLY, DAILY, WEEKLY, and MONTHLY
          required: 'true'
        maxsnaps:
          dataType: integer
          description: maximum number of snapshots to retain
          required: 'true'
        schedule:
          dataType: string
          description: time the snapshot is scheduled to be taken. Format is:* if
            HOURLY, MM* if DAILY, MM:HH* if WEEKLY, MM:HH:DD (1-7)* if MONTHLY, MM:HH:DD
            (1-28)
          required: 'true'
        timezone:
          dataType: string
          description: Specifies a timezone for this command. For more information
            on the timezone parameter, see Time Zone Format.
          required: 'true'
        volumeid:
          dataType: uuid
          description: the ID of the disk volume
          required: 'true'
    response:
      parms:
        fordisplay:
          dataType: boolean
          description: is this policy for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the ID of the snapshot policy
        intervaltype:
          dataType: short
          description: the interval type of the snapshot policy
        maxsnaps:
          dataType: int
          description: maximum number of snapshots retained
        schedule:
          dataType: string
          description: time the snapshot is scheduled to be taken.
        timezone:
          dataType: string
          description: the time zone of the snapshot policy
        volumeid:
          dataType: string
          description: the ID of the disk volume
    user_types:
    - domain
    - root
    - user
  createStaticRoute:
    description: Creates a static route
    isAsync: 'true'
    name: createStaticRoute
    request:
      parms:
        cidr:
          dataType: string
          description: static route cidr
          required: 'true'
        gatewayid:
          dataType: uuid
          description: the gateway id we are creating static route for
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the static route
        cidr:
          dataType: string
          description: static route CIDR
        domain:
          dataType: string
          description: the domain associated with the static route
        domainid:
          dataType: string
          description: the ID of the domain associated with the static route
        gatewayid:
          dataType: string
          description: VPC gateway the route is created for
        id:
          dataType: string
          description: the ID of static route
        project:
          dataType: string
          description: the project name of the static route
        projectid:
          dataType: string
          description: the project id of the static route
        state:
          dataType: string
          description: the state of the static route
        tags:
          dataType: list
          description: the list of resource tags associated with static route
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        vpcid:
          dataType: string
          description: VPC the static route belongs to
    user_types:
    - domain
    - root
    - user
  createStorageNetworkIpRange:
    description: Creates a Storage network IP range.
    isAsync: 'true'
    name: createStorageNetworkIpRange
    request:
      parms:
        endip:
          dataType: string
          description: the ending IP address
          required: 'false'
        gateway:
          dataType: string
          description: the gateway for storage network
          required: 'true'
        netmask:
          dataType: string
          description: the netmask for storage network
          required: 'true'
        podid:
          dataType: uuid
          description: UUID of pod where the ip range belongs to
          required: 'true'
        startip:
          dataType: string
          description: the beginning IP address
          required: 'true'
        vlan:
          dataType: integer
          description: Optional. The vlan the ip range sits on, default to Null when
            it is not specificed which means you network is not on any Vlan. This
            is mainly for Vmware as other hypervisors can directly reterive bridge
            from pyhsical network traffic type table
          required: 'false'
    response:
      parms:
        endip:
          dataType: string
          description: the end ip of the storage network IP range
        gateway:
          dataType: string
          description: the gateway of the storage network IP range
        id:
          dataType: string
          description: the uuid of storage network IP range.
        netmask:
          dataType: string
          description: the netmask of the storage network IP range
        networkid:
          dataType: string
          description: the network uuid of storage network IP range
        podid:
          dataType: string
          description: the Pod uuid for the storage network IP range
        startip:
          dataType: string
          description: the start ip of the storage network IP range
        vlan:
          dataType: integer
          description: the ID or VID of the VLAN.
        zoneid:
          dataType: string
          description: the Zone uuid of the storage network IP range
    sinceVersion: 3.0.0
    user_types:
    - root
  createStoragePool:
    description: Creates a storage pool.
    isAsync: 'false'
    name: createStoragePool
    request:
      parms:
        capacitybytes:
          dataType: long
          description: bytes CloudStack can provision from this storage pool
          required: 'false'
        capacityiops:
          dataType: long
          description: IOPS CloudStack can provision from this storage pool
          required: 'false'
        clusterid:
          dataType: uuid
          description: the cluster ID for the storage pool
          required: 'false'
        details:
          dataType: map
          description: the details for the storage pool
          required: 'false'
          type: map
        hypervisor:
          dataType: string
          description: hypervisor type of the hosts in zone that will be attached
            to this storage pool. KVM, VMware supported as of now.
          required: 'false'
        managed:
          dataType: boolean
          description: whether the storage should be managed by CloudStack
          required: 'false'
        name:
          dataType: string
          description: the name for the storage pool
          required: 'true'
        podid:
          dataType: uuid
          description: the Pod ID for the storage pool
          required: 'false'
        provider:
          dataType: string
          description: the storage provider name
          required: 'false'
        scope:
          dataType: string
          description: 'the scope of the storage: cluster or zone'
          required: 'false'
        tags:
          dataType: string
          description: the tags for the storage pool
          required: 'false'
        url:
          dataType: string
          description: the URL of the storage pool
          required: 'true'
        zoneid:
          dataType: uuid
          description: the Zone ID for the storage pool
          required: 'true'
    response:
      parms:
        capacityiops:
          dataType: long
          description: IOPS CloudStack can provision from this storage pool
        clusterid:
          dataType: string
          description: the ID of the cluster for the storage pool
        clustername:
          dataType: string
          description: the name of the cluster for the storage pool
        created:
          dataType: date
          description: the date and time the storage pool was created
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the storage pool
        disksizeused:
          dataType: long
          description: the host's currently used disk size
        hypervisor:
          dataType: string
          description: the hypervisor type of the storage pool
        id:
          dataType: string
          description: the ID of the storage pool
        ipaddress:
          dataType: string
          description: the IP address of the storage pool
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the name of the storage pool
        overprovisionfactor:
          dataType: string
          description: the overprovisionfactor for the storage pool
          sinceVersion: '4.4'
        path:
          dataType: string
          description: the storage pool path
        podid:
          dataType: string
          description: the Pod ID of the storage pool
        podname:
          dataType: string
          description: the Pod name of the storage pool
        scope:
          dataType: string
          description: the scope of the storage pool
        state:
          dataType: storagepoolstatus
          description: the state of the storage pool
        storagecapabilities:
          dataType: map
          description: the storage pool capabilities
        suitableformigration:
          dataType: boolean
          description: true if this pool is suitable to migrate a volume, false otherwise
        tags:
          dataType: string
          description: the tags for the storage pool
        type:
          dataType: string
          description: the storage pool type
        zoneid:
          dataType: string
          description: the Zone ID of the storage pool
        zonename:
          dataType: string
          description: the Zone name of the storage pool
    user_types:
    - root
  createTags:
    description: Creates resource tag(s)
    isAsync: 'true'
    name: createTags
    request:
      parms:
        customer:
          dataType: string
          description: identifies client specific tag. When the value is not null,
            the tag can't be used by cloudStack code internally
          required: 'false'
        resourceids:
          dataType: list
          description: list of resources to create the tags for
          required: 'true'
          type: list
        resourcetype:
          dataType: string
          description: type of the resource
          required: 'true'
        tags:
          dataType: map
          description: Map of tags (key/value pairs)
          required: 'true'
          type: map
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 4.0.0
    user_types:
    - domain
    - root
    - user
  createTemplate:
    description: Creates a template of a virtual machine. The virtual machine must
      be in a STOPPED state. A template created from this command is automatically
      designated as a private template visible to the account that created it.
    isAsync: 'true'
    name: createTemplate
    request:
      parms:
        bits:
          dataType: integer
          description: 32 or 64 bit
          required: 'false'
        details:
          dataType: map
          description: Template details in key/value pairs.
          required: 'false'
          type: map
        displaytext:
          dataType: string
          description: the display text of the template. This is usually used for
            display purposes.
          required: 'true'
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
          required: 'false'
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
          required: 'false'
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
          required: 'false'
        name:
          dataType: string
          description: the name of the template
          required: 'true'
        ostypeid:
          dataType: uuid
          description: the ID of the OS Type that best represents the OS of this template.
          required: 'true'
        passwordenabled:
          dataType: boolean
          description: true if the template supports the password reset feature; default
            is false
          required: 'false'
        requireshvm:
          dataType: boolean
          description: true if the template requres HVM, false otherwise
          required: 'false'
        snapshotid:
          dataType: uuid
          description: the ID of the snapshot the template is being created from.
            Either this parameter, or volumeId has to be passed in
          required: 'false'
        templatetag:
          dataType: string
          description: the tag for this template.
          required: 'false'
        url:
          dataType: string
          description: Optional, only for baremetal hypervisor. The directory name
            where template stored on CIFS server
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: Optional, VM ID. If this presents, it is going to create a
            baremetal template for VM this ID refers to. This is only for VM whose
            hypervisor type is BareMetal
          required: 'false'
        volumeid:
          dataType: uuid
          description: the ID of the disk volume the template is being created from.
            Either this parameter, or snapshotId has to be passed in
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name to which the template belongs
        accountid:
          dataType: string
          description: the account id to which the template belongs
        bootable:
          dataType: boolean
          description: true if the ISO is bootable, false otherwise
        checksum:
          dataType: string
          description: checksum of the template
        created:
          dataType: date
          description: the date this template was created
        crossZones:
          dataType: boolean
          description: true if the template is managed across all Zones, false otherwise
        details:
          dataType: map
          description: additional key/value details tied with template
        displaytext:
          dataType: string
          description: the template display text
        domain:
          dataType: string
          description: the name of the domain to which the template belongs
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        format:
          dataType: imageformat
          description: the format of the template.
        hostid:
          dataType: string
          description: the ID of the secondary storage host for the template
        hostname:
          dataType: string
          description: the name of the secondary storage host for the template
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the template ID
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
        isextractable:
          dataType: boolean
          description: true if the template is extractable, false otherwise
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        isready:
          dataType: boolean
          description: true if the template is ready to be deployed from, false otherwise.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the template name
        ostypeid:
          dataType: string
          description: the ID of the OS type for this template.
        ostypename:
          dataType: string
          description: the name of the OS type for this template.
        passwordenabled:
          dataType: boolean
          description: true if the reset password feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the template
        projectid:
          dataType: string
          description: the project id of the template
        removed:
          dataType: date
          description: the date this template was removed
        size:
          dataType: long
          description: the size of the template
        sourcetemplateid:
          dataType: string
          description: the template ID of the parent template if present
        sshkeyenabled:
          dataType: boolean
          description: true if template is sshkey enabled, false otherwise
        status:
          dataType: string
          description: the status of the template
        tags:
          dataType: set
          description: the list of resource tags associated with tempate
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatetag:
          dataType: string
          description: the tag of this template
        templatetype:
          dataType: string
          description: the type of the template
        zoneid:
          dataType: string
          description: the ID of the zone for this template
        zonename:
          dataType: string
          description: the name of the zone for this template
    user_types:
    - domain
    - root
    - user
  createUser:
    description: Creates a user for an account that already exists
    isAsync: 'false'
    name: createUser
    request:
      parms:
        account:
          dataType: string
          description: Creates the user under the specified account. If no account
            is specified, the username will be used as the account name.
          required: 'true'
        domainid:
          dataType: uuid
          description: Creates the user under the specified domain. Has to be accompanied
            with the account parameter
          required: 'false'
        email:
          dataType: string
          description: email
          required: 'true'
        firstname:
          dataType: string
          description: firstname
          required: 'true'
        lastname:
          dataType: string
          description: lastname
          required: 'true'
        password:
          dataType: string
          description: Clear text password (Default hashed to SHA256SALT). If you
            wish to use any other hashing algorithm, you would need to write a custom
            authentication adapter See Docs section.
          required: 'true'
        timezone:
          dataType: string
          description: Specifies a timezone for this command. For more information
            on the timezone parameter, see Time Zone Format.
          required: 'false'
        userid:
          dataType: string
          description: User UUID, required for adding account from external provisioning
            system
          required: 'false'
        username:
          dataType: string
          description: Unique username.
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the user
        accountid:
          dataType: string
          description: the account ID of the user
        accounttype:
          dataType: short
          description: the account type of the user
        apikey:
          dataType: string
          description: the api key of the user
        created:
          dataType: date
          description: the date and time the user account was created
        domain:
          dataType: string
          description: the domain name of the user
        domainid:
          dataType: string
          description: the domain ID of the user
        email:
          dataType: string
          description: the user email address
        firstname:
          dataType: string
          description: the user firstname
        id:
          dataType: string
          description: the user ID
        iscallerchilddomain:
          dataType: boolean
          description: the boolean value representing if the updating target is in
            caller's child domain
        isdefault:
          dataType: boolean
          description: true if user is default, false otherwise
          sinceVersion: 4.2.0
        lastname:
          dataType: string
          description: the user lastname
        secretkey:
          dataType: string
          description: the secret key of the user
        state:
          dataType: string
          description: the user state
        timezone:
          dataType: string
          description: the timezone user was created in
        username:
          dataType: string
          description: the user name
    user_types:
    - domain
    - root
  createVMSnapshot:
    description: Creates snapshot for a vm.
    isAsync: 'true'
    name: createVMSnapshot
    request:
      parms:
        description:
          dataType: string
          description: The description of the snapshot
          required: 'false'
        name:
          dataType: string
          description: The display name of the snapshot
          required: 'false'
        quiescevm:
          dataType: boolean
          description: quiesce vm if true
          required: 'false'
        snapshotmemory:
          dataType: boolean
          description: snapshot memory if true
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: The ID of the vm
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the disk volume
        created:
          dataType: date
          description: the create date of the vm snapshot
        current:
          dataType: boolean
          description: indiates if this is current snapshot
        description:
          dataType: string
          description: the description of the vm snapshot
        displayname:
          dataType: string
          description: the display name of the vm snapshot
        domain:
          dataType: string
          description: the domain associated with the disk volume
        domainid:
          dataType: string
          description: the ID of the domain associated with the disk volume
        id:
          dataType: string
          description: the ID of the vm snapshot
        name:
          dataType: string
          description: the name of the vm snapshot
        parent:
          dataType: string
          description: the parent ID of the vm snapshot
        parentName:
          dataType: string
          description: the parent displayName of the vm snapshot
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        state:
          dataType: state
          description: the state of the vm snapshot
        type:
          dataType: string
          description: VM Snapshot type
        virtualmachineid:
          dataType: string
          description: the vm ID of the vm snapshot
        zoneid:
          dataType: string
          description: the Zone ID of the vm snapshot
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
    - user
  createVPC:
    description: Creates a VPC
    isAsync: 'true'
    name: createVPC
    request:
      parms:
        account:
          dataType: string
          description: the account associated with the VPC. Must be used with the
            domainId parameter.
          required: 'false'
        cidr:
          dataType: string
          description: the cidr of the VPC. All VPC guest networks' cidrs should be
            within this CIDR
          required: 'true'
        displaytext:
          dataType: string
          description: the display text of the VPC
          required: 'true'
        domainid:
          dataType: uuid
          description: the domain ID associated with the VPC. If used with the account
            parameter returns the VPC associated with the account for the specified
            domain.
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the vpc to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        name:
          dataType: string
          description: the name of the VPC
          required: 'true'
        networkdomain:
          dataType: string
          description: VPC network domain. All networks inside the VPC will belong
            to this domain
          required: 'false'
        projectid:
          dataType: uuid
          description: create VPC for the project
          required: 'false'
        start:
          dataType: boolean
          description: If set to false, the VPC won't start (VPC VR will not get allocated)
            until its first network gets implemented. True by default.
          required: 'false'
          sinceVersion: '4.3'
        vpcofferingid:
          dataType: uuid
          description: the ID of the VPC offering
          required: 'true'
        zoneid:
          dataType: uuid
          description: the ID of the availability zone
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the VPC
        cidr:
          dataType: string
          description: the cidr the VPC
        created:
          dataType: date
          description: the date this VPC was created
        displaytext:
          dataType: string
          description: an alternate display text of the VPC.
        distributedvpcrouter:
          dataType: boolean
          description: is VPC uses distributed router for one hop forwarding and host
            based network ACL's
          sinceVersion: '4.4'
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the VPC owner
        fordisplay:
          dataType: boolean
          description: is vpc for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the VPC
        name:
          dataType: string
          description: the name of the VPC
        network:
          dataType: list
          description: the list of networks belongign to the VPC
          parms:
            account:
              dataType: string
              description: the owner of the network
            aclid:
              dataType: string
              description: ACL Id associated with the VPC network
            acltype:
              dataType: string
              description: acl type - access type to the network
            broadcastdomaintype:
              dataType: string
              description: Broadcast domain type of the network
            broadcasturi:
              dataType: string
              description: broadcast uri of the network. This parameter is visible
                to ROOT admins only
            canusefordeploy:
              dataType: boolean
              description: list networks available for vm deployment
            cidr:
              dataType: string
              description: Cloudstack managed address space, all CloudStack managed
                VMs get IP address from CIDR
            displaynetwork:
              dataType: boolean
              description: an optional field, whether to the display the network to
                the end user or not.
            displaytext:
              dataType: string
              description: the displaytext of the network
            dns1:
              dataType: string
              description: the first DNS for the network
            dns2:
              dataType: string
              description: the second DNS for the network
            domain:
              dataType: string
              description: the domain name of the network owner
            domainid:
              dataType: string
              description: the domain id of the network owner
            gateway:
              dataType: string
              description: the network's gateway
            id:
              dataType: string
              description: the id of the network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            isdefault:
              dataType: boolean
              description: true if network is default, false otherwise
            ispersistent:
              dataType: boolean
              description: list networks that are persistent
            issystem:
              dataType: boolean
              description: true if network is system, false otherwise
            name:
              dataType: string
              description: the name of the network
            netmask:
              dataType: string
              description: the network's netmask
            networkcidr:
              dataType: string
              description: the network CIDR of the guest network configured with IP
                reservation. It is the summation of CIDR and RESERVED_IP_RANGE
            networkdomain:
              dataType: string
              description: the network domain
            networkofferingavailability:
              dataType: string
              description: availability of the network offering the network is created
                from
            networkofferingconservemode:
              dataType: boolean
              description: true if network offering is ip conserve mode enabled
            networkofferingdisplaytext:
              dataType: string
              description: display text of the network offering the network is created
                from
            networkofferingid:
              dataType: string
              description: network offering id the network is created from
            networkofferingname:
              dataType: string
              description: name of the network offering the network is created from
            physicalnetworkid:
              dataType: string
              description: the physical network id
            project:
              dataType: string
              description: the project name of the address
            projectid:
              dataType: string
              description: the project id of the ipaddress
            related:
              dataType: string
              description: related to what other network configuration
            reservediprange:
              dataType: string
              description: the network's IP range not to be used by CloudStack guest
                VMs and can be used for non CloudStack purposes
            restartrequired:
              dataType: boolean
              description: true network requires restart
            service:
              dataType: list
              description: the list of services
              parms:
                capability:
                  dataType: list
                  description: the list of capabilities
                  parms:
                    canchooseservicecapability:
                      dataType: boolean
                      description: can this service capability value can be choosable
                        while creatine network offerings
                    name:
                      dataType: string
                      description: the capability name
                    value:
                      dataType: string
                      description: the capability value
                name:
                  dataType: string
                  description: the service name
                provider:
                  dataType: list
                  description: the service provider name
                  parms:
                    canenableindividualservice:
                      dataType: boolean
                      description: true if individual services can be enabled/disabled
                    destinationphysicalnetworkid:
                      dataType: string
                      description: the destination physical network
                    id:
                      dataType: string
                      description: uuid of the network provider
                    name:
                      dataType: string
                      description: the provider name
                    physicalnetworkid:
                      dataType: string
                      description: the physical network this belongs to
                    servicelist:
                      dataType: list
                      description: services for this provider
                    state:
                      dataType: string
                      description: state of the network provider
            specifyipranges:
              dataType: boolean
              description: true if network supports specifying ip ranges, false otherwise
            state:
              dataType: string
              description: state of the network
            strechedl2subnet:
              dataType: boolean
              description: true if network can span multiple zones
              sinceVersion: '4.4'
            subdomainaccess:
              dataType: boolean
              description: true if users from subdomains can access the domain level
                network
            tags:
              dataType: list
              description: the list of resource tags associated with network
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
            traffictype:
              dataType: string
              description: the traffic type of the network
            type:
              dataType: string
              description: the type of the network
            vlan:
              dataType: string
              description: The vlan of the network. This parameter is visible to ROOT
                admins only
            vpcid:
              dataType: string
              description: VPC the network belongs to
            zoneid:
              dataType: string
              description: zone id of the network
            zonename:
              dataType: string
              description: the name of the zone the network belongs to
            zonesnetworkspans:
              dataType: set
              description: If a network is enabled for 'streched l2 subnet' then represents
                zones on which network currently spans
              sinceVersion: '4.4'
        networkdomain:
          dataType: string
          description: the network domain of the VPC
        project:
          dataType: string
          description: the project name of the VPC
        projectid:
          dataType: string
          description: the project id of the VPC
        regionlevelvpc:
          dataType: boolean
          description: true if VPC is region level
          sinceVersion: '4.4'
        restartrequired:
          dataType: boolean
          description: true VPC requires restart
        service:
          dataType: list
          description: the list of supported services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        state:
          dataType: string
          description: state of the VPC. Can be Inactive/Enabled
        tags:
          dataType: list
          description: the list of resource tags associated with the project
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        vpcofferingid:
          dataType: string
          description: vpc offering id the VPC is created from
        zoneid:
          dataType: string
          description: zone id of the vpc
        zonename:
          dataType: string
          description: the name of the zone the VPC belongs to
    user_types:
    - domain
    - root
    - user
  createVPCOffering:
    description: Creates VPC offering
    isAsync: 'true'
    name: createVPCOffering
    request:
      parms:
        displaytext:
          dataType: string
          description: the display text of the vpc offering
          required: 'true'
        name:
          dataType: string
          description: the name of the vpc offering
          required: 'true'
        servicecapabilitylist:
          dataType: map
          description: desired service capabilities as part of vpc offering
          required: 'false'
          sinceVersion: '4.4'
          type: map
        serviceofferingid:
          dataType: uuid
          description: the ID of the service offering for the VPC router appliance
          required: 'false'
        serviceproviderlist:
          dataType: map
          description: provider to service mapping. If not specified, the provider
            for the service will be mapped to the default provider on the physical
            network
          required: 'false'
          type: map
        supportedservices:
          dataType: list
          description: services supported by the vpc offering
          required: 'true'
          type: list
    response:
      parms:
        created:
          dataType: date
          description: the date this vpc offering was created
        displaytext:
          dataType: string
          description: an alternate display text of the vpc offering.
        distributedvpcrouter:
          dataType: boolean
          description: ' indicates if the vpc offering supports distributed router
            for one-hop forwarding'
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the vpc offering
        isdefault:
          dataType: boolean
          description: true if vpc offering is default, false otherwise
        name:
          dataType: string
          description: the name of the vpc offering
        service:
          dataType: list
          description: the list of supported services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        state:
          dataType: string
          description: state of the vpc offering. Can be Disabled/Enabled
        supportsregionLevelvpc:
          dataType: boolean
          description: ' indicated if the offering can support region level vpc'
          sinceVersion: '4.4'
    user_types:
    - root
  createVirtualRouterElement:
    description: Create a virtual router element.
    isAsync: 'true'
    name: createVirtualRouterElement
    request:
      parms:
        nspid:
          dataType: uuid
          description: the network service provider ID of the virtual router element
          required: 'true'
        providertype:
          dataType: uuid
          description: The provider type. Supported types are VirtualRouter (default)
            and VPCVirtualRouter
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the provider
        domain:
          dataType: string
          description: the domain associated with the provider
        domainid:
          dataType: string
          description: the domain ID associated with the provider
        enabled:
          dataType: boolean
          description: Enabled/Disabled the service provider
        id:
          dataType: string
          description: the id of the router
        nspid:
          dataType: string
          description: the physical network service provider id of the provider
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
    user_types:
    - domain
    - root
  createVlanIpRange:
    description: Creates a VLAN IP range.
    isAsync: 'false'
    name: createVlanIpRange
    request:
      parms:
        account:
          dataType: string
          description: account who will own the VLAN. If VLAN is Zone wide, this parameter
            should be ommited
          required: 'false'
        domainid:
          dataType: uuid
          description: domain ID of the account owning a VLAN
          required: 'false'
        endip:
          dataType: string
          description: the ending IP address in the VLAN IP range
          required: 'false'
        endipv6:
          dataType: string
          description: the ending IPv6 address in the IPv6 network range
          required: 'false'
        forvirtualnetwork:
          dataType: boolean
          description: true if VLAN is of Virtual type, false if Direct
          required: 'false'
        gateway:
          dataType: string
          description: the gateway of the VLAN IP range
          required: 'false'
        ip6cidr:
          dataType: string
          description: the CIDR of IPv6 network, must be at least /64
          required: 'false'
        ip6gateway:
          dataType: string
          description: the gateway of the IPv6 network. Required for Shared networks
            and Isolated networks when it belongs to VPC
          required: 'false'
        netmask:
          dataType: string
          description: the netmask of the VLAN IP range
          required: 'false'
        networkid:
          dataType: uuid
          description: the network id
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the physical network id
          required: 'false'
        podid:
          dataType: uuid
          description: optional parameter. Have to be specified for Direct Untagged
            vlan only.
          required: 'false'
        projectid:
          dataType: uuid
          description: project who will own the VLAN. If VLAN is Zone wide, this parameter
            should be ommited
          required: 'false'
        startip:
          dataType: string
          description: the beginning IP address in the VLAN IP range
          required: 'false'
        startipv6:
          dataType: string
          description: the beginning IPv6 address in the IPv6 network range
          required: 'false'
        vlan:
          dataType: string
          description: the ID or VID of the VLAN. If not specified, will be defaulted
            to the vlan of the network or if vlan of the network is null - to Untagged
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID of the VLAN IP range
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the VLAN IP range
        description:
          dataType: string
          description: the description of the VLAN IP range
        domain:
          dataType: string
          description: the domain name of the VLAN IP range
        domainid:
          dataType: string
          description: the domain ID of the VLAN IP range
        endip:
          dataType: string
          description: the end ip of the VLAN IP range
        endipv6:
          dataType: string
          description: the end ipv6 of the VLAN IP range
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the VLAN IP range
        gateway:
          dataType: string
          description: the gateway of the VLAN IP range
        id:
          dataType: string
          description: the ID of the VLAN IP range
        ip6cidr:
          dataType: string
          description: the cidr of IPv6 network
        ip6gateway:
          dataType: string
          description: the gateway of IPv6 network
        netmask:
          dataType: string
          description: the netmask of the VLAN IP range
        networkid:
          dataType: string
          description: the network id of vlan range
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        podid:
          dataType: string
          description: the Pod ID for the VLAN IP range
        podname:
          dataType: string
          description: the Pod name for the VLAN IP range
        project:
          dataType: string
          description: the project name of the vlan range
        projectid:
          dataType: string
          description: the project id of the vlan range
        startip:
          dataType: string
          description: the start ip of the VLAN IP range
        startipv6:
          dataType: string
          description: the start ipv6 of the VLAN IP range
        vlan:
          dataType: string
          description: the ID or VID of the VLAN.
        zoneid:
          dataType: string
          description: the Zone ID of the VLAN IP range
    user_types:
    - root
  createVolume:
    description: Creates a disk volume from a disk offering. This disk volume must
      still be attached to a virtual machine to make use of it.
    isAsync: 'true'
    name: createVolume
    request:
      parms:
        account:
          dataType: string
          description: the account associated with the disk volume. Must be used with
            the domainId parameter.
          required: 'false'
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
        diskofferingid:
          dataType: uuid
          description: the ID of the disk offering. Either diskOfferingId or snapshotId
            must be passed in.
          required: 'false'
        displayvolume:
          dataType: boolean
          description: an optional field, whether to display the volume to the end
            user or not.
          required: 'false'
        domainid:
          dataType: uuid
          description: the domain ID associated with the disk offering. If used with
            the account parameter returns the disk volume associated with the account
            for the specified domain.
          required: 'false'
        maxiops:
          dataType: long
          description: max iops
          required: 'false'
        miniops:
          dataType: long
          description: min iops
          required: 'false'
        name:
          dataType: string
          description: the name of the disk volume
          required: 'true'
        projectid:
          dataType: uuid
          description: the project associated with the volume. Mutually exclusive
            with account parameter
          required: 'false'
        size:
          dataType: long
          description: Arbitrary volume size
          required: 'false'
        snapshotid:
          dataType: uuid
          description: the snapshot ID for the disk volume. Either diskOfferingId
            or snapshotId must be passed in.
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine; to be used with snapshot Id,
            VM to which the volume gets attached after creation
          required: 'false'
        zoneid:
          dataType: uuid
          description: the ID of the availability zone
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the disk volume
        attached:
          dataType: date
          description: the date the volume was attached to a VM instance
        chaininfo:
          dataType: string
          description: the chain info of the volume
          sinceVersion: '4.4'
        created:
          dataType: date
          description: the date the disk volume was created
        destroyed:
          dataType: boolean
          description: the boolean state of whether the volume is destroyed or not
        deviceid:
          dataType: long
          description: the ID of the device on user vm the volume is attahed to. This
            tag is not returned when the volume is detached.
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the disk volume
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the disk volume
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the disk volume
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the disk volume
        diskofferingdisplaytext:
          dataType: string
          description: the display text of the disk offering
        diskofferingid:
          dataType: string
          description: ID of the disk offering
        diskofferingname:
          dataType: string
          description: name of the disk offering
        displayvolume:
          dataType: boolean
          description: an optional field whether to the display the volume to the
            end user or not.
        domain:
          dataType: string
          description: the domain associated with the disk volume
        domainid:
          dataType: string
          description: the ID of the domain associated with the disk volume
        hypervisor:
          dataType: string
          description: Hypervisor the volume belongs to
        id:
          dataType: string
          description: ID of the disk volume
        isextractable:
          dataType: boolean
          description: true if the volume is extractable, false otherwise
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        maxiops:
          dataType: long
          description: max iops of the disk volume
        miniops:
          dataType: long
          description: min iops of the disk volume
        name:
          dataType: string
          description: name of the disk volume
        path:
          dataType: string
          description: the path of the volume
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes.
        quiescevm:
          dataType: boolean
          description: need quiesce vm or not when taking snapshot
          sinceVersion: '4.3'
        serviceofferingdisplaytext:
          dataType: string
          description: the display text of the service offering for root disk
        serviceofferingid:
          dataType: string
          description: ID of the service offering for root disk
        serviceofferingname:
          dataType: string
          description: name of the service offering for root disk
        size:
          dataType: long
          description: size of the disk volume
        snapshotid:
          dataType: string
          description: ID of the snapshot from which this volume was created
        state:
          dataType: string
          description: the state of the disk volume
        status:
          dataType: string
          description: the status of the volume
        storage:
          dataType: string
          description: name of the primary storage hosting the disk volume
        storageid:
          dataType: string
          description: id of the primary storage hosting the disk volume; returned
            to admin user only
          sinceVersion: '4.3'
        storagetype:
          dataType: string
          description: shared or local storage
        tags:
          dataType: set
          description: the list of resource tags associated with volume
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        type:
          dataType: string
          description: type of the disk volume (ROOT or DATADISK)
        virtualmachineid:
          dataType: string
          description: id of the virtual machine
        vmdisplayname:
          dataType: string
          description: display name of the virtual machine
        vmname:
          dataType: string
          description: name of the virtual machine
        vmstate:
          dataType: string
          description: state of the virtual machine
        zoneid:
          dataType: string
          description: ID of the availability zone
        zonename:
          dataType: string
          description: name of the availability zone
    user_types:
    - domain
    - root
    - user
  createVpnConnection:
    description: Create site to site vpn connection
    isAsync: 'true'
    name: createVpnConnection
    request:
      parms:
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the vpn to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        passive:
          dataType: boolean
          description: connection is passive or not
          required: 'false'
        s2scustomergatewayid:
          dataType: uuid
          description: id of the customer gateway
          required: 'true'
        s2svpngatewayid:
          dataType: uuid
          description: id of the vpn gateway
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the owner
        cidrlist:
          dataType: string
          description: guest cidr list of the customer gateway
        created:
          dataType: date
          description: the date and time the host was created
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the owner
        dpd:
          dataType: boolean
          description: if DPD is enabled for customer gateway
        esplifetime:
          dataType: long
          description: Lifetime of ESP SA of customer gateway
        esppolicy:
          dataType: string
          description: ESP policy of the customer gateway
        fordisplay:
          dataType: boolean
          description: is connection for display to the regular user
          sinceVersion: '4.4'
        gateway:
          dataType: string
          description: public ip address id of the customer gateway
        id:
          dataType: string
          description: the connection ID
        ikelifetime:
          dataType: long
          description: Lifetime of IKE SA of customer gateway
        ikepolicy:
          dataType: string
          description: IKE policy of the customer gateway
        ipsecpsk:
          dataType: string
          description: IPsec Preshared-Key of the customer gateway
        passive:
          dataType: boolean
          description: State of vpn connection
        project:
          dataType: string
          description: the project name
        projectid:
          dataType: string
          description: the project id
        publicip:
          dataType: string
          description: the public IP address
        removed:
          dataType: date
          description: the date and time the host was removed
        s2scustomergatewayid:
          dataType: string
          description: the customer gateway ID
        s2svpngatewayid:
          dataType: string
          description: the vpn gateway ID
        state:
          dataType: string
          description: State of vpn connection
    user_types:
    - domain
    - root
    - user
  createVpnCustomerGateway:
    description: Creates site to site vpn customer gateway
    isAsync: 'true'
    name: createVpnCustomerGateway
    request:
      parms:
        account:
          dataType: string
          description: the account associated with the gateway. Must be used with
            the domainId parameter.
          required: 'false'
        cidrlist:
          dataType: string
          description: guest cidr list of the customer gateway
          required: 'true'
        domainid:
          dataType: uuid
          description: the domain ID associated with the gateway. If used with the
            account parameter returns the gateway associated with the account for
            the specified domain.
          required: 'false'
        dpd:
          dataType: boolean
          description: If DPD is enabled for VPN connection
          required: 'false'
        esplifetime:
          dataType: long
          description: Lifetime of phase 2 VPN connection to the customer gateway,
            in seconds
          required: 'false'
        esppolicy:
          dataType: string
          description: ESP policy of the customer gateway
          required: 'true'
        gateway:
          dataType: string
          description: public ip address id of the customer gateway
          required: 'true'
        ikelifetime:
          dataType: long
          description: Lifetime of phase 1 VPN connection to the customer gateway,
            in seconds
          required: 'false'
        ikepolicy:
          dataType: string
          description: IKE policy of the customer gateway
          required: 'true'
        ipsecpsk:
          dataType: string
          description: IPsec Preshared-Key of the customer gateway
          required: 'true'
        name:
          dataType: string
          description: name of this customer gateway
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner
        cidrlist:
          dataType: string
          description: guest cidr list of the customer gateway
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the owner
        dpd:
          dataType: boolean
          description: if DPD is enabled for customer gateway
        esplifetime:
          dataType: long
          description: Lifetime of ESP SA of customer gateway
        esppolicy:
          dataType: string
          description: IPsec policy of customer gateway
        gateway:
          dataType: string
          description: public ip address id of the customer gateway
        id:
          dataType: string
          description: the vpn gateway ID
        ikelifetime:
          dataType: long
          description: Lifetime of IKE SA of customer gateway
        ikepolicy:
          dataType: string
          description: IKE policy of customer gateway
        ipaddress:
          dataType: string
          description: guest ip of the customer gateway
        ipsecpsk:
          dataType: string
          description: IPsec preshared-key of customer gateway
        name:
          dataType: string
          description: name of the customer gateway
        project:
          dataType: string
          description: the project name
        projectid:
          dataType: string
          description: the project id
        removed:
          dataType: date
          description: the date and time the host was removed
    user_types:
    - domain
    - root
    - user
  createVpnGateway:
    description: Creates site to site vpn local gateway
    isAsync: 'true'
    name: createVpnGateway
    request:
      parms:
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the vpn to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        vpcid:
          dataType: uuid
          description: public ip address id of the vpn gateway
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the owner
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the owner
        fordisplay:
          dataType: boolean
          description: is vpn gateway for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the vpn gateway ID
        project:
          dataType: string
          description: the project name
        projectid:
          dataType: string
          description: the project id
        publicip:
          dataType: string
          description: the public IP address
        removed:
          dataType: date
          description: the date and time the host was removed
        vpcid:
          dataType: string
          description: the vpc id of this gateway
    user_types:
    - domain
    - root
    - user
  createZone:
    description: Creates a Zone.
    isAsync: 'false'
    name: createZone
    request:
      parms:
        allocationstate:
          dataType: string
          description: Allocation state of this Zone for allocation of new resources
          required: 'false'
        dns1:
          dataType: string
          description: the first DNS for the Zone
          required: 'true'
        dns2:
          dataType: string
          description: the second DNS for the Zone
          required: 'false'
        domain:
          dataType: string
          description: Network domain name for the networks in the zone
          required: 'false'
        domainid:
          dataType: uuid
          description: the ID of the containing domain, null for public zones
          required: 'false'
        guestcidraddress:
          dataType: string
          description: the guest CIDR address for the Zone
          required: 'false'
        internaldns1:
          dataType: string
          description: the first internal DNS for the Zone
          required: 'true'
        internaldns2:
          dataType: string
          description: the second internal DNS for the Zone
          required: 'false'
        ip6dns1:
          dataType: string
          description: the first DNS for IPv6 network in the Zone
          required: 'false'
        ip6dns2:
          dataType: string
          description: the second DNS for IPv6 network in the Zone
          required: 'false'
        localstorageenabled:
          dataType: boolean
          description: true if local storage offering enabled, false otherwise
          required: 'false'
        name:
          dataType: string
          description: the name of the Zone
          required: 'true'
        networktype:
          dataType: string
          description: network type of the zone, can be Basic or Advanced
          required: 'true'
        securitygroupenabled:
          dataType: boolean
          description: true if network is security group enabled, false otherwise
          required: 'false'
    response:
      parms:
        allocationstate:
          dataType: string
          description: the allocation state of the cluster
        capacity:
          dataType: list
          description: the capacity of the Zone
          parms:
            capacitytotal:
              dataType: long
              description: the total capacity available
            capacityused:
              dataType: long
              description: the capacity currently in use
            clusterid:
              dataType: string
              description: the Cluster ID
            clustername:
              dataType: string
              description: the Cluster name
            percentused:
              dataType: string
              description: the percentage of capacity currently in use
            podid:
              dataType: string
              description: the Pod ID
            podname:
              dataType: string
              description: the Pod name
            type:
              dataType: short
              description: the capacity type
            zoneid:
              dataType: string
              description: the Zone ID
            zonename:
              dataType: string
              description: the Zone name
        description:
          dataType: string
          description: Zone description
        dhcpprovider:
          dataType: string
          description: the dhcp Provider for the Zone
        displaytext:
          dataType: string
          description: the display text of the zone
        dns1:
          dataType: string
          description: the first DNS for the Zone
        dns2:
          dataType: string
          description: the second DNS for the Zone
        domain:
          dataType: string
          description: Network domain name for the networks in the zone
        domainid:
          dataType: string
          description: the UUID of the containing domain, null for public zones
        domainname:
          dataType: string
          description: the name of the containing domain, null for public zones
        guestcidraddress:
          dataType: string
          description: the guest CIDR address for the Zone
        id:
          dataType: string
          description: Zone id
        internaldns1:
          dataType: string
          description: the first internal DNS for the Zone
        internaldns2:
          dataType: string
          description: the second internal DNS for the Zone
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the Zone
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the Zone
        localstorageenabled:
          dataType: boolean
          description: true if local storage offering enabled, false otherwise
        name:
          dataType: string
          description: Zone name
        networktype:
          dataType: string
          description: the network type of the zone; can be Basic or Advanced
        resourcedetails:
          dataType: map
          description: Meta data associated with the zone (key/value pairs)
          sinceVersion: 4.3.0
        securitygroupsenabled:
          dataType: boolean
          description: true if security groups support is enabled, false otherwise
        tags:
          dataType: set
          description: the list of resource tags associated with zone.
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
          sinceVersion: '4.3'
        zonetoken:
          dataType: string
          description: Zone Token
    user_types:
    - root
  dedicateCluster:
    description: Dedicate an existing cluster
    isAsync: 'true'
    name: dedicateCluster
    request:
      parms:
        account:
          dataType: string
          description: the name of the account which needs dedication. Must be used
            with domainId.
          required: 'false'
        clusterid:
          dataType: uuid
          description: the ID of the Cluster
          required: 'true'
        domainid:
          dataType: uuid
          description: the ID of the containing domain
          required: 'true'
    response:
      parms:
        accountid:
          dataType: string
          description: the Account ID of the cluster
        affinitygroupid:
          dataType: string
          description: the Dedication Affinity Group ID of the cluster
        clusterid:
          dataType: string
          description: the ID of the cluster
        clustername:
          dataType: string
          description: the name of the cluster
        domainid:
          dataType: string
          description: the domain ID of the cluster
        id:
          dataType: string
          description: the ID of the dedicated resource
    user_types:
    - root
  dedicateGuestVlanRange:
    description: Dedicates a guest vlan range to an account
    isAsync: 'false'
    name: dedicateGuestVlanRange
    request:
      parms:
        account:
          dataType: string
          description: account who will own the VLAN
          required: 'true'
        domainid:
          dataType: uuid
          description: domain ID of the account owning a VLAN
          required: 'true'
        physicalnetworkid:
          dataType: uuid
          description: physical network ID of the vlan
          required: 'true'
        projectid:
          dataType: uuid
          description: project who will own the VLAN
          required: 'false'
        vlanrange:
          dataType: string
          description: guest vlan range to be dedicated
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account of the guest VLAN range
        domain:
          dataType: string
          description: the domain name of the guest VLAN range
        domainid:
          dataType: string
          description: the domain ID of the guest VLAN range
        guestvlanrange:
          dataType: string
          description: the guest VLAN range
        id:
          dataType: string
          description: the ID of the guest VLAN range
        physicalnetworkid:
          dataType: long
          description: the physical network of the guest vlan range
        project:
          dataType: string
          description: the project name of the guest vlan range
        projectid:
          dataType: string
          description: the project id of the guest vlan range
        zoneid:
          dataType: long
          description: the zone of the guest vlan range
    user_types:
    - root
  dedicateHost:
    description: Dedicates a host.
    isAsync: 'true'
    name: dedicateHost
    request:
      parms:
        account:
          dataType: string
          description: the name of the account which needs dedication. Must be used
            with domainId.
          required: 'false'
        domainid:
          dataType: uuid
          description: the ID of the containing domain
          required: 'true'
        hostid:
          dataType: uuid
          description: the ID of the host to update
          required: 'true'
    response:
      parms:
        accountid:
          dataType: string
          description: the Account ID of the host
        affinitygroupid:
          dataType: string
          description: the Dedication Affinity Group ID of the host
        domainid:
          dataType: string
          description: the domain ID of the host
        hostid:
          dataType: string
          description: the ID of the host
        hostname:
          dataType: string
          description: the name of the host
        id:
          dataType: string
          description: the ID of the dedicated resource
    user_types:
    - root
  dedicatePod:
    description: Dedicates a Pod.
    isAsync: 'true'
    name: dedicatePod
    request:
      parms:
        account:
          dataType: string
          description: the name of the account which needs dedication. Must be used
            with domainId.
          required: 'false'
        domainid:
          dataType: uuid
          description: the ID of the containing domain
          required: 'true'
        podid:
          dataType: uuid
          description: the ID of the Pod
          required: 'true'
    response:
      parms:
        accountid:
          dataType: string
          description: the Account Id to which the Pod is dedicated
        affinitygroupid:
          dataType: string
          description: the Dedication Affinity Group ID of the pod
        domainid:
          dataType: string
          description: the domain ID to which the Pod is dedicated
        id:
          dataType: string
          description: the ID of the dedicated resource
        podid:
          dataType: string
          description: the ID of the Pod
        podname:
          dataType: string
          description: the Name of the Pod
    user_types:
    - root
  dedicatePublicIpRange:
    description: Dedicates a Public IP range to an account
    isAsync: 'false'
    name: dedicatePublicIpRange
    request:
      parms:
        account:
          dataType: string
          description: account who will own the VLAN
          required: 'true'
        domainid:
          dataType: uuid
          description: domain ID of the account owning a VLAN
          required: 'true'
        id:
          dataType: uuid
          description: the id of the VLAN IP range
          required: 'true'
        projectid:
          dataType: uuid
          description: project who will own the VLAN
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the VLAN IP range
        description:
          dataType: string
          description: the description of the VLAN IP range
        domain:
          dataType: string
          description: the domain name of the VLAN IP range
        domainid:
          dataType: string
          description: the domain ID of the VLAN IP range
        endip:
          dataType: string
          description: the end ip of the VLAN IP range
        endipv6:
          dataType: string
          description: the end ipv6 of the VLAN IP range
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the VLAN IP range
        gateway:
          dataType: string
          description: the gateway of the VLAN IP range
        id:
          dataType: string
          description: the ID of the VLAN IP range
        ip6cidr:
          dataType: string
          description: the cidr of IPv6 network
        ip6gateway:
          dataType: string
          description: the gateway of IPv6 network
        netmask:
          dataType: string
          description: the netmask of the VLAN IP range
        networkid:
          dataType: string
          description: the network id of vlan range
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        podid:
          dataType: string
          description: the Pod ID for the VLAN IP range
        podname:
          dataType: string
          description: the Pod name for the VLAN IP range
        project:
          dataType: string
          description: the project name of the vlan range
        projectid:
          dataType: string
          description: the project id of the vlan range
        startip:
          dataType: string
          description: the start ip of the VLAN IP range
        startipv6:
          dataType: string
          description: the start ipv6 of the VLAN IP range
        vlan:
          dataType: string
          description: the ID or VID of the VLAN.
        zoneid:
          dataType: string
          description: the Zone ID of the VLAN IP range
    user_types:
    - root
  dedicateZone:
    description: Dedicates a zones.
    isAsync: 'true'
    name: dedicateZone
    request:
      parms:
        account:
          dataType: string
          description: the name of the account which needs dedication. Must be used
            with domainId.
          required: 'false'
        domainid:
          dataType: uuid
          description: the ID of the containing domain
          required: 'true'
        zoneid:
          dataType: uuid
          description: the ID of the zone
          required: 'true'
    response:
      parms:
        accountid:
          dataType: string
          description: the Account Id to which the Zone is dedicated
        affinitygroupid:
          dataType: string
          description: the Dedication Affinity Group ID of the zone
        domainid:
          dataType: string
          description: the domain ID to which the Zone is dedicated
        id:
          dataType: string
          description: the ID of the dedicated resource
        zoneid:
          dataType: string
          description: the ID of the Zone
        zonename:
          dataType: string
          description: the Name of the Zone
    user_types:
    - root
  deleteAccount:
    description: Deletes a account, and all users associated with this account
    isAsync: 'true'
    name: deleteAccount
    request:
      parms:
        dataType: uuid
        description: Account id
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
  deleteAccountFromProject:
    description: Deletes account from the project
    isAsync: 'true'
    name: deleteAccountFromProject
    request:
      parms:
        account:
          dataType: string
          description: name of the account to be removed from the project
          required: 'true'
        projectid:
          dataType: uuid
          description: id of the project to remove the account from
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  deleteAffinityGroup:
    description: Deletes affinity group
    isAsync: 'true'
    name: deleteAffinityGroup
    request:
      parms:
        account:
          dataType: string
          description: the account of the affinity group. Must be specified with domain
            ID
          required: 'false'
        domainid:
          dataType: uuid
          description: the domain ID of account owning the affinity group
          required: 'false'
        id:
          dataType: uuid
          description: The ID of the affinity group. Mutually exclusive with name
            parameter
          required: 'false'
        name:
          dataType: string
          description: The name of the affinity group. Mutually exclusive with id
            parameter
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteAlerts:
    description: Delete one or more alerts.
    isAsync: 'false'
    name: deleteAlerts
    request:
      parms:
        enddate:
          dataType: date
          description: end date range to delete alerts (including) this date (use
            format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
          required: 'false'
        ids:
          dataType: list
          description: the IDs of the alerts
          required: 'false'
          type: list
        startdate:
          dataType: date
          description: start date range to delete alerts (including) this date (use
            format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
          required: 'false'
        type:
          dataType: string
          description: delete by alert type
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteAutoScalePolicy:
    description: Deletes a autoscale policy.
    isAsync: 'true'
    name: deleteAutoScalePolicy
    request:
      parms:
        dataType: uuid
        description: the ID of the autoscale policy
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteAutoScaleVmGroup:
    description: Deletes a autoscale vm group.
    isAsync: 'true'
    name: deleteAutoScaleVmGroup
    request:
      parms:
        dataType: uuid
        description: the ID of the autoscale group
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteAutoScaleVmProfile:
    description: Deletes a autoscale vm profile.
    isAsync: 'true'
    name: deleteAutoScaleVmProfile
    request:
      parms:
        dataType: uuid
        description: the ID of the autoscale profile
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteBaremetalRct:
    description: deletes baremetal rack configuration text
    isAsync: 'true'
    name: deleteBaremetalRct
    request:
      parms:
        dataType: uuid
        description: RCT id
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteBigSwitchVnsDevice:
    description: ' delete a bigswitch vns device'
    isAsync: 'true'
    name: deleteBigSwitchVnsDevice
    request:
      parms:
        dataType: uuid
        description: BigSwitch device ID
        name: vnsdeviceid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 4.1.0
    user_types:
    - root
  deleteBrocadeVcsDevice:
    description: ' delete a Brocade VCS Switch'
    isAsync: 'true'
    name: deleteBrocadeVcsDevice
    request:
      parms:
        dataType: uuid
        description: Brocade Switch ID
        name: vcsdeviceid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteCluster:
    description: Deletes a cluster.
    isAsync: 'false'
    name: deleteCluster
    request:
      parms:
        dataType: uuid
        description: the cluster ID
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteCondition:
    description: Removes a condition
    isAsync: 'true'
    name: deleteCondition
    request:
      parms:
        dataType: uuid
        description: the ID of the condition.
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteCounter:
    description: Deletes a counter
    isAsync: 'true'
    name: deleteCounter
    request:
      parms:
        dataType: uuid
        description: the ID of the counter
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteDiskOffering:
    description: Updates a disk offering.
    isAsync: 'false'
    name: deleteDiskOffering
    request:
      parms:
        dataType: uuid
        description: ID of the disk offering
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteDomain:
    description: Deletes a specified domain
    isAsync: 'true'
    name: deleteDomain
    request:
      parms:
        cleanup:
          dataType: boolean
          description: true if all domain resources (child domains, accounts) have
            to be cleaned up, false otherwise
          required: 'false'
        id:
          dataType: uuid
          description: ID of domain to delete
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteEgressFirewallRule:
    description: Deletes an ggress firewall rule
    isAsync: 'true'
    name: deleteEgressFirewallRule
    request:
      parms:
        dataType: uuid
        description: the ID of the firewall rule
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteEvents:
    description: Delete one or more events.
    isAsync: 'false'
    name: deleteEvents
    request:
      parms:
        enddate:
          dataType: date
          description: end date range to delete events (including) this date (use
            format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
          required: 'false'
        ids:
          dataType: list
          description: the IDs of the events
          required: 'false'
          type: list
        startdate:
          dataType: date
          description: start date range to delete events (including) this date (use
            format "yyyy-MM-dd" or the new format "yyyy-MM-ddThh:mm:ss")
          required: 'false'
        type:
          dataType: string
          description: delete by event type
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteFirewallRule:
    description: Deletes a firewall rule
    isAsync: 'true'
    name: deleteFirewallRule
    request:
      parms:
        dataType: uuid
        description: the ID of the firewall rule
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteGlobalLoadBalancerRule:
    description: Deletes a global load balancer rule.
    isAsync: 'true'
    name: deleteGlobalLoadBalancerRule
    request:
      parms:
        dataType: uuid
        description: the ID of the global load balancer rule
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteHost:
    description: Deletes a host.
    isAsync: 'false'
    name: deleteHost
    request:
      parms:
        forced:
          dataType: boolean
          description: Force delete the host. All HA enabled vms running on the host
            will be put to HA; HA disabled ones will be stopped
          required: 'false'
        forcedestroylocalstorage:
          dataType: boolean
          description: Force destroy local storage on this host. All VMs created on
            this local storage will be destroyed
          required: 'false'
        id:
          dataType: uuid
          description: the host ID
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteImageStore:
    description: Deletes an image store .
    isAsync: 'false'
    name: deleteImageStore
    request:
      parms:
        dataType: uuid
        description: the image store ID
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 4.2.0
    user_types:
    - root
  deleteInstanceGroup:
    description: Deletes a vm group
    isAsync: 'false'
    name: deleteInstanceGroup
    request:
      parms:
        dataType: uuid
        description: the ID of the instance group
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteIpForwardingRule:
    description: Deletes an ip forwarding rule
    isAsync: 'true'
    name: deleteIpForwardingRule
    request:
      parms:
        dataType: uuid
        description: the id of the forwarding rule
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteIso:
    description: Deletes an ISO file.
    isAsync: 'true'
    name: deleteIso
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the ISO file
          required: 'true'
        zoneid:
          dataType: uuid
          description: the ID of the zone of the ISO file. If not specified, the ISO
            will be deleted from all the zones
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteLBHealthCheckPolicy:
    description: Deletes a load balancer HealthCheck policy.
    isAsync: 'true'
    name: deleteLBHealthCheckPolicy
    request:
      parms:
        dataType: uuid
        description: the ID of the load balancer HealthCheck policy
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
    - user
  deleteLBStickinessPolicy:
    description: Deletes a LB stickiness policy.
    isAsync: 'true'
    name: deleteLBStickinessPolicy
    request:
      parms:
        dataType: uuid
        description: the ID of the LB stickiness policy
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  deleteLdapConfiguration:
    description: Remove an Ldap Configuration
    isAsync: 'false'
    name: deleteLdapConfiguration
    request:
      parms:
        dataType: string
        description: Hostname
        name: hostname
        required: 'true'
    response:
      parms:
        hostname:
          dataType: string
          description: hostname
        port:
          dataType: int
          description: port
    sinceVersion: 4.2.0
    user_types:
    - root
  deleteLoadBalancer:
    description: Deletes a load balancer
    isAsync: 'true'
    name: deleteLoadBalancer
    request:
      parms:
        dataType: uuid
        description: the ID of the Load Balancer
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
    - user
  deleteLoadBalancerRule:
    description: Deletes a load balancer rule.
    isAsync: 'true'
    name: deleteLoadBalancerRule
    request:
      parms:
        dataType: uuid
        description: the ID of the load balancer rule
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteNetscalerLoadBalancer:
    description: ' delete a netscaler load balancer device'
    isAsync: 'true'
    name: deleteNetscalerLoadBalancer
    request:
      parms:
        dataType: uuid
        description: netscaler load balancer device ID
        name: lbdeviceid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteNetwork:
    description: Deletes a network
    isAsync: 'true'
    name: deleteNetwork
    request:
      parms:
        forced:
          dataType: boolean
          description: Force delete a network. Network will be marked as 'Destroy'
            even when commands to shutdown and cleanup to the backend fails.
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the network
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteNetworkACL:
    description: Deletes a Network ACL
    isAsync: 'true'
    name: deleteNetworkACL
    request:
      parms:
        dataType: uuid
        description: the ID of the network ACL
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteNetworkACLList:
    description: Deletes a Network ACL
    isAsync: 'true'
    name: deleteNetworkACLList
    request:
      parms:
        dataType: uuid
        description: the ID of the network ACL
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteNetworkDevice:
    description: Deletes network device.
    isAsync: 'false'
    name: deleteNetworkDevice
    request:
      parms:
        dataType: uuid
        description: Id of network device to delete
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteNetworkOffering:
    description: Deletes a network offering.
    isAsync: 'false'
    name: deleteNetworkOffering
    request:
      parms:
        dataType: uuid
        description: the ID of the network offering
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - root
  deleteNetworkServiceProvider:
    description: Deletes a Network Service Provider.
    isAsync: 'true'
    name: deleteNetworkServiceProvider
    request:
      parms:
        dataType: uuid
        description: the ID of the network service provider
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - root
  deleteNiciraNvpDevice:
    description: ' delete a nicira nvp device'
    isAsync: 'true'
    name: deleteNiciraNvpDevice
    request:
      parms:
        dataType: uuid
        description: Nicira device ID
        name: nvpdeviceid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteOpenDaylightController:
    description: Removes an OpenDyalight controler
    isAsync: 'true'
    name: deleteOpenDaylightController
    request:
      parms:
        dataType: uuid
        description: OpenDaylight Controller ID
        name: id
        required: 'true'
    response:
      parms:
        id:
          dataType: string
          description: device id of the controller
        name:
          dataType: string
          description: the name assigned to the controller
        physicalnetworkid:
          dataType: string
          description: the physical network to which this controller belongs to
        url:
          dataType: string
          description: the url of the controller api
        username:
          dataType: string
          description: the username to authenticate to the controller
    user_types:
    - root
  deletePaloAltoFirewall:
    description: ' delete a Palo Alto firewall device'
    isAsync: 'true'
    name: deletePaloAltoFirewall
    request:
      parms:
        dataType: uuid
        description: Palo Alto firewall device ID
        name: fwdeviceid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deletePhysicalNetwork:
    description: Deletes a Physical Network.
    isAsync: 'true'
    name: deletePhysicalNetwork
    request:
      parms:
        dataType: uuid
        description: the ID of the Physical network
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - root
  deletePod:
    description: Deletes a Pod.
    isAsync: 'false'
    name: deletePod
    request:
      parms:
        dataType: uuid
        description: the ID of the Pod
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deletePortForwardingRule:
    description: Deletes a port forwarding rule
    isAsync: 'true'
    name: deletePortForwardingRule
    request:
      parms:
        dataType: uuid
        description: the ID of the port forwarding rule
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deletePortableIpRange:
    description: deletes a range of portable public IP's associated with a region
    isAsync: 'true'
    name: deletePortableIpRange
    request:
      parms:
        dataType: uuid
        description: Id of the portable ip range
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deletePrivateGateway:
    description: Deletes a Private gateway
    isAsync: 'true'
    name: deletePrivateGateway
    request:
      parms:
        dataType: uuid
        description: the ID of the private gateway
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteProject:
    description: Deletes a project
    isAsync: 'true'
    name: deleteProject
    request:
      parms:
        dataType: uuid
        description: id of the project to be deleted
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  deleteProjectInvitation:
    description: Deletes project invitation
    isAsync: 'true'
    name: deleteProjectInvitation
    request:
      parms:
        dataType: uuid
        description: id of the invitation
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  deleteRemoteAccessVpn:
    description: Destroys a l2tp/ipsec remote access vpn
    isAsync: 'true'
    name: deleteRemoteAccessVpn
    request:
      parms:
        dataType: uuid
        description: public ip address id of the vpn server
        name: publicipid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteSSHKeyPair:
    description: Deletes a keypair by name
    isAsync: 'false'
    name: deleteSSHKeyPair
    request:
      parms:
        account:
          dataType: string
          description: the account associated with the keypair. Must be used with
            the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: the domain ID associated with the keypair
          required: 'false'
        name:
          dataType: string
          description: Name of the keypair
          required: 'true'
        projectid:
          dataType: uuid
          description: the project associated with keypair
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteSecondaryStagingStore:
    description: Deletes a secondary staging store .
    isAsync: 'false'
    name: deleteSecondaryStagingStore
    request:
      parms:
        dataType: uuid
        description: the staging store ID
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 4.2.0
    user_types:
    - root
  deleteSecurityGroup:
    description: Deletes security group
    isAsync: 'false'
    name: deleteSecurityGroup
    request:
      parms:
        account:
          dataType: string
          description: the account of the security group. Must be specified with domain
            ID
          required: 'false'
        domainid:
          dataType: uuid
          description: the domain ID of account owning the security group
          required: 'false'
        id:
          dataType: uuid
          description: The ID of the security group. Mutually exclusive with name
            parameter
          required: 'false'
        name:
          dataType: string
          description: The ID of the security group. Mutually exclusive with id parameter
          required: 'false'
        projectid:
          dataType: uuid
          description: the project of the security group
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteServiceOffering:
    description: Deletes a service offering.
    isAsync: 'false'
    name: deleteServiceOffering
    request:
      parms:
        dataType: uuid
        description: the ID of the service offering
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteSnapshot:
    description: Deletes a snapshot of a disk volume.
    isAsync: 'true'
    name: deleteSnapshot
    request:
      parms:
        dataType: uuid
        description: The ID of the snapshot
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteSnapshotPolicies:
    description: Deletes snapshot policies for the account.
    isAsync: 'false'
    name: deleteSnapshotPolicies
    request:
      parms:
        id:
          dataType: uuid
          description: the Id of the snapshot policy
          required: 'false'
        ids:
          dataType: list
          description: list of snapshots policy IDs separated by comma
          required: 'false'
          type: list
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteSslCert:
    description: Delete a certificate to cloudstack
    isAsync: 'false'
    name: deleteSslCert
    request:
      parms:
        dataType: uuid
        description: Id of SSL certificate
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteStaticRoute:
    description: Deletes a static route
    isAsync: 'true'
    name: deleteStaticRoute
    request:
      parms:
        dataType: uuid
        description: the ID of the static route
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteStorageNetworkIpRange:
    description: Deletes a storage network IP Range.
    isAsync: 'true'
    name: deleteStorageNetworkIpRange
    request:
      parms:
        dataType: uuid
        description: the uuid of the storage network ip range
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - root
  deleteStoragePool:
    description: Deletes a storage pool.
    isAsync: 'false'
    name: deleteStoragePool
    request:
      parms:
        forced:
          dataType: boolean
          description: Force destroy storage pool (force expunge volumes in Destroyed
            state as a part of pool removal)
          required: 'false'
        id:
          dataType: uuid
          description: Storage pool id
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteTags:
    description: Deleting resource tag(s)
    isAsync: 'true'
    name: deleteTags
    request:
      parms:
        resourceids:
          dataType: list
          description: Delete tags for resource id(s)
          required: 'true'
          type: list
        resourcetype:
          dataType: string
          description: Delete tag by resource type
          required: 'true'
        tags:
          dataType: map
          description: Delete tags matching key/value pairs
          required: 'false'
          type: map
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 4.0.0
    user_types:
    - domain
    - root
    - user
  deleteTemplate:
    description: Deletes a template from the system. All virtual machines using the
      deleted template will not be affected.
    isAsync: 'true'
    name: deleteTemplate
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the template
          required: 'true'
        zoneid:
          dataType: uuid
          description: the ID of zone of the template
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteTrafficMonitor:
    description: Deletes an traffic monitor host.
    isAsync: 'false'
    name: deleteTrafficMonitor
    request:
      parms:
        dataType: uuid
        description: Id of the Traffic Monitor Host.
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteTrafficType:
    description: Deletes traffic type of a physical network
    isAsync: 'true'
    name: deleteTrafficType
    request:
      parms:
        dataType: uuid
        description: traffic type id
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - root
  deleteUser:
    description: Deletes a user for an account
    isAsync: 'false'
    name: deleteUser
    request:
      parms:
        dataType: uuid
        description: id of the user to be deleted
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
  deleteVMSnapshot:
    description: Deletes a vmsnapshot.
    isAsync: 'true'
    name: deleteVMSnapshot
    request:
      parms:
        dataType: uuid
        description: The ID of the VM snapshot
        name: vmsnapshotid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
    - user
  deleteVPC:
    description: Deletes a VPC
    isAsync: 'true'
    name: deleteVPC
    request:
      parms:
        dataType: uuid
        description: the ID of the VPC
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteVPCOffering:
    description: Deletes VPC offering
    isAsync: 'true'
    name: deleteVPCOffering
    request:
      parms:
        dataType: uuid
        description: the ID of the VPC offering
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteVlanIpRange:
    description: Creates a VLAN IP range.
    isAsync: 'false'
    name: deleteVlanIpRange
    request:
      parms:
        dataType: uuid
        description: the id of the VLAN IP range
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deleteVolume:
    description: Deletes a detached disk volume.
    isAsync: 'false'
    name: deleteVolume
    request:
      parms:
        dataType: uuid
        description: The ID of the disk volume
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteVpnConnection:
    description: Delete site to site vpn connection
    isAsync: 'true'
    name: deleteVpnConnection
    request:
      parms:
        dataType: uuid
        description: id of vpn connection
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteVpnCustomerGateway:
    description: Delete site to site vpn customer gateway
    isAsync: 'true'
    name: deleteVpnCustomerGateway
    request:
      parms:
        dataType: uuid
        description: id of customer gateway
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteVpnGateway:
    description: Delete site to site vpn gateway
    isAsync: 'true'
    name: deleteVpnGateway
    request:
      parms:
        dataType: uuid
        description: id of customer gateway
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  deleteZone:
    description: Deletes a Zone.
    isAsync: 'false'
    name: deleteZone
    request:
      parms:
        dataType: uuid
        description: the ID of the Zone
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  deployVirtualMachine:
    description: Creates and automatically starts a virtual machine based on a service
      offering, disk offering, and template.
    isAsync: 'true'
    name: deployVirtualMachine
    request:
      parms:
        account:
          dataType: string
          description: an optional account for the virtual machine. Must be used with
            domainId.
          required: 'false'
        affinitygroupids:
          dataType: list
          description: comma separated list of affinity groups id that are going to
            be applied to the virtual machine. Mutually exclusive with affinitygroupnames
            parameter
          required: 'false'
          type: list
        affinitygroupnames:
          dataType: list
          description: comma separated list of affinity groups names that are going
            to be applied to the virtual machine.Mutually exclusive with affinitygroupids
            parameter
          required: 'false'
          type: list
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
        deploymentplanner:
          dataType: string
          description: Deployment planner to use for vm allocation. Available to ROOT
            admin only
          required: 'false'
          sinceVersion: '4.4'
        details:
          dataType: map
          description: used to specify the custom parameters.
          required: 'false'
          sinceVersion: '4.3'
          type: map
        diskofferingid:
          dataType: uuid
          description: the ID of the disk offering for the virtual machine. If the
            template is of ISO format, the diskOfferingId is for the root disk volume.
            Otherwise this parameter is used to indicate the offering for the data
            disk volume. If the templateId parameter passed is from a Template object,
            the diskOfferingId refers to a DATA Disk Volume created. If the templateId
            parameter passed is from an ISO object, the diskOfferingId refers to a
            ROOT Disk Volume created.
          required: 'false'
        displayname:
          dataType: string
          description: an optional user generated name for the virtual machine
          required: 'false'
        displayvm:
          dataType: boolean
          description: an optional field, whether to the display the vm to the end
            user or not.
          required: 'false'
          sinceVersion: '4.2'
        domainid:
          dataType: uuid
          description: an optional domainId for the virtual machine. If the account
            parameter is used, domainId must also be used.
          required: 'false'
        group:
          dataType: string
          description: an optional group for the virtual machine
          required: 'false'
        hostid:
          dataType: uuid
          description: destination Host ID to deploy the VM to - parameter available
            for root admin only
          required: 'false'
        hypervisor:
          dataType: string
          description: the hypervisor on which to deploy the virtual machine. The
            parameter is required and respected only when hypervisor info is not set
            on the ISO/Template passed to the call
          required: 'false'
        ip6address:
          dataType: string
          description: the ipv6 address for default vm's network
          required: 'false'
        ipaddress:
          dataType: string
          description: the ip address for default vm's network
          required: 'false'
        iptonetworklist:
          dataType: map
          description: 'ip to network mapping. Can''t be specified with networkIds
            parameter. Example: iptonetworklist[0].ip=10.10.10.11&iptonetworklist[0].ipv6=fc00:1234:5678::abcd&iptonetworklist[0].networkid=uuid
            - requests to use ip 10.10.10.11 in network id=uuid'
          required: 'false'
          type: map
        keyboard:
          dataType: string
          description: an optional keyboard device type for the virtual machine. valid
            value can be one of de,de-ch,es,fi,fr,fr-be,fr-ch,is,it,jp,nl-be,no,pt,uk,us
          required: 'false'
        keypair:
          dataType: string
          description: name of the ssh key pair used to login to the virtual machine
          required: 'false'
        name:
          dataType: string
          description: host name for the virtual machine
          required: 'false'
        networkids:
          dataType: list
          description: list of network ids used by virtual machine. Can't be specified
            with ipToNetworkList parameter
          required: 'false'
          type: list
        projectid:
          dataType: uuid
          description: Deploy vm for the project
          required: 'false'
        rootdisksize:
          dataType: long
          description: Optional field to resize root disk on deploy. Only applies
            to template-based deployments. Analogous to details[0].rootdisksize, which
            takes precedence over this parameter if both are provided
          required: 'false'
          sinceVersion: '4.4'
        securitygroupids:
          dataType: list
          description: comma separated list of security groups id that going to be
            applied to the virtual machine. Should be passed only when vm is created
            from a zone with Basic Network support. Mutually exclusive with securitygroupnames
            parameter
          required: 'false'
          type: list
        securitygroupnames:
          dataType: list
          description: comma separated list of security groups names that going to
            be applied to the virtual machine. Should be passed only when vm is created
            from a zone with Basic Network support. Mutually exclusive with securitygroupids
            parameter
          required: 'false'
          type: list
        serviceofferingid:
          dataType: uuid
          description: the ID of the service offering for the virtual machine
          required: 'true'
        size:
          dataType: long
          description: the arbitrary size for the DATADISK volume. Mutually exclusive
            with diskOfferingId
          required: 'false'
        startvm:
          dataType: boolean
          description: true if network offering supports specifying ip ranges; defaulted
            to true if not specified
          required: 'false'
        templateid:
          dataType: uuid
          description: the ID of the template for the virtual machine
          required: 'true'
        userdata:
          dataType: string
          description: an optional binary data that can be sent to the virtual machine
            upon a successful deployment. This binary data must be base64 encoded
            before adding it to the request. Using HTTP GET (via querystring), you
            can send up to 2KB of data after base64 encoding. Using HTTP POST(via
            POST body), you can send up to 32K of data after base64 encoding.
          required: 'false'
        zoneid:
          dataType: uuid
          description: availability zone for the virtual machine
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  destroyRouter:
    description: Destroys a router.
    isAsync: 'true'
    name: destroyRouter
    request:
      parms:
        dataType: uuid
        description: the ID of the router
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the router
        created:
          dataType: date
          description: the date and time the router was created
        dns1:
          dataType: string
          description: the first DNS for the router
        dns2:
          dataType: string
          description: the second DNS for the router
        domain:
          dataType: string
          description: the domain associated with the router
        domainid:
          dataType: string
          description: the domain ID associated with the router
        gateway:
          dataType: string
          description: the gateway for the router
        guestipaddress:
          dataType: string
          description: the guest IP address for the router
        guestmacaddress:
          dataType: string
          description: the guest MAC address for the router
        guestnetmask:
          dataType: string
          description: the guest netmask for the router
        guestnetworkid:
          dataType: string
          description: the ID of the corresponding guest network
        hostid:
          dataType: string
          description: the host ID for the router
        hostname:
          dataType: string
          description: the hostname for the router
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the id of the router
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the router
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the router
        isredundantrouter:
          dataType: boolean
          description: if this router is an redundant virtual router
        linklocalip:
          dataType: string
          description: the link local IP address for the router
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the router
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the router
        linklocalnetworkid:
          dataType: string
          description: the ID of the corresponding link local network
        name:
          dataType: string
          description: the name of the router
        networkdomain:
          dataType: string
          description: the network domain for the router
        nic:
          dataType: set
          description: the list of nics associated with the router
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
          sinceVersion: '4.0'
        podid:
          dataType: string
          description: the Pod ID for the router
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        publicip:
          dataType: string
          description: the public IP address for the router
        publicmacaddress:
          dataType: string
          description: the public MAC address for the router
        publicnetmask:
          dataType: string
          description: the public netmask for the router
        publicnetworkid:
          dataType: string
          description: the ID of the corresponding public network
        redundantstate:
          dataType: string
          description: the state of redundant virtual router
        requiresupgrade:
          dataType: boolean
          description: true if the router template requires upgrader
        role:
          dataType: string
          description: role of the domain router
        scriptsversion:
          dataType: string
          description: the version of scripts
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        state:
          dataType: state
          description: the state of the router
        templateid:
          dataType: string
          description: the template ID for the router
        version:
          dataType: string
          description: the version of template
        vpcid:
          dataType: string
          description: VPC the router belongs to
        zoneid:
          dataType: string
          description: the Zone ID for the router
        zonename:
          dataType: string
          description: the Zone name for the router
    user_types:
    - domain
    - root
  destroySystemVm:
    description: Destroyes a system virtual machine.
    isAsync: 'true'
    name: destroySystemVm
    request:
      parms:
        dataType: uuid
        description: The ID of the system virtual machine
        name: id
        required: 'true'
    response:
      parms:
        activeviewersessions:
          dataType: integer
          description: the number of active console sessions for the console proxy
            system vm
        created:
          dataType: date
          description: the date and time the system VM was created
        dns1:
          dataType: string
          description: the first DNS for the system VM
        dns2:
          dataType: string
          description: the second DNS for the system VM
        gateway:
          dataType: string
          description: the gateway for the system VM
        hostid:
          dataType: string
          description: the host ID for the system VM
        hostname:
          dataType: string
          description: the hostname for the system VM
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the system VM
        jobid:
          dataType: string
          description: the job ID associated with the system VM. This is only displayed
            if the router listed is part of a currently running asynchronous job.
        jobstatus:
          dataType: integer
          description: the job status associated with the system VM.  This is only
            displayed if the router listed is part of a currently running asynchronous
            job.
        linklocalip:
          dataType: string
          description: the link local IP address for the system vm
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the system vm
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the system vm
        name:
          dataType: string
          description: the name of the system VM
        networkdomain:
          dataType: string
          description: the network domain for the system VM
        podid:
          dataType: string
          description: the Pod ID for the system VM
        privateip:
          dataType: string
          description: the private IP address for the system VM
        privatemacaddress:
          dataType: string
          description: the private MAC address for the system VM
        privatenetmask:
          dataType: string
          description: the private netmask for the system VM
        publicip:
          dataType: string
          description: the public IP address for the system VM
        publicmacaddress:
          dataType: string
          description: the public MAC address for the system VM
        publicnetmask:
          dataType: string
          description: the public netmask for the system VM
        state:
          dataType: string
          description: the state of the system VM
        systemvmtype:
          dataType: string
          description: the system VM type
        templateid:
          dataType: string
          description: the template ID for the system VM
        zoneid:
          dataType: string
          description: the Zone ID for the system VM
        zonename:
          dataType: string
          description: the Zone name for the system VM
    user_types:
    - root
  destroyVirtualMachine:
    description: Destroys a virtual machine. Once destroyed, only the administrator
      can recover it.
    isAsync: 'true'
    name: destroyVirtualMachine
    request:
      parms:
        expunge:
          dataType: boolean
          description: If true is passed, the vm is expunged immediately. False by
            default. Parameter can be passed to the call by ROOT/Domain admin only
          required: 'false'
          sinceVersion: 4.2.1
        id:
          dataType: uuid
          description: The ID of the virtual machine
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  detachIso:
    description: Detaches any ISO file (if any) currently attached to a virtual machine.
    isAsync: 'true'
    name: detachIso
    request:
      parms:
        dataType: uuid
        description: The ID of the virtual machine
        name: virtualmachineid
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  detachVolume:
    description: Detaches a disk volume from a virtual machine.
    isAsync: 'true'
    name: detachVolume
    request:
      parms:
        deviceid:
          dataType: long
          description: the device ID on the virtual machine where volume is detached
            from
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the disk volume
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine where the volume is detached
            from
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the disk volume
        attached:
          dataType: date
          description: the date the volume was attached to a VM instance
        chaininfo:
          dataType: string
          description: the chain info of the volume
          sinceVersion: '4.4'
        created:
          dataType: date
          description: the date the disk volume was created
        destroyed:
          dataType: boolean
          description: the boolean state of whether the volume is destroyed or not
        deviceid:
          dataType: long
          description: the ID of the device on user vm the volume is attahed to. This
            tag is not returned when the volume is detached.
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the disk volume
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the disk volume
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the disk volume
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the disk volume
        diskofferingdisplaytext:
          dataType: string
          description: the display text of the disk offering
        diskofferingid:
          dataType: string
          description: ID of the disk offering
        diskofferingname:
          dataType: string
          description: name of the disk offering
        displayvolume:
          dataType: boolean
          description: an optional field whether to the display the volume to the
            end user or not.
        domain:
          dataType: string
          description: the domain associated with the disk volume
        domainid:
          dataType: string
          description: the ID of the domain associated with the disk volume
        hypervisor:
          dataType: string
          description: Hypervisor the volume belongs to
        id:
          dataType: string
          description: ID of the disk volume
        isextractable:
          dataType: boolean
          description: true if the volume is extractable, false otherwise
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        maxiops:
          dataType: long
          description: max iops of the disk volume
        miniops:
          dataType: long
          description: min iops of the disk volume
        name:
          dataType: string
          description: name of the disk volume
        path:
          dataType: string
          description: the path of the volume
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes.
        quiescevm:
          dataType: boolean
          description: need quiesce vm or not when taking snapshot
          sinceVersion: '4.3'
        serviceofferingdisplaytext:
          dataType: string
          description: the display text of the service offering for root disk
        serviceofferingid:
          dataType: string
          description: ID of the service offering for root disk
        serviceofferingname:
          dataType: string
          description: name of the service offering for root disk
        size:
          dataType: long
          description: size of the disk volume
        snapshotid:
          dataType: string
          description: ID of the snapshot from which this volume was created
        state:
          dataType: string
          description: the state of the disk volume
        status:
          dataType: string
          description: the status of the volume
        storage:
          dataType: string
          description: name of the primary storage hosting the disk volume
        storageid:
          dataType: string
          description: id of the primary storage hosting the disk volume; returned
            to admin user only
          sinceVersion: '4.3'
        storagetype:
          dataType: string
          description: shared or local storage
        tags:
          dataType: set
          description: the list of resource tags associated with volume
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        type:
          dataType: string
          description: type of the disk volume (ROOT or DATADISK)
        virtualmachineid:
          dataType: string
          description: id of the virtual machine
        vmdisplayname:
          dataType: string
          description: display name of the virtual machine
        vmname:
          dataType: string
          description: name of the virtual machine
        vmstate:
          dataType: string
          description: state of the virtual machine
        zoneid:
          dataType: string
          description: ID of the availability zone
        zonename:
          dataType: string
          description: name of the availability zone
    user_types:
    - domain
    - root
    - user
  disableAccount:
    description: Disables an account
    isAsync: 'true'
    name: disableAccount
    request:
      parms:
        account:
          dataType: string
          description: Disables specified account.
          required: 'false'
        domainid:
          dataType: uuid
          description: Disables specified account in this domain.
          required: 'false'
        id:
          dataType: uuid
          description: Account id
          required: 'false'
        lock:
          dataType: boolean
          description: If true, only lock the account; else disable the account
          required: 'true'
    response:
      parms:
        accountdetails:
          dataType: map
          description: details for the account
        accounttype:
          dataType: short
          description: account type (admin, domain-admin, user)
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            account
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the account can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by account
          sinceVersion: 4.2.0
        defaultzoneid:
          dataType: string
          description: the default zone of the account
        domain:
          dataType: string
          description: name of the Domain the account belongs too
        domainid:
          dataType: string
          description: id of the Domain the account belongs too
        groups:
          dataType: list
          description: the list of acl groups that account belongs to
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the account
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            account to acquire
        iplimit:
          dataType: string
          description: the total number of public ip addresses this account can acquire
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            account
        iscleanuprequired:
          dataType: boolean
          description: true if the account requires cleanup
        isdefault:
          dataType: boolean
          description: true if account is default, false otherwise
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this account
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the account can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by account
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the account
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            account
          sinceVersion: 3.0.1
        networkdomain:
          dataType: string
          description: the network domain
        networklimit:
          dataType: string
          description: the total number of networks the account can own
          sinceVersion: 3.0.1
        networktotal:
          dataType: long
          description: the total number of networks owned by account
          sinceVersion: 3.0.1
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this account
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the account can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        projectavailable:
          dataType: string
          description: the total number of projects available for administration by
            this account
          sinceVersion: 3.0.1
        projectlimit:
          dataType: string
          description: the total number of projects the account can own
          sinceVersion: 3.0.1
        projecttotal:
          dataType: long
          description: the total number of projects being administrated by this account
          sinceVersion: 3.0.1
        receivedbytes:
          dataType: long
          description: the total number of network traffic bytes received
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this account
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the account can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        sentbytes:
          dataType: long
          description: the total number of network traffic bytes sent
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this account
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this account
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this account
        state:
          dataType: string
          description: the state of the account
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            account
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            account
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            account
        user:
          dataType: list
          description: the list of users associated with account
          parms:
            account:
              dataType: string
              description: the account name of the user
            accountid:
              dataType: string
              description: the account ID of the user
            accounttype:
              dataType: short
              description: the account type of the user
            apikey:
              dataType: string
              description: the api key of the user
            created:
              dataType: date
              description: the date and time the user account was created
            domain:
              dataType: string
              description: the domain name of the user
            domainid:
              dataType: string
              description: the domain ID of the user
            email:
              dataType: string
              description: the user email address
            firstname:
              dataType: string
              description: the user firstname
            id:
              dataType: string
              description: the user ID
            iscallerchilddomain:
              dataType: boolean
              description: the boolean value representing if the updating target is
                in caller's child domain
            isdefault:
              dataType: boolean
              description: true if user is default, false otherwise
              sinceVersion: 4.2.0
            lastname:
              dataType: string
              description: the user lastname
            secretkey:
              dataType: string
              description: the secret key of the user
            state:
              dataType: string
              description: the user state
            timezone:
              dataType: string
              description: the timezone user was created in
            username:
              dataType: string
              description: the user name
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this account
            to acquire
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this account
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this account
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this account
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this account
        volumeavailable:
          dataType: string
          description: the total volume available for this account
        volumelimit:
          dataType: string
          description: the total volume which can be used by this account
        volumetotal:
          dataType: long
          description: the total volume being used by this account
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this account
          sinceVersion: 4.0.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the account can own
          sinceVersion: 4.0.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by account
          sinceVersion: 4.0.0
    user_types:
    - domain
    - root
  disableAutoScaleVmGroup:
    description: Disables an AutoScale Vm Group
    isAsync: 'true'
    name: disableAutoScaleVmGroup
    request:
      parms:
        dataType: uuid
        description: the ID of the autoscale group
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the instance group
        domain:
          dataType: string
          description: the domain name of the vm profile
        domainid:
          dataType: string
          description: the domain ID of the vm profile
        fordisplay:
          dataType: boolean
          description: is group for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the autoscale vm group ID
        interval:
          dataType: int
          description: the frequency at which the conditions have to be evaluated
        lbruleid:
          dataType: string
          description: the load balancer rule ID
        maxmembers:
          dataType: int
          description: the maximum number of members in the vmgroup, The number of
            instances in the vm group will be equal to or less than this number.
        minmembers:
          dataType: int
          description: the minimum number of members in the vmgroup, the number of
            instances in the vm group will be equal to or more than this number.
        project:
          dataType: string
          description: the project name of the vm profile
        projectid:
          dataType: string
          description: the project id vm profile
        scaledownpolicies:
          dataType: list
          description: list of scaledown autoscale policies
        scaleuppolicies:
          dataType: list
          description: list of scaleup autoscale policies
        state:
          dataType: string
          description: the current state of the AutoScale Vm Group
        vmprofileid:
          dataType: string
          description: the autoscale profile that contains information about the vms
            in the vm group.
    user_types:
    - domain
    - root
    - user
  disableStaticNat:
    description: Disables static rule for given ip address
    isAsync: 'true'
    name: disableStaticNat
    request:
      parms:
        dataType: uuid
        description: the public IP address id for which static nat feature is being
          disableed
        name: ipaddressid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  disableUser:
    description: Disables a user account
    isAsync: 'true'
    name: disableUser
    request:
      parms:
        dataType: uuid
        description: Disables user by user ID.
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the user
        accountid:
          dataType: string
          description: the account ID of the user
        accounttype:
          dataType: short
          description: the account type of the user
        apikey:
          dataType: string
          description: the api key of the user
        created:
          dataType: date
          description: the date and time the user account was created
        domain:
          dataType: string
          description: the domain name of the user
        domainid:
          dataType: string
          description: the domain ID of the user
        email:
          dataType: string
          description: the user email address
        firstname:
          dataType: string
          description: the user firstname
        id:
          dataType: string
          description: the user ID
        iscallerchilddomain:
          dataType: boolean
          description: the boolean value representing if the updating target is in
            caller's child domain
        isdefault:
          dataType: boolean
          description: true if user is default, false otherwise
          sinceVersion: 4.2.0
        lastname:
          dataType: string
          description: the user lastname
        secretkey:
          dataType: string
          description: the secret key of the user
        state:
          dataType: string
          description: the user state
        timezone:
          dataType: string
          description: the timezone user was created in
        username:
          dataType: string
          description: the user name
    user_types:
    - domain
    - root
  disassociateIpAddress:
    description: Disassociates an ip address from the account.
    isAsync: 'true'
    name: disassociateIpAddress
    request:
      parms:
        dataType: uuid
        description: the id of the public ip address to disassociate
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  enableAccount:
    description: Enables an account
    isAsync: 'false'
    name: enableAccount
    request:
      parms:
        account:
          dataType: string
          description: Enables specified account.
          required: 'false'
        domainid:
          dataType: uuid
          description: Enables specified account in this domain.
          required: 'false'
        id:
          dataType: uuid
          description: Account id
          required: 'false'
    response:
      parms:
        accountdetails:
          dataType: map
          description: details for the account
        accounttype:
          dataType: short
          description: account type (admin, domain-admin, user)
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            account
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the account can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by account
          sinceVersion: 4.2.0
        defaultzoneid:
          dataType: string
          description: the default zone of the account
        domain:
          dataType: string
          description: name of the Domain the account belongs too
        domainid:
          dataType: string
          description: id of the Domain the account belongs too
        groups:
          dataType: list
          description: the list of acl groups that account belongs to
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the account
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            account to acquire
        iplimit:
          dataType: string
          description: the total number of public ip addresses this account can acquire
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            account
        iscleanuprequired:
          dataType: boolean
          description: true if the account requires cleanup
        isdefault:
          dataType: boolean
          description: true if account is default, false otherwise
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this account
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the account can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by account
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the account
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            account
          sinceVersion: 3.0.1
        networkdomain:
          dataType: string
          description: the network domain
        networklimit:
          dataType: string
          description: the total number of networks the account can own
          sinceVersion: 3.0.1
        networktotal:
          dataType: long
          description: the total number of networks owned by account
          sinceVersion: 3.0.1
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this account
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the account can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        projectavailable:
          dataType: string
          description: the total number of projects available for administration by
            this account
          sinceVersion: 3.0.1
        projectlimit:
          dataType: string
          description: the total number of projects the account can own
          sinceVersion: 3.0.1
        projecttotal:
          dataType: long
          description: the total number of projects being administrated by this account
          sinceVersion: 3.0.1
        receivedbytes:
          dataType: long
          description: the total number of network traffic bytes received
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this account
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the account can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        sentbytes:
          dataType: long
          description: the total number of network traffic bytes sent
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this account
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this account
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this account
        state:
          dataType: string
          description: the state of the account
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            account
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            account
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            account
        user:
          dataType: list
          description: the list of users associated with account
          parms:
            account:
              dataType: string
              description: the account name of the user
            accountid:
              dataType: string
              description: the account ID of the user
            accounttype:
              dataType: short
              description: the account type of the user
            apikey:
              dataType: string
              description: the api key of the user
            created:
              dataType: date
              description: the date and time the user account was created
            domain:
              dataType: string
              description: the domain name of the user
            domainid:
              dataType: string
              description: the domain ID of the user
            email:
              dataType: string
              description: the user email address
            firstname:
              dataType: string
              description: the user firstname
            id:
              dataType: string
              description: the user ID
            iscallerchilddomain:
              dataType: boolean
              description: the boolean value representing if the updating target is
                in caller's child domain
            isdefault:
              dataType: boolean
              description: true if user is default, false otherwise
              sinceVersion: 4.2.0
            lastname:
              dataType: string
              description: the user lastname
            secretkey:
              dataType: string
              description: the secret key of the user
            state:
              dataType: string
              description: the user state
            timezone:
              dataType: string
              description: the timezone user was created in
            username:
              dataType: string
              description: the user name
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this account
            to acquire
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this account
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this account
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this account
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this account
        volumeavailable:
          dataType: string
          description: the total volume available for this account
        volumelimit:
          dataType: string
          description: the total volume which can be used by this account
        volumetotal:
          dataType: long
          description: the total volume being used by this account
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this account
          sinceVersion: 4.0.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the account can own
          sinceVersion: 4.0.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by account
          sinceVersion: 4.0.0
    user_types:
    - domain
    - root
  enableAutoScaleVmGroup:
    description: Enables an AutoScale Vm Group
    isAsync: 'true'
    name: enableAutoScaleVmGroup
    request:
      parms:
        dataType: uuid
        description: the ID of the autoscale group
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the instance group
        domain:
          dataType: string
          description: the domain name of the vm profile
        domainid:
          dataType: string
          description: the domain ID of the vm profile
        fordisplay:
          dataType: boolean
          description: is group for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the autoscale vm group ID
        interval:
          dataType: int
          description: the frequency at which the conditions have to be evaluated
        lbruleid:
          dataType: string
          description: the load balancer rule ID
        maxmembers:
          dataType: int
          description: the maximum number of members in the vmgroup, The number of
            instances in the vm group will be equal to or less than this number.
        minmembers:
          dataType: int
          description: the minimum number of members in the vmgroup, the number of
            instances in the vm group will be equal to or more than this number.
        project:
          dataType: string
          description: the project name of the vm profile
        projectid:
          dataType: string
          description: the project id vm profile
        scaledownpolicies:
          dataType: list
          description: list of scaledown autoscale policies
        scaleuppolicies:
          dataType: list
          description: list of scaleup autoscale policies
        state:
          dataType: string
          description: the current state of the AutoScale Vm Group
        vmprofileid:
          dataType: string
          description: the autoscale profile that contains information about the vms
            in the vm group.
    user_types:
    - domain
    - root
    - user
  enableStaticNat:
    description: Enables static nat for given ip address
    isAsync: 'false'
    name: enableStaticNat
    request:
      parms:
        ipaddressid:
          dataType: uuid
          description: the public IP address id for which static nat feature is being
            enabled
          required: 'true'
        networkid:
          dataType: uuid
          description: The network of the vm the static nat will be enabled for. Required
            when public Ip address is not associated with any Guest network yet (VPC
            case)
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine for enabling static nat feature
          required: 'true'
        vmguestip:
          dataType: string
          description: VM guest nic Secondary ip address for the port forwarding rule
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  enableStorageMaintenance:
    description: Puts storage pool into maintenance state
    isAsync: 'true'
    name: enableStorageMaintenance
    request:
      parms:
        dataType: uuid
        description: Primary storage ID
        name: id
        required: 'true'
    response:
      parms:
        capacityiops:
          dataType: long
          description: IOPS CloudStack can provision from this storage pool
        clusterid:
          dataType: string
          description: the ID of the cluster for the storage pool
        clustername:
          dataType: string
          description: the name of the cluster for the storage pool
        created:
          dataType: date
          description: the date and time the storage pool was created
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the storage pool
        disksizeused:
          dataType: long
          description: the host's currently used disk size
        hypervisor:
          dataType: string
          description: the hypervisor type of the storage pool
        id:
          dataType: string
          description: the ID of the storage pool
        ipaddress:
          dataType: string
          description: the IP address of the storage pool
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the name of the storage pool
        overprovisionfactor:
          dataType: string
          description: the overprovisionfactor for the storage pool
          sinceVersion: '4.4'
        path:
          dataType: string
          description: the storage pool path
        podid:
          dataType: string
          description: the Pod ID of the storage pool
        podname:
          dataType: string
          description: the Pod name of the storage pool
        scope:
          dataType: string
          description: the scope of the storage pool
        state:
          dataType: storagepoolstatus
          description: the state of the storage pool
        storagecapabilities:
          dataType: map
          description: the storage pool capabilities
        suitableformigration:
          dataType: boolean
          description: true if this pool is suitable to migrate a volume, false otherwise
        tags:
          dataType: string
          description: the tags for the storage pool
        type:
          dataType: string
          description: the storage pool type
        zoneid:
          dataType: string
          description: the Zone ID of the storage pool
        zonename:
          dataType: string
          description: the Zone name of the storage pool
    user_types:
    - root
  enableUser:
    description: Enables a user account
    isAsync: 'false'
    name: enableUser
    request:
      parms:
        dataType: uuid
        description: Enables user by user ID.
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the user
        accountid:
          dataType: string
          description: the account ID of the user
        accounttype:
          dataType: short
          description: the account type of the user
        apikey:
          dataType: string
          description: the api key of the user
        created:
          dataType: date
          description: the date and time the user account was created
        domain:
          dataType: string
          description: the domain name of the user
        domainid:
          dataType: string
          description: the domain ID of the user
        email:
          dataType: string
          description: the user email address
        firstname:
          dataType: string
          description: the user firstname
        id:
          dataType: string
          description: the user ID
        iscallerchilddomain:
          dataType: boolean
          description: the boolean value representing if the updating target is in
            caller's child domain
        isdefault:
          dataType: boolean
          description: true if user is default, false otherwise
          sinceVersion: 4.2.0
        lastname:
          dataType: string
          description: the user lastname
        secretkey:
          dataType: string
          description: the secret key of the user
        state:
          dataType: string
          description: the user state
        timezone:
          dataType: string
          description: the timezone user was created in
        username:
          dataType: string
          description: the user name
    user_types:
    - domain
    - root
  expungeVirtualMachine:
    description: Expunge a virtual machine. Once expunged, it cannot be recoverd.
    isAsync: 'true'
    name: expungeVirtualMachine
    request:
      parms:
        dataType: uuid
        description: The ID of the virtual machine
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
  extractIso:
    description: Extracts an ISO
    isAsync: 'true'
    name: extractIso
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the ISO file
          required: 'true'
        mode:
          dataType: string
          description: the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD
          required: 'true'
        url:
          dataType: string
          description: the url to which the ISO would be extracted
          required: 'false'
        zoneid:
          dataType: uuid
          description: the ID of the zone where the ISO is originally located
          required: 'false'
    response:
      parms:
        accountid:
          dataType: string
          description: the account id to which the extracted object belongs
        created:
          dataType: date
          description: the time and date the object was created
        extractId:
          dataType: string
          description: the upload id of extracted object
        extractMode:
          dataType: string
          description: the mode of extraction - upload or download
        id:
          dataType: string
          description: the id of extracted object
        name:
          dataType: string
          description: the name of the extracted object
        state:
          dataType: string
          description: the state of the extracted object
        status:
          dataType: string
          description: the status of the extraction
        storagetype:
          dataType: string
          description: type of the storage
        uploadpercentage:
          dataType: integer
          description: the percentage of the entity uploaded to the specified location
        url:
          dataType: string
          description: if mode = upload then url of the uploaded entity. if mode =
            download the url from which the entity can be downloaded
        zoneid:
          dataType: string
          description: zone ID the object was extracted from
        zonename:
          dataType: string
          description: zone name the object was extracted from
    user_types:
    - domain
    - root
    - user
  extractTemplate:
    description: Extracts a template
    isAsync: 'true'
    name: extractTemplate
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the template
          required: 'true'
        mode:
          dataType: string
          description: the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD
          required: 'true'
        url:
          dataType: string
          description: the url to which the ISO would be extracted
          required: 'false'
        zoneid:
          dataType: uuid
          description: the ID of the zone where the ISO is originally located
          required: 'false'
    response:
      parms:
        accountid:
          dataType: string
          description: the account id to which the extracted object belongs
        created:
          dataType: date
          description: the time and date the object was created
        extractId:
          dataType: string
          description: the upload id of extracted object
        extractMode:
          dataType: string
          description: the mode of extraction - upload or download
        id:
          dataType: string
          description: the id of extracted object
        name:
          dataType: string
          description: the name of the extracted object
        state:
          dataType: string
          description: the state of the extracted object
        status:
          dataType: string
          description: the status of the extraction
        storagetype:
          dataType: string
          description: type of the storage
        uploadpercentage:
          dataType: integer
          description: the percentage of the entity uploaded to the specified location
        url:
          dataType: string
          description: if mode = upload then url of the uploaded entity. if mode =
            download the url from which the entity can be downloaded
        zoneid:
          dataType: string
          description: zone ID the object was extracted from
        zonename:
          dataType: string
          description: zone name the object was extracted from
    user_types:
    - domain
    - root
    - user
  extractVolume:
    description: Extracts volume
    isAsync: 'true'
    name: extractVolume
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the volume
          required: 'true'
        mode:
          dataType: string
          description: the mode of extraction - HTTP_DOWNLOAD or FTP_UPLOAD
          required: 'true'
        url:
          dataType: string
          description: the url to which the volume would be extracted
          required: 'false'
        zoneid:
          dataType: uuid
          description: the ID of the zone where the volume is located
          required: 'true'
    response:
      parms:
        accountid:
          dataType: string
          description: the account id to which the extracted object belongs
        created:
          dataType: date
          description: the time and date the object was created
        extractId:
          dataType: string
          description: the upload id of extracted object
        extractMode:
          dataType: string
          description: the mode of extraction - upload or download
        id:
          dataType: string
          description: the id of extracted object
        name:
          dataType: string
          description: the name of the extracted object
        state:
          dataType: string
          description: the state of the extracted object
        status:
          dataType: string
          description: the status of the extraction
        storagetype:
          dataType: string
          description: type of the storage
        uploadpercentage:
          dataType: integer
          description: the percentage of the entity uploaded to the specified location
        url:
          dataType: string
          description: if mode = upload then url of the uploaded entity. if mode =
            download the url from which the entity can be downloaded
        zoneid:
          dataType: string
          description: zone ID the object was extracted from
        zonename:
          dataType: string
          description: zone name the object was extracted from
    user_types:
    - domain
    - root
    - user
  findHostsForMigration:
    description: Find hosts suitable for migrating a virtual machine.
    isAsync: 'false'
    name: findHostsForMigration
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: find hosts to which this VM can be migrated and flag the hosts
            with enough CPU/RAM to host the VM
          required: 'true'
    response:
      parms:
        averageload:
          dataType: long
          description: the cpu average load on the host
        capabilities:
          dataType: string
          description: capabilities of the host
        clusterid:
          dataType: string
          description: the cluster ID of the host
        clustername:
          dataType: string
          description: the cluster name of the host
        clustertype:
          dataType: string
          description: the cluster type of the cluster that host belongs to
        cpuallocated:
          dataType: string
          description: the amount of the host's CPU currently allocated
        cpunumber:
          dataType: integer
          description: the CPU number of the host
        cpuspeed:
          dataType: long
          description: the CPU speed of the host
        cpuused:
          dataType: string
          description: the amount of the host's CPU currently used
        cpuwithoverprovisioning:
          dataType: string
          description: 'the amount of the host''s CPU after applying the cpu.overprovisioning.factor '
        created:
          dataType: date
          description: the date and time the host was created
        disconnected:
          dataType: date
          description: true if the host is disconnected. False otherwise.
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the host
        events:
          dataType: string
          description: events available for the host
        hahost:
          dataType: boolean
          description: true if the host is Ha host (dedicated to vms started by HA
            process; false otherwise
        hasenoughcapacity:
          dataType: boolean
          description: true if this host has enough CPU and RAM capacity to migrate
            a VM to it, false otherwise
        hosttags:
          dataType: string
          description: comma-separated list of tags for the host
        hypervisor:
          dataType: hypervisortype
          description: the host hypervisor
        hypervisorversion:
          dataType: string
          description: the hypervisor version
        id:
          dataType: string
          description: the ID of the host
        ipaddress:
          dataType: string
          description: the IP address of the host
        islocalstorageactive:
          dataType: boolean
          description: true if local storage is active, false otherwise
        lastpinged:
          dataType: date
          description: the date and time the host was last pinged
        managementserverid:
          dataType: long
          description: the management server ID of the host
        memoryallocated:
          dataType: long
          description: the amount of the host's memory currently allocated
        memorytotal:
          dataType: long
          description: the memory total of the host
        memoryused:
          dataType: long
          description: the amount of the host's memory currently used
        name:
          dataType: string
          description: the name of the host
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the host
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        oscategoryid:
          dataType: string
          description: the OS category ID of the host
        oscategoryname:
          dataType: string
          description: the OS category name of the host
        podid:
          dataType: string
          description: the Pod ID of the host
        podname:
          dataType: string
          description: the Pod name of the host
        removed:
          dataType: date
          description: the date and time the host was removed
        requiresStorageMotion:
          dataType: boolean
          description: true if migrating a vm to this host requires storage motion,
            false otherwise
        resourcestate:
          dataType: string
          description: the resource state of the host
        state:
          dataType: status
          description: the state of the host
        suitableformigration:
          dataType: boolean
          description: true if this host is suitable(has enough capacity and satisfies
            all conditions like hosttags, max guests vm limit etc) to migrate a VM
            to it , false otherwise
        type:
          dataType: type
          description: the host type
        version:
          dataType: string
          description: the host version
        zoneid:
          dataType: string
          description: the Zone ID of the host
        zonename:
          dataType: string
          description: the Zone name of the host
    user_types:
    - root
  findStoragePoolsForMigration:
    description: Lists storage pools available for migration of a volume.
    isAsync: 'false'
    name: findStoragePoolsForMigration
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the volume
          required: 'true'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        capacityiops:
          dataType: long
          description: IOPS CloudStack can provision from this storage pool
        clusterid:
          dataType: string
          description: the ID of the cluster for the storage pool
        clustername:
          dataType: string
          description: the name of the cluster for the storage pool
        created:
          dataType: date
          description: the date and time the storage pool was created
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the storage pool
        disksizeused:
          dataType: long
          description: the host's currently used disk size
        hypervisor:
          dataType: string
          description: the hypervisor type of the storage pool
        id:
          dataType: string
          description: the ID of the storage pool
        ipaddress:
          dataType: string
          description: the IP address of the storage pool
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the name of the storage pool
        overprovisionfactor:
          dataType: string
          description: the overprovisionfactor for the storage pool
          sinceVersion: '4.4'
        path:
          dataType: string
          description: the storage pool path
        podid:
          dataType: string
          description: the Pod ID of the storage pool
        podname:
          dataType: string
          description: the Pod name of the storage pool
        scope:
          dataType: string
          description: the scope of the storage pool
        state:
          dataType: storagepoolstatus
          description: the state of the storage pool
        storagecapabilities:
          dataType: map
          description: the storage pool capabilities
        suitableformigration:
          dataType: boolean
          description: true if this pool is suitable to migrate a volume, false otherwise
        tags:
          dataType: string
          description: the tags for the storage pool
        type:
          dataType: string
          description: the storage pool type
        zoneid:
          dataType: string
          description: the Zone ID of the storage pool
        zonename:
          dataType: string
          description: the Zone name of the storage pool
    user_types:
    - root
  generateAlert:
    description: Generates an alert
    isAsync: 'true'
    name: generateAlert
    request:
      parms:
        description:
          dataType: string
          description: Alert description
          required: 'true'
        name:
          dataType: string
          description: Name of the alert
          required: 'true'
        podid:
          dataType: uuid
          description: Pod id for which alert is generated
          required: 'false'
        type:
          dataType: short
          description: Type of the alert
          required: 'true'
        zoneid:
          dataType: uuid
          description: Zone id for which alert is generated
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: '4.3'
    user_types:
    - root
  generateUsageRecords:
    description: Generates usage records. This will generate records only if there
      any records to be generated, i.e if the scheduled usage job was not run or failed
    isAsync: 'false'
    name: generateUsageRecords
    request:
      parms:
        domainid:
          dataType: uuid
          description: List events for the specified domain.
          required: 'false'
        enddate:
          dataType: date
          description: End date range for usage record query. Use yyyy-MM-dd as the
            date format, e.g. startDate=2009-06-03.
          required: 'true'
        startdate:
          dataType: date
          description: Start date range for usage record query. Use yyyy-MM-dd as
            the date format, e.g. startDate=2009-06-01.
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  getApiLimit:
    description: Get API limit count for the caller
    isAsync: 'false'
    name: getApiLimit
    request: {}
    response:
      parms:
        account:
          dataType: string
          description: the account name of the api remaining count
        accountid:
          dataType: string
          description: the account uuid of the api remaining count
        apiAllowed:
          dataType: int
          description: currently allowed number of apis
        apiIssued:
          dataType: int
          description: number of api already issued
        expireAfter:
          dataType: long
          description: seconds left to reset counters
    user_types:
    - domain
    - root
    - user
  getCloudIdentifier:
    description: Retrieves a cloud identifier.
    isAsync: 'false'
    name: getCloudIdentifier
    request:
      parms:
        dataType: uuid
        description: the user ID for the cloud identifier
        name: userid
        required: 'true'
    response:
      parms:
        cloudidentifier:
          dataType: string
          description: the cloud identifier
        signature:
          dataType: string
          description: the signed response for the cloud identifier
        userid:
          dataType: string
          description: the user ID for the cloud identifier
    user_types:
    - domain
    - root
    - user
  getSPMetadata:
    description: Returns SAML2 CloudStack Service Provider MetaData
    isAsync: 'false'
    name: getSPMetadata
    request: {}
    response:
      parms:
        dataType: string
        description: The Metadata XML
        name: metadata
    user_types:
    - domain
    - root
    - user
  getSolidFireAccountId:
    description: Get SolidFire Account ID
    isAsync: 'false'
    name: getSolidFireAccountId
    request:
      parms:
        accountid:
          dataType: string
          description: CloudStack Account UUID
          required: 'true'
        storageid:
          dataType: string
          description: Storage Pool UUID
          required: 'true'
    response:
      parms:
        dataType: long
        description: SolidFire Account ID
        name: solidFireAccountId
    user_types:
    - domain
    - root
    - user
  getSolidFireVolumeAccessGroupId:
    description: Get the SF Volume Access Group ID
    isAsync: 'false'
    name: getSolidFireVolumeAccessGroupId
    request:
      parms:
        clusterid:
          dataType: string
          description: Cluster UUID
          required: 'true'
        storageid:
          dataType: string
          description: Storage Pool UUID
          required: 'true'
    response:
      parms:
        dataType: long
        description: SolidFire Volume Access Group Id
        name: solidFireVolumeAccessGroupId
    user_types:
    - domain
    - root
    - user
  getSolidFireVolumeIscsiName:
    description: Get SolidFire Volume's Iscsi Name
    isAsync: 'false'
    name: getSolidFireVolumeIscsiName
    request:
      parms:
        dataType: string
        description: CloudStack Volume UUID
        name: volumeid
        required: 'true'
    response:
      parms:
        dataType: string
        description: SolidFire Volume Iscsi Name
        name: solidFireVolumeIscsiName
    user_types:
    - domain
    - root
    - user
  getSolidFireVolumeSize:
    description: Get the SF volume size including Hypervisor Snapshot Reserve
    isAsync: 'false'
    name: getSolidFireVolumeSize
    request:
      parms:
        storageid:
          dataType: string
          description: Storage Pool UUID
          required: 'true'
        volumeid:
          dataType: string
          description: Volume UUID
          required: 'true'
    response:
      parms:
        dataType: long
        description: SolidFire Volume Size Including Hypervisor Snapshot Reserve
        name: solidFireVolumeSize
    user_types:
    - domain
    - root
    - user
  getUser:
    description: Find user account by API key
    isAsync: 'false'
    name: getUser
    request:
      parms:
        dataType: string
        description: API key of the user
        name: userapikey
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the user
        accountid:
          dataType: string
          description: the account ID of the user
        accounttype:
          dataType: short
          description: the account type of the user
        apikey:
          dataType: string
          description: the api key of the user
        created:
          dataType: date
          description: the date and time the user account was created
        domain:
          dataType: string
          description: the domain name of the user
        domainid:
          dataType: string
          description: the domain ID of the user
        email:
          dataType: string
          description: the user email address
        firstname:
          dataType: string
          description: the user firstname
        id:
          dataType: string
          description: the user ID
        iscallerchilddomain:
          dataType: boolean
          description: the boolean value representing if the updating target is in
            caller's child domain
        isdefault:
          dataType: boolean
          description: true if user is default, false otherwise
          sinceVersion: 4.2.0
        lastname:
          dataType: string
          description: the user lastname
        secretkey:
          dataType: string
          description: the secret key of the user
        state:
          dataType: string
          description: the user state
        timezone:
          dataType: string
          description: the timezone user was created in
        username:
          dataType: string
          description: the user name
    user_types:
    - root
  getVMPassword:
    description: Returns an encrypted password for the VM
    isAsync: 'false'
    name: getVMPassword
    request:
      parms:
        dataType: uuid
        description: The ID of the virtual machine
        name: id
        required: 'true'
    response:
      parms:
        dataType: string
        description: The base64 encoded encrypted password of the VM
        name: encryptedpassword
    user_types:
    - domain
    - root
    - user
  getVirtualMachineUserData:
    description: Returns user data associated with the VM
    isAsync: 'false'
    name: getVirtualMachineUserData
    request:
      parms:
        dataType: uuid
        description: The ID of the virtual machine
        name: virtualmachineid
        required: 'true'
    response:
      parms:
        userdata:
          dataType: string
          description: Base 64 encoded VM user data
        virtualmachineid:
          dataType: string
          description: the ID of the virtual machine
    sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  importLdapUsers:
    description: Import LDAP users
    isAsync: 'false'
    name: importLdapUsers
    request:
      parms:
        account:
          dataType: string
          description: Creates the user under the specified account. If no account
            is specified, the username will be used as the account name.
          required: 'false'
        accountdetails:
          dataType: map
          description: details for account used to store specific parameters
          required: 'false'
          type: map
        accounttype:
          dataType: short
          description: Type of the account.  Specify 0 for user, 1 for root admin,
            and 2 for domain admin
          required: 'true'
        domainid:
          dataType: uuid
          description: Specifies the domain to which the ldap users are to be imported.
            If no domain is specified, a domain will created using group parameter.
            If the group is also not specified, a domain name based on the OU information
            will be created. If no OU hierarchy exists, will be defaulted to ROOT
            domain
          required: 'false'
        group:
          dataType: string
          description: Specifies the group name from which the ldap users are to be
            imported. If no group is specified, all the users will be imported.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        timezone:
          dataType: string
          description: Specifies a timezone for this command. For more information
            on the timezone parameter, see Time Zone Format.
          required: 'false'
    response:
      parms:
        domain:
          dataType: string
          description: The user's domain
        email:
          dataType: string
          description: The user's email
        firstname:
          dataType: string
          description: The user's firstname
        lastname:
          dataType: string
          description: The user's lastname
        principal:
          dataType: string
          description: The user's principle
        username:
          dataType: string
          description: The user's username
    sinceVersion: 4.3.0
    user_types:
    - root
  ldapCreateAccount:
    description: Creates an account from an LDAP user
    isAsync: 'false'
    name: ldapCreateAccount
    request:
      parms:
        account:
          dataType: string
          description: Creates the user under the specified account. If no account
            is specified, the username will be used as the account name.
          required: 'false'
        accountdetails:
          dataType: map
          description: details for account used to store specific parameters
          required: 'false'
          type: map
        accountid:
          dataType: string
          description: Account UUID, required for adding account from external provisioning
            system
          required: 'false'
        accounttype:
          dataType: short
          description: Type of the account.  Specify 0 for user, 1 for root admin,
            and 2 for domain admin
          required: 'true'
        domainid:
          dataType: uuid
          description: Creates the user under the specified domain.
          required: 'false'
        networkdomain:
          dataType: string
          description: Network domain for the account's networks
          required: 'false'
        timezone:
          dataType: string
          description: Specifies a timezone for this command. For more information
            on the timezone parameter, see Time Zone Format.
          required: 'false'
        userid:
          dataType: string
          description: User UUID, required for adding account from external provisioning
            system
          required: 'false'
        username:
          dataType: string
          description: Unique username.
          required: 'true'
    response:
      parms:
        accountdetails:
          dataType: map
          description: details for the account
        accounttype:
          dataType: short
          description: account type (admin, domain-admin, user)
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            account
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the account can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by account
          sinceVersion: 4.2.0
        defaultzoneid:
          dataType: string
          description: the default zone of the account
        domain:
          dataType: string
          description: name of the Domain the account belongs too
        domainid:
          dataType: string
          description: id of the Domain the account belongs too
        groups:
          dataType: list
          description: the list of acl groups that account belongs to
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the account
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            account to acquire
        iplimit:
          dataType: string
          description: the total number of public ip addresses this account can acquire
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            account
        iscleanuprequired:
          dataType: boolean
          description: true if the account requires cleanup
        isdefault:
          dataType: boolean
          description: true if account is default, false otherwise
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this account
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the account can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by account
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the account
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            account
          sinceVersion: 3.0.1
        networkdomain:
          dataType: string
          description: the network domain
        networklimit:
          dataType: string
          description: the total number of networks the account can own
          sinceVersion: 3.0.1
        networktotal:
          dataType: long
          description: the total number of networks owned by account
          sinceVersion: 3.0.1
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this account
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the account can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        projectavailable:
          dataType: string
          description: the total number of projects available for administration by
            this account
          sinceVersion: 3.0.1
        projectlimit:
          dataType: string
          description: the total number of projects the account can own
          sinceVersion: 3.0.1
        projecttotal:
          dataType: long
          description: the total number of projects being administrated by this account
          sinceVersion: 3.0.1
        receivedbytes:
          dataType: long
          description: the total number of network traffic bytes received
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this account
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the account can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        sentbytes:
          dataType: long
          description: the total number of network traffic bytes sent
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this account
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this account
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this account
        state:
          dataType: string
          description: the state of the account
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            account
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            account
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            account
        user:
          dataType: list
          description: the list of users associated with account
          parms:
            account:
              dataType: string
              description: the account name of the user
            accountid:
              dataType: string
              description: the account ID of the user
            accounttype:
              dataType: short
              description: the account type of the user
            apikey:
              dataType: string
              description: the api key of the user
            created:
              dataType: date
              description: the date and time the user account was created
            domain:
              dataType: string
              description: the domain name of the user
            domainid:
              dataType: string
              description: the domain ID of the user
            email:
              dataType: string
              description: the user email address
            firstname:
              dataType: string
              description: the user firstname
            id:
              dataType: string
              description: the user ID
            iscallerchilddomain:
              dataType: boolean
              description: the boolean value representing if the updating target is
                in caller's child domain
            isdefault:
              dataType: boolean
              description: true if user is default, false otherwise
              sinceVersion: 4.2.0
            lastname:
              dataType: string
              description: the user lastname
            secretkey:
              dataType: string
              description: the secret key of the user
            state:
              dataType: string
              description: the user state
            timezone:
              dataType: string
              description: the timezone user was created in
            username:
              dataType: string
              description: the user name
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this account
            to acquire
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this account
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this account
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this account
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this account
        volumeavailable:
          dataType: string
          description: the total volume available for this account
        volumelimit:
          dataType: string
          description: the total volume which can be used by this account
        volumetotal:
          dataType: long
          description: the total volume being used by this account
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this account
          sinceVersion: 4.0.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the account can own
          sinceVersion: 4.0.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by account
          sinceVersion: 4.0.0
    sinceVersion: 4.2.0
    user_types:
    - root
  listAccounts:
    description: Lists accounts and provides detailed account information for listed
      accounts
    isAsync: 'false'
    name: listAccounts
    request:
      parms:
        accounttype:
          dataType: long
          description: list accounts by account type. Valid account types are 1 (admin),
            2 (domain-admin), and 0 (user).
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: list account by account ID
          required: 'false'
        iscleanuprequired:
          dataType: boolean
          description: list accounts by cleanuprequred attribute (values are true
            or false)
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: list account by account name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        state:
          dataType: string
          description: list accounts by state. Valid states are enabled, disabled,
            and locked.
          required: 'false'
    response:
      parms:
        accountdetails:
          dataType: map
          description: details for the account
        accounttype:
          dataType: short
          description: account type (admin, domain-admin, user)
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            account
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the account can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by account
          sinceVersion: 4.2.0
        defaultzoneid:
          dataType: string
          description: the default zone of the account
        domain:
          dataType: string
          description: name of the Domain the account belongs too
        domainid:
          dataType: string
          description: id of the Domain the account belongs too
        groups:
          dataType: list
          description: the list of acl groups that account belongs to
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the account
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            account to acquire
        iplimit:
          dataType: string
          description: the total number of public ip addresses this account can acquire
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            account
        iscleanuprequired:
          dataType: boolean
          description: true if the account requires cleanup
        isdefault:
          dataType: boolean
          description: true if account is default, false otherwise
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this account
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the account can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by account
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the account
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            account
          sinceVersion: 3.0.1
        networkdomain:
          dataType: string
          description: the network domain
        networklimit:
          dataType: string
          description: the total number of networks the account can own
          sinceVersion: 3.0.1
        networktotal:
          dataType: long
          description: the total number of networks owned by account
          sinceVersion: 3.0.1
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this account
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the account can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        projectavailable:
          dataType: string
          description: the total number of projects available for administration by
            this account
          sinceVersion: 3.0.1
        projectlimit:
          dataType: string
          description: the total number of projects the account can own
          sinceVersion: 3.0.1
        projecttotal:
          dataType: long
          description: the total number of projects being administrated by this account
          sinceVersion: 3.0.1
        receivedbytes:
          dataType: long
          description: the total number of network traffic bytes received
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this account
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the account can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        sentbytes:
          dataType: long
          description: the total number of network traffic bytes sent
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this account
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this account
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this account
        state:
          dataType: string
          description: the state of the account
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            account
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            account
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            account
        user:
          dataType: list
          description: the list of users associated with account
          parms:
            account:
              dataType: string
              description: the account name of the user
            accountid:
              dataType: string
              description: the account ID of the user
            accounttype:
              dataType: short
              description: the account type of the user
            apikey:
              dataType: string
              description: the api key of the user
            created:
              dataType: date
              description: the date and time the user account was created
            domain:
              dataType: string
              description: the domain name of the user
            domainid:
              dataType: string
              description: the domain ID of the user
            email:
              dataType: string
              description: the user email address
            firstname:
              dataType: string
              description: the user firstname
            id:
              dataType: string
              description: the user ID
            iscallerchilddomain:
              dataType: boolean
              description: the boolean value representing if the updating target is
                in caller's child domain
            isdefault:
              dataType: boolean
              description: true if user is default, false otherwise
              sinceVersion: 4.2.0
            lastname:
              dataType: string
              description: the user lastname
            secretkey:
              dataType: string
              description: the secret key of the user
            state:
              dataType: string
              description: the user state
            timezone:
              dataType: string
              description: the timezone user was created in
            username:
              dataType: string
              description: the user name
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this account
            to acquire
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this account
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this account
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this account
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this account
        volumeavailable:
          dataType: string
          description: the total volume available for this account
        volumelimit:
          dataType: string
          description: the total volume which can be used by this account
        volumetotal:
          dataType: long
          description: the total volume being used by this account
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this account
          sinceVersion: 4.0.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the account can own
          sinceVersion: 4.0.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by account
          sinceVersion: 4.0.0
    user_types:
    - domain
    - root
    - user
  listAffinityGroupTypes:
    description: Lists affinity group types available
    isAsync: 'false'
    name: listAffinityGroupTypes
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        dataType: string
        description: the type of the affinity group
        name: type
    user_types:
    - domain
    - root
    - user
  listAffinityGroups:
    description: Lists affinity groups
    isAsync: 'false'
    name: listAffinityGroups
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: list the affinity group by the id provided
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: lists affinity groups by name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        type:
          dataType: string
          description: lists affinity groups by type
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: lists affinity groups by virtual machine id
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the affinity group
        description:
          dataType: string
          description: the description of the affinity group
        domain:
          dataType: string
          description: the domain name of the affinity group
        domainid:
          dataType: string
          description: the domain ID of the affinity group
        id:
          dataType: string
          description: the ID of the affinity group
        name:
          dataType: string
          description: the name of the affinity group
        type:
          dataType: string
          description: the type of the affinity group
        virtualmachineIds:
          dataType: list
          description: 'virtual machine Ids associated with this affinity group '
    user_types:
    - domain
    - root
    - user
  listAlerts:
    description: Lists all alerts.
    isAsync: 'false'
    name: listAlerts
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the alert
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: list by alert name
          required: 'false'
          sinceVersion: '4.3'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        type:
          dataType: string
          description: list by alert type
          required: 'false'
    response:
      parms:
        description:
          dataType: string
          description: description of the alert
        id:
          dataType: string
          description: the id of the alert
        name:
          dataType: string
          description: the name of the alert
          sinceVersion: '4.3'
        sent:
          dataType: date
          description: the date and time the alert was sent
        type:
          dataType: short
          description: 'One of the following alert types: MEMORY = 0, CPU = 1, STORAGE
            = 2, STORAGE_ALLOCATED = 3, PUBLIC_IP = 4, PRIVATE_IP = 5, HOST = 6, USERVM
            = 7, DOMAIN_ROUTER = 8, CONSOLE_PROXY = 9, ROUTING = 10: lost connection
            to default route (to the gateway), STORAGE_MISC = 11: lost connection
            to default route (to the gateway), USAGE_SERVER = 12: lost connection
            to default route (to the gateway), MANAGMENT_NODE = 13: lost connection
            to default route (to the gateway), DOMAIN_ROUTER_MIGRATE = 14, CONSOLE_PROXY_MIGRATE
            = 15, USERVM_MIGRATE = 16, VLAN = 17, SSVM = 18, USAGE_SERVER_RESULT =
            19'
    user_types:
    - root
  listApis:
    description: lists all available apis on the server, provided by the Api Discovery
      plugin
    isAsync: 'false'
    name: listApis
    request:
      parms:
        dataType: string
        description: API name
        name: name
        required: 'false'
    response:
      parms:
        description:
          dataType: string
          description: description of the api
        isasync:
          dataType: boolean
          description: true if api is asynchronous
        name:
          dataType: string
          description: the name of the api command
        params:
          dataType: set
          description: the list params the api accepts
          parms:
            description:
              dataType: string
              description: description of the api parameter
            length:
              dataType: int
              description: length of the parameter
            name:
              dataType: string
              description: the name of the api parameter
            related:
              dataType: string
              description: comma separated related apis to get the parameter
            required:
              dataType: boolean
              description: true if this parameter is required for the api request
            since:
              dataType: string
              description: version of CloudStack the api was introduced in
            type:
              dataType: string
              description: parameter type
        related:
          dataType: string
          description: comma separated related apis
        response:
          dataType: set
          description: api response fields
          parms:
            description:
              dataType: string
              description: description of the api response field
            name:
              dataType: string
              description: the name of the api response field
            response:
              dataType: set
              description: api response fields
            type:
              dataType: string
              description: response field type
        since:
          dataType: string
          description: version of CloudStack the api was introduced in
        type:
          dataType: string
          description: response field type
    sinceVersion: 4.1.0
    user_types:
    - domain
    - root
    - user
  listAsyncJobs:
    description: Lists all pending asynchronous jobs for the account.
    isAsync: 'false'
    name: listAsyncJobs
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        startdate:
          dataType: tzdate
          description: the start date of the async job
          required: 'false'
    response:
      parms:
        accountid:
          dataType: string
          description: the account that executed the async command
        cmd:
          dataType: string
          description: the async command executed
        created:
          dataType: date
          description: '  the created date of the job'
        jobid:
          description: the ID of the async job
        jobinstanceid:
          dataType: string
          description: the unique ID of the instance/entity object related to the
            job
        jobinstancetype:
          dataType: string
          description: the instance/entity object related to the job
        jobprocstatus:
          dataType: integer
          description: the progress information of the PENDING job
        jobresult:
          dataType: responseobject
          description: the result reason
        jobresultcode:
          dataType: integer
          description: the result code for the job
        jobresulttype:
          dataType: string
          description: the result type
        jobstatus:
          dataType: integer
          description: the current job status-should be 0 for PENDING
        userid:
          dataType: string
          description: the user that executed the async command
    user_types:
    - domain
    - root
    - user
  listAutoScalePolicies:
    description: Lists autoscale policies.
    isAsync: 'false'
    name: listAutoScalePolicies
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        action:
          dataType: string
          description: the action to be executed if all the conditions evaluate to
            true for the specified duration.
          required: 'false'
        conditionid:
          dataType: uuid
          description: the ID of the condition of the policy
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the autoscale policy
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        vmgroupid:
          dataType: uuid
          description: the ID of the autoscale vm group
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the autoscale policy
        action:
          dataType: string
          description: the action to be executed if all the conditions evaluate to
            true for the specified duration.
        conditions:
          dataType: list
          description: the list of IDs of the conditions that are being evaluated
            on every interval
        domain:
          dataType: string
          description: the domain name of the autoscale policy
        domainid:
          dataType: string
          description: the domain ID of the autoscale policy
        duration:
          dataType: integer
          description: the duration for which the conditions have to be true before
            action is taken
        id:
          dataType: string
          description: the autoscale policy ID
        project:
          dataType: string
          description: the project name of the autoscale policy
        projectid:
          dataType: string
          description: the project id autoscale policy
        quiettime:
          dataType: integer
          description: the cool down period for which the policy should not be evaluated
            after the action has been taken
    user_types:
    - domain
    - root
    - user
  listAutoScaleVmGroups:
    description: Lists autoscale vm groups.
    isAsync: 'false'
    name: listAutoScaleVmGroups
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the autoscale vm group
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        lbruleid:
          dataType: uuid
          description: the ID of the loadbalancer
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        policyid:
          dataType: uuid
          description: the ID of the policy
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        vmprofileid:
          dataType: uuid
          description: the ID of the profile
          required: 'false'
        zoneid:
          dataType: uuid
          description: the availability zone ID
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the instance group
        domain:
          dataType: string
          description: the domain name of the vm profile
        domainid:
          dataType: string
          description: the domain ID of the vm profile
        fordisplay:
          dataType: boolean
          description: is group for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the autoscale vm group ID
        interval:
          dataType: int
          description: the frequency at which the conditions have to be evaluated
        lbruleid:
          dataType: string
          description: the load balancer rule ID
        maxmembers:
          dataType: int
          description: the maximum number of members in the vmgroup, The number of
            instances in the vm group will be equal to or less than this number.
        minmembers:
          dataType: int
          description: the minimum number of members in the vmgroup, the number of
            instances in the vm group will be equal to or more than this number.
        project:
          dataType: string
          description: the project name of the vm profile
        projectid:
          dataType: string
          description: the project id vm profile
        scaledownpolicies:
          dataType: list
          description: list of scaledown autoscale policies
        scaleuppolicies:
          dataType: list
          description: list of scaleup autoscale policies
        state:
          dataType: string
          description: the current state of the AutoScale Vm Group
        vmprofileid:
          dataType: string
          description: the autoscale profile that contains information about the vms
            in the vm group.
    user_types:
    - domain
    - root
    - user
  listAutoScaleVmProfiles:
    description: Lists autoscale vm profiles.
    isAsync: 'false'
    name: listAutoScaleVmProfiles
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the autoscale vm profile
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        otherdeployparams:
          dataType: string
          description: the otherdeployparameters of the autoscale vm profile
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        serviceofferingid:
          dataType: uuid
          description: list profiles by service offering id
          required: 'false'
          sinceVersion: '4.4'
        templateid:
          dataType: uuid
          description: the templateid of the autoscale vm profile
          required: 'false'
        zoneid:
          dataType: uuid
          description: availability zone for the auto deployed virtual machine
          required: 'false'
          sinceVersion: '4.4'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the instance group
        autoscaleuserid:
          dataType: string
          description: the ID of the user used to launch and destroy the VMs
        destroyvmgraceperiod:
          dataType: integer
          description: the time allowed for existing connections to get closed before
            a vm is destroyed
        domain:
          dataType: string
          description: the domain name of the vm profile
        domainid:
          dataType: string
          description: the domain ID of the vm profile
        fordisplay:
          dataType: boolean
          description: is profile for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the autoscale vm profile ID
        otherdeployparams:
          dataType: string
          description: parameters other than zoneId/serviceOfferringId/templateId
            to be used while deploying a virtual machine
        project:
          dataType: string
          description: the project name of the vm profile
        projectid:
          dataType: string
          description: the project id vm profile
        serviceofferingid:
          dataType: string
          description: the service offering to be used while deploying a virtual machine
        templateid:
          dataType: string
          description: the template to be used while deploying a virtual machine
        zoneid:
          dataType: string
          description: the availability zone to be used while deploying a virtual
            machine
    user_types:
    - domain
    - root
    - user
  listBaremetalDhcp:
    description: list baremetal dhcp servers
    isAsync: 'false'
    name: listBaremetalDhcp
    request:
      parms:
        dhcpservertype:
          dataType: string
          description: Type of DHCP device
          required: 'false'
        id:
          dataType: long
          description: DHCP server device ID
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
    response:
      parms:
        dhcpservertype:
          dataType: string
          description: name of the provider
        id:
          dataType: string
          description: 'device id of '
        physicalnetworkid:
          dataType: string
          description: the physical network to which this external dhcp device belongs
            to
        provider:
          dataType: string
          description: name of the provider
        url:
          dataType: string
          description: url
    user_types:
    - root
  listBaremetalPxeServers:
    description: list baremetal pxe server
    isAsync: 'false'
    name: listBaremetalPxeServers
    request:
      parms:
        id:
          dataType: long
          description: Pxe server device ID
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
    response:
      parms:
        id:
          dataType: string
          description: 'device id of '
        physicalnetworkid:
          dataType: string
          description: the physical network to which this external dhcp device belongs
            to
        provider:
          dataType: string
          description: name of the provider
        url:
          dataType: string
          description: url
    user_types:
    - root
  listBaremetalRct:
    description: list baremetal rack configuration
    isAsync: 'false'
    name: listBaremetalRct
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        id:
          dataType: string
          description: id of rct
        url:
          dataType: string
          description: url
    user_types:
    - root
  listBigSwitchVnsDevices:
    description: Lists BigSwitch Vns devices
    isAsync: 'false'
    name: listBigSwitchVnsDevices
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'false'
        vnsdeviceid:
          dataType: uuid
          description: bigswitch vns device ID
          required: 'false'
    response:
      parms:
        bigswitchdevicename:
          dataType: string
          description: device name
        hostname:
          dataType: string
          description: the controller Ip address
        physicalnetworkid:
          dataType: string
          description: the physical network to which this BigSwitch Vns belongs to
        provider:
          dataType: string
          description: name of the provider
        vnsdeviceid:
          dataType: string
          description: device id of the BigSwitch Vns
    sinceVersion: 4.1.0
    user_types:
    - root
  listBrocadeVcsDeviceNetworks:
    description: lists network that are using a brocade vcs switch
    isAsync: 'false'
    name: listBrocadeVcsDeviceNetworks
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        vcsdeviceid:
          dataType: uuid
          description: brocade vcs switch ID
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the network
        aclid:
          dataType: string
          description: ACL Id associated with the VPC network
        acltype:
          dataType: string
          description: acl type - access type to the network
        broadcastdomaintype:
          dataType: string
          description: Broadcast domain type of the network
        broadcasturi:
          dataType: string
          description: broadcast uri of the network. This parameter is visible to
            ROOT admins only
        canusefordeploy:
          dataType: boolean
          description: list networks available for vm deployment
        cidr:
          dataType: string
          description: Cloudstack managed address space, all CloudStack managed VMs
            get IP address from CIDR
        displaynetwork:
          dataType: boolean
          description: an optional field, whether to the display the network to the
            end user or not.
        displaytext:
          dataType: string
          description: the displaytext of the network
        dns1:
          dataType: string
          description: the first DNS for the network
        dns2:
          dataType: string
          description: the second DNS for the network
        domain:
          dataType: string
          description: the domain name of the network owner
        domainid:
          dataType: string
          description: the domain id of the network owner
        gateway:
          dataType: string
          description: the network's gateway
        id:
          dataType: string
          description: the id of the network
        ip6cidr:
          dataType: string
          description: the cidr of IPv6 network
        ip6gateway:
          dataType: string
          description: the gateway of IPv6 network
        isdefault:
          dataType: boolean
          description: true if network is default, false otherwise
        ispersistent:
          dataType: boolean
          description: list networks that are persistent
        issystem:
          dataType: boolean
          description: true if network is system, false otherwise
        name:
          dataType: string
          description: the name of the network
        netmask:
          dataType: string
          description: the network's netmask
        networkcidr:
          dataType: string
          description: the network CIDR of the guest network configured with IP reservation.
            It is the summation of CIDR and RESERVED_IP_RANGE
        networkdomain:
          dataType: string
          description: the network domain
        networkofferingavailability:
          dataType: string
          description: availability of the network offering the network is created
            from
        networkofferingconservemode:
          dataType: boolean
          description: true if network offering is ip conserve mode enabled
        networkofferingdisplaytext:
          dataType: string
          description: display text of the network offering the network is created
            from
        networkofferingid:
          dataType: string
          description: network offering id the network is created from
        networkofferingname:
          dataType: string
          description: name of the network offering the network is created from
        physicalnetworkid:
          dataType: string
          description: the physical network id
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        related:
          dataType: string
          description: related to what other network configuration
        reservediprange:
          dataType: string
          description: the network's IP range not to be used by CloudStack guest VMs
            and can be used for non CloudStack purposes
        restartrequired:
          dataType: boolean
          description: true network requires restart
        service:
          dataType: list
          description: the list of services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        specifyipranges:
          dataType: boolean
          description: true if network supports specifying ip ranges, false otherwise
        state:
          dataType: string
          description: state of the network
        strechedl2subnet:
          dataType: boolean
          description: true if network can span multiple zones
          sinceVersion: '4.4'
        subdomainaccess:
          dataType: boolean
          description: true if users from subdomains can access the domain level network
        tags:
          dataType: list
          description: the list of resource tags associated with network
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        traffictype:
          dataType: string
          description: the traffic type of the network
        type:
          dataType: string
          description: the type of the network
        vlan:
          dataType: string
          description: The vlan of the network. This parameter is visible to ROOT
            admins only
        vpcid:
          dataType: string
          description: VPC the network belongs to
        zoneid:
          dataType: string
          description: zone id of the network
        zonename:
          dataType: string
          description: the name of the zone the network belongs to
        zonesnetworkspans:
          dataType: set
          description: If a network is enabled for 'streched l2 subnet' then represents
            zones on which network currently spans
          sinceVersion: '4.4'
    user_types:
    - root
  listBrocadeVcsDevices:
    description: Lists Brocade VCS Switches
    isAsync: 'false'
    name: listBrocadeVcsDevices
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'false'
        vcsdeviceid:
          dataType: uuid
          description: Brocade VCS switch ID
          required: 'false'
    response:
      parms:
        brocadedevicename:
          dataType: string
          description: device name
        hostname:
          dataType: string
          description: the principal switch Ip address
        physicalnetworkid:
          dataType: string
          description: the physical Network to which this Brocade VCS belongs to
        provider:
          dataType: string
          description: name of the provider
        vcsdeviceid:
          dataType: string
          description: device id of the Brocade Vcs
    user_types:
    - root
  listCapabilities:
    description: Lists capabilities
    isAsync: 'false'
    name: listCapabilities
    request: {}
    response:
      parms:
        allowusercreateprojects:
          dataType: boolean
          description: true if regular user is allowed to create projects
        apilimitinterval:
          dataType: integer
          description: time interval (in seconds) to reset api count
        apilimitmax:
          dataType: integer
          description: Max allowed number of api requests within the specified interval
        cloudstackversion:
          dataType: string
          description: version of the cloud stack
        customdiskofferingmaxsize:
          dataType: long
          description: maximum size that can be specified when create disk from disk
            offering with custom size
        customdiskofferingminsize:
          dataType: long
          description: minimum size that can be specified when create disk from disk
            offering with custom size
        kvmsnapshotenabled:
          dataType: boolean
          description: true if snapshot is supported for KVM host, false otherwise
        projectinviterequired:
          dataType: boolean
          description: If invitation confirmation is required when add account to
            project
        regionsecondaryenabled:
          dataType: boolean
          description: true if region wide secondary is enabled, false otherwise
        securitygroupsenabled:
          dataType: boolean
          description: true if security groups support is enabled, false otherwise
        supportELB:
          dataType: string
          description: true if region supports elastic load balancer on basic zones
        userpublictemplateenabled:
          dataType: boolean
          description: true if user and domain admins can set templates to be shared,
            false otherwise
    user_types:
    - domain
    - root
    - user
  listCapacity:
    description: Lists all the system wide capacities.
    isAsync: 'false'
    name: listCapacity
    request:
      parms:
        clusterid:
          dataType: uuid
          description: lists capacity by the Cluster ID
          required: 'false'
          sinceVersion: 3.0.0
        fetchlatest:
          dataType: boolean
          description: recalculate capacities and fetch the latest
          required: 'false'
          sinceVersion: 3.0.0
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        podid:
          dataType: uuid
          description: lists capacity by the Pod ID
          required: 'false'
        sortby:
          dataType: string
          description: 'Sort the results. Available values: Usage'
          required: 'false'
          sinceVersion: 3.0.0
        type:
          dataType: integer
          description: lists capacity by type* CAPACITY_TYPE_MEMORY = 0* CAPACITY_TYPE_CPU
            = 1* CAPACITY_TYPE_STORAGE = 2* CAPACITY_TYPE_STORAGE_ALLOCATED = 3* CAPACITY_TYPE_VIRTUAL_NETWORK_PUBLIC_IP
            = 4* CAPACITY_TYPE_PRIVATE_IP = 5* CAPACITY_TYPE_SECONDARY_STORAGE = 6*
            CAPACITY_TYPE_VLAN = 7* CAPACITY_TYPE_DIRECT_ATTACHED_PUBLIC_IP = 8* CAPACITY_TYPE_LOCAL_STORAGE
            = 9.
          required: 'false'
        zoneid:
          dataType: uuid
          description: lists capacity by the Zone ID
          required: 'false'
    response:
      parms:
        capacitytotal:
          dataType: long
          description: the total capacity available
        capacityused:
          dataType: long
          description: the capacity currently in use
        clusterid:
          dataType: string
          description: the Cluster ID
        clustername:
          dataType: string
          description: the Cluster name
        percentused:
          dataType: string
          description: the percentage of capacity currently in use
        podid:
          dataType: string
          description: the Pod ID
        podname:
          dataType: string
          description: the Pod name
        type:
          dataType: short
          description: the capacity type
        zoneid:
          dataType: string
          description: the Zone ID
        zonename:
          dataType: string
          description: the Zone name
    user_types:
    - root
  listClusters:
    description: Lists clusters.
    isAsync: 'false'
    name: listClusters
    request:
      parms:
        allocationstate:
          dataType: string
          description: lists clusters by allocation state
          required: 'false'
        clustertype:
          dataType: string
          description: lists clusters by cluster type
          required: 'false'
        hypervisor:
          dataType: string
          description: lists clusters by hypervisor type
          required: 'false'
        id:
          dataType: uuid
          description: lists clusters by the cluster ID
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        managedstate:
          dataType: string
          description: whether this cluster is managed by cloudstack
          required: 'false'
        name:
          dataType: string
          description: lists clusters by the cluster name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        podid:
          dataType: uuid
          description: lists clusters by Pod ID
          required: 'false'
        showcapacities:
          dataType: boolean
          description: flag to display the capacity of the clusters
          required: 'false'
        zoneid:
          dataType: uuid
          description: lists clusters by Zone ID
          required: 'false'
    response:
      parms:
        allocationstate:
          dataType: string
          description: the allocation state of the cluster
        capacity:
          dataType: list
          description: the capacity of the Cluster
          parms:
            capacitytotal:
              dataType: long
              description: the total capacity available
            capacityused:
              dataType: long
              description: the capacity currently in use
            clusterid:
              dataType: string
              description: the Cluster ID
            clustername:
              dataType: string
              description: the Cluster name
            percentused:
              dataType: string
              description: the percentage of capacity currently in use
            podid:
              dataType: string
              description: the Pod ID
            podname:
              dataType: string
              description: the Pod name
            type:
              dataType: short
              description: the capacity type
            zoneid:
              dataType: string
              description: the Zone ID
            zonename:
              dataType: string
              description: the Zone name
        clustertype:
          dataType: string
          description: the type of the cluster
        cpuovercommitratio:
          dataType: string
          description: The cpu overcommit ratio of the cluster
        hypervisortype:
          dataType: string
          description: the hypervisor type of the cluster
        id:
          dataType: string
          description: the cluster ID
        managedstate:
          dataType: string
          description: whether this cluster is managed by cloudstack
        memoryovercommitratio:
          dataType: string
          description: The memory overcommit ratio of the cluster
        name:
          dataType: string
          description: the cluster name
        podid:
          dataType: string
          description: the Pod ID of the cluster
        podname:
          dataType: string
          description: the Pod name of the cluster
        zoneid:
          dataType: string
          description: the Zone ID of the cluster
        zonename:
          dataType: string
          description: the Zone name of the cluster
    user_types:
    - root
  listConditions:
    description: List Conditions for the specific user
    isAsync: 'false'
    name: listConditions
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        counterid:
          dataType: uuid
          description: Counter-id of the condition.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: ID of the Condition.
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        policyid:
          dataType: uuid
          description: the ID of the policy
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the Condition.
        counter:
          dataType: list
          description: Details of the Counter.
        domain:
          dataType: string
          description: the domain name of the owner.
        domainid:
          dataType: string
          description: the domain id of the Condition owner
        id:
          dataType: string
          description: the id of the Condition
        project:
          dataType: string
          description: the project name of the Condition
        projectid:
          dataType: string
          description: the project id of the Condition.
        relationaloperator:
          dataType: string
          description: Relational Operator to be used with threshold.
        threshold:
          dataType: long
          description: Threshold Value for the counter.
        zoneid:
          dataType: string
          description: zone id of counter
    user_types:
    - domain
    - root
    - user
  listConfigurations:
    description: Lists all configurations.
    isAsync: 'false'
    name: listConfigurations
    request:
      parms:
        accountid:
          dataType: uuid
          description: the ID of the Account to update the parameter value for corresponding
            account
          required: 'false'
        category:
          dataType: string
          description: lists configurations by category
          required: 'false'
        clusterid:
          dataType: uuid
          description: the ID of the Cluster to update the parameter value for corresponding
            cluster
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: lists configuration by name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        storageid:
          dataType: uuid
          description: the ID of the Storage pool to update the parameter value for
            corresponding storage pool
          required: 'false'
        zoneid:
          dataType: uuid
          description: the ID of the Zone to update the parameter value for corresponding
            zone
          required: 'false'
    response:
      parms:
        category:
          dataType: string
          description: the category of the configuration
        description:
          dataType: string
          description: the description of the configuration
        id:
          dataType: long
          description: the value of the configuration
        name:
          dataType: string
          description: the name of the configuration
        scope:
          dataType: string
          description: scope(zone/cluster/pool/account) of the parameter that needs
            to be updated
        value:
          dataType: string
          description: the value of the configuration
    user_types:
    - root
  listCounters:
    description: List the counters
    isAsync: 'false'
    name: listCounters
    request:
      parms:
        id:
          dataType: uuid
          description: ID of the Counter.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: Name of the counter.
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        source:
          dataType: string
          description: Source of the counter.
          required: 'false'
    response:
      parms:
        id:
          dataType: string
          description: the id of the Counter
        name:
          dataType: string
          description: Name of the counter.
        source:
          dataType: string
          description: Source of the counter.
        value:
          dataType: string
          description: Value in case of snmp or other specific counters.
        zoneid:
          dataType: string
          description: zone id of counter
    user_types:
    - domain
    - root
    - user
  listDedicatedClusters:
    description: Lists dedicated clusters.
    isAsync: 'false'
    name: listDedicatedClusters
    request:
      parms:
        account:
          dataType: string
          description: the name of the account associated with the cluster. Must be
            used with domainId.
          required: 'false'
        affinitygroupid:
          dataType: uuid
          description: list dedicated clusters by affinity group
          required: 'false'
        clusterid:
          dataType: uuid
          description: the ID of the cluster
          required: 'false'
        domainid:
          dataType: uuid
          description: the ID of the domain associated with the cluster
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        accountid:
          dataType: string
          description: the Account ID of the cluster
        affinitygroupid:
          dataType: string
          description: the Dedication Affinity Group ID of the cluster
        clusterid:
          dataType: string
          description: the ID of the cluster
        clustername:
          dataType: string
          description: the name of the cluster
        domainid:
          dataType: string
          description: the domain ID of the cluster
        id:
          dataType: string
          description: the ID of the dedicated resource
    user_types:
    - root
  listDedicatedGuestVlanRanges:
    description: Lists dedicated guest vlan ranges
    isAsync: 'false'
    name: listDedicatedGuestVlanRanges
    request:
      parms:
        account:
          dataType: string
          description: the account with which the guest VLAN range is associated.
            Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: the domain ID with which the guest VLAN range is associated.  If
            used with the account parameter, returns all guest VLAN ranges for that
            account in the specified domain.
          required: 'false'
        guestvlanrange:
          dataType: string
          description: the dedicated guest vlan range
          required: 'false'
        id:
          dataType: uuid
          description: list dedicated guest vlan ranges by id
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: physical network id of the guest VLAN range
          required: 'false'
        projectid:
          dataType: uuid
          description: project who will own the guest VLAN range
          required: 'false'
        zoneid:
          dataType: uuid
          description: zone of the guest VLAN range
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the guest VLAN range
        domain:
          dataType: string
          description: the domain name of the guest VLAN range
        domainid:
          dataType: string
          description: the domain ID of the guest VLAN range
        guestvlanrange:
          dataType: string
          description: the guest VLAN range
        id:
          dataType: string
          description: the ID of the guest VLAN range
        physicalnetworkid:
          dataType: long
          description: the physical network of the guest vlan range
        project:
          dataType: string
          description: the project name of the guest vlan range
        projectid:
          dataType: string
          description: the project id of the guest vlan range
        zoneid:
          dataType: long
          description: the zone of the guest vlan range
    user_types:
    - root
  listDedicatedHosts:
    description: Lists dedicated hosts.
    isAsync: 'false'
    name: listDedicatedHosts
    request:
      parms:
        account:
          dataType: string
          description: the name of the account associated with the host. Must be used
            with domainId.
          required: 'false'
        affinitygroupid:
          dataType: uuid
          description: list dedicated hosts by affinity group
          required: 'false'
        domainid:
          dataType: uuid
          description: the ID of the domain associated with the host
          required: 'false'
        hostid:
          dataType: uuid
          description: the ID of the host
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        accountid:
          dataType: string
          description: the Account ID of the host
        affinitygroupid:
          dataType: string
          description: the Dedication Affinity Group ID of the host
        domainid:
          dataType: string
          description: the domain ID of the host
        hostid:
          dataType: string
          description: the ID of the host
        hostname:
          dataType: string
          description: the name of the host
        id:
          dataType: string
          description: the ID of the dedicated resource
    user_types:
    - root
  listDedicatedPods:
    description: Lists dedicated pods.
    isAsync: 'false'
    name: listDedicatedPods
    request:
      parms:
        account:
          dataType: string
          description: the name of the account associated with the pod. Must be used
            with domainId.
          required: 'false'
        affinitygroupid:
          dataType: uuid
          description: list dedicated pods by affinity group
          required: 'false'
        domainid:
          dataType: uuid
          description: the ID of the domain associated with the pod
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        podid:
          dataType: uuid
          description: the ID of the pod
          required: 'false'
    response:
      parms:
        accountid:
          dataType: string
          description: the Account Id to which the Pod is dedicated
        affinitygroupid:
          dataType: string
          description: the Dedication Affinity Group ID of the pod
        domainid:
          dataType: string
          description: the domain ID to which the Pod is dedicated
        id:
          dataType: string
          description: the ID of the dedicated resource
        podid:
          dataType: string
          description: the ID of the Pod
        podname:
          dataType: string
          description: the Name of the Pod
    user_types:
    - root
  listDedicatedZones:
    description: List dedicated zones.
    isAsync: 'false'
    name: listDedicatedZones
    request:
      parms:
        account:
          dataType: string
          description: the name of the account associated with the zone. Must be used
            with domainId.
          required: 'false'
        affinitygroupid:
          dataType: uuid
          description: list dedicated zones by affinity group
          required: 'false'
        domainid:
          dataType: uuid
          description: the ID of the domain associated with the zone
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        zoneid:
          dataType: uuid
          description: the ID of the Zone
          required: 'false'
    response:
      parms:
        accountid:
          dataType: string
          description: the Account Id to which the Zone is dedicated
        affinitygroupid:
          dataType: string
          description: the Dedication Affinity Group ID of the zone
        domainid:
          dataType: string
          description: the domain ID to which the Zone is dedicated
        id:
          dataType: string
          description: the ID of the dedicated resource
        zoneid:
          dataType: string
          description: the ID of the Zone
        zonename:
          dataType: string
          description: the Name of the Zone
    user_types:
    - root
  listDeploymentPlanners:
    description: Lists all DeploymentPlanners available.
    isAsync: 'false'
    name: listDeploymentPlanners
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        dataType: string
        description: Deployment Planner name
        name: name
    user_types:
    - root
  listDiskOfferings:
    description: Lists all available disk offerings.
    isAsync: 'false'
    name: listDiskOfferings
    request:
      parms:
        domainid:
          dataType: uuid
          description: the ID of the domain of the disk offering.
          required: 'false'
        id:
          dataType: uuid
          description: ID of the disk offering
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: name of the disk offering
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        cacheMode:
          dataType: string
          description: the cache mode to use for this disk offering. none, writeback
            or writethrough
          sinceVersion: '4.4'
        created:
          dataType: date
          description: the date this disk offering was created
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the disk offering
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the disk offering
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the disk offering
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the disk offering
        disksize:
          dataType: long
          description: the size of the disk offering in GB
        displayoffering:
          dataType: boolean
          description: whether to display the offering to the end user or not.
        displaytext:
          dataType: string
          description: an alternate display text of the disk offering.
        domain:
          dataType: string
          description: the domain name this disk offering belongs to. Ignore this
            information as it is not currently applicable.
        domainid:
          dataType: string
          description: the domain ID this disk offering belongs to. Ignore this information
            as it is not currently applicable.
        hypervisorsnapshotreserve:
          dataType: integer
          description: Hypervisor snapshot reserve space as a percent of a volume
            (for managed storage using Xen or VMware)
          sinceVersion: '4.4'
        id:
          dataType: string
          description: unique ID of the disk offering
        iscustomized:
          dataType: boolean
          description: true if disk offering uses custom size, false otherwise
        iscustomizediops:
          dataType: boolean
          description: true if disk offering uses custom iops, false otherwise
        maxiops:
          dataType: long
          description: the max iops of the disk offering
        miniops:
          dataType: long
          description: the min iops of the disk offering
        name:
          dataType: string
          description: the name of the disk offering
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes. Valid values are
            thin, sparse, fat.
          sinceVersion: 4.4.0
        storagetype:
          dataType: string
          description: the storage type for this disk offering
        tags:
          dataType: string
          description: the tags for the disk offering
    user_types:
    - domain
    - root
    - user
  listDomainChildren:
    description: Lists all children domains belonging to a specified domain
    isAsync: 'false'
    name: listDomainChildren
    request:
      parms:
        id:
          dataType: uuid
          description: list children domain by parent domain ID.
          required: 'false'
        isrecursive:
          dataType: boolean
          description: to return the entire tree, use the value "true". To return
            the first level children, use the value "false".
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: list children domains by name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        haschild:
          dataType: boolean
          description: whether the domain has one or more sub-domains
        id:
          dataType: string
          description: the ID of the domain
        level:
          dataType: integer
          description: the level of the domain
        name:
          dataType: string
          description: the name of the domain
        networkdomain:
          dataType: string
          description: the network domain
        parentdomainid:
          dataType: string
          description: the domain ID of the parent domain
        parentdomainname:
          dataType: string
          description: the domain name of the parent domain
        path:
          dataType: string
          description: the path of the domain
    user_types:
    - domain
    - root
  listDomains:
    description: Lists domains and provides detailed information for listed domains
    isAsync: 'false'
    name: listDomains
    request:
      parms:
        id:
          dataType: uuid
          description: List domain by domain ID.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        level:
          dataType: integer
          description: List domains by domain level.
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: List domain by domain name.
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        haschild:
          dataType: boolean
          description: whether the domain has one or more sub-domains
        id:
          dataType: string
          description: the ID of the domain
        level:
          dataType: integer
          description: the level of the domain
        name:
          dataType: string
          description: the name of the domain
        networkdomain:
          dataType: string
          description: the network domain
        parentdomainid:
          dataType: string
          description: the domain ID of the parent domain
        parentdomainname:
          dataType: string
          description: the domain name of the parent domain
        path:
          dataType: string
          description: the path of the domain
    user_types:
    - domain
    - root
  listEgressFirewallRules:
    description: Lists all egress firewall rules for network id.
    isAsync: 'false'
    name: listEgressFirewallRules
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: Lists rule with the specified ID.
          required: 'false'
        ipaddressid:
          dataType: uuid
          description: the id of IP address of the firwall services
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        networkid:
          dataType: uuid
          description: 'the id network network for the egress firwall services OR
            the id network network for the egress firwall services -- NOTE: For whatever
            reason listEgressFirewallRules -> request -> networkid is duplicated in
            the xml and XMLin is overwriting the entry with the last one encountered.
            Since they''re in different freaking order from the commands.xml and the
            individual doc files, we''ll just merge the two.'
          required: 'false'
          sinceVersion: ~
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
    response:
      parms:
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        endport:
          dataType: string
          description: the ending port of firewall rule's port range
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
        id:
          dataType: string
          description: the ID of the firewall rule
        ipaddress:
          dataType: string
          description: the public ip address for the firewall rule
        ipaddressid:
          dataType: string
          description: the public ip address id for the firewall rule
        networkid:
          dataType: string
          description: the network id of the firewall rule
        protocol:
          dataType: string
          description: the protocol of the firewall rule
        startport:
          dataType: string
          description: the starting port of firewall rule's port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    user_types:
    - domain
    - root
    - user
  listEventTypes:
    description: List Event Types
    isAsync: 'false'
    name: listEventTypes
    request: {}
    response:
      parms:
        dataType: string
        description: Event Type
        name: name
    user_types:
    - domain
    - root
    - user
  listEvents:
    description: A command to list events.
    isAsync: 'false'
    name: listEvents
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        duration:
          dataType: integer
          description: the duration of the event
          required: 'false'
        enddate:
          dataType: date
          description: the end date range of the list you want to retrieve (use format
            "yyyy-MM-dd" or the new format "yyyy-MM-dd HH:mm:ss")
          required: 'false'
        entrytime:
          dataType: integer
          description: the time the event was entered
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the event
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        level:
          dataType: string
          description: the event level (INFO, WARN, ERROR)
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        startdate:
          dataType: date
          description: the start date range of the list you want to retrieve (use
            format "yyyy-MM-dd" or the new format "yyyy-MM-dd HH:mm:ss")
          required: 'false'
        type:
          dataType: string
          description: the event type (see event types)
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name for the account that owns the object being
            acted on in the event (e.g. the owner of the virtual machine, ip address,
            or security group)
        created:
          dataType: date
          description: the date the event was created
        description:
          dataType: string
          description: a brief description of the event
        domain:
          dataType: string
          description: the name of the account's domain
        domainid:
          dataType: string
          description: the id of the account's domain
        id:
          dataType: string
          description: the ID of the event
        level:
          dataType: string
          description: the event level (INFO, WARN, ERROR)
        parentid:
          dataType: string
          description: whether the event is parented
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        state:
          dataType: state
          description: the state of the event
        type:
          dataType: string
          description: the type of the event (see event types)
        username:
          dataType: string
          description: the name of the user who performed the action (can be different
            from the account if an admin is performing an action for a user, e.g.
            starting/stopping a user's virtual machine)
    user_types:
    - domain
    - root
    - user
  listFirewallRules:
    description: Lists all firewall rules for an IP address.
    isAsync: 'false'
    name: listFirewallRules
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: Lists rule with the specified ID.
          required: 'false'
        ipaddressid:
          dataType: uuid
          description: the id of IP address of the firwall services
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        networkid:
          dataType: uuid
          description: list firewall rules for ceratin network
          required: 'false'
          sinceVersion: '4.3'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
    response:
      parms:
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        endport:
          dataType: string
          description: the ending port of firewall rule's port range
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
        id:
          dataType: string
          description: the ID of the firewall rule
        ipaddress:
          dataType: string
          description: the public ip address for the firewall rule
        ipaddressid:
          dataType: string
          description: the public ip address id for the firewall rule
        networkid:
          dataType: string
          description: the network id of the firewall rule
        protocol:
          dataType: string
          description: the protocol of the firewall rule
        startport:
          dataType: string
          description: the starting port of firewall rule's port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    user_types:
    - domain
    - root
    - user
  listGlobalLoadBalancerRules:
    description: Lists load balancer rules.
    isAsync: 'false'
    name: listGlobalLoadBalancerRules
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the global load balancer rule
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        regionid:
          dataType: integer
          description: region ID
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
    response:
      parms:
        account:
          dataType: string
          description: the account of the load balancer rule
        description:
          dataType: string
          description: the description of the global load balancer rule
        domain:
          dataType: string
          description: the domain of the load balancer rule
        domainid:
          dataType: string
          description: the domain ID of the load balancer rule
        gslbdomainname:
          dataType: string
          description: DNS domain name given for the global load balancer
        gslblbmethod:
          dataType: string
          description: Load balancing method used for the global load balancer
        gslbservicetype:
          dataType: string
          description: GSLB service type
        gslbstickysessionmethodname:
          dataType: string
          description: session persistence method used for the global load balancer
        id:
          dataType: string
          description: global load balancer rule ID
        loadbalancerrule:
          dataType: list
          description: List of load balancer rules that are part of GSLB rule
          parms:
            account:
              dataType: string
              description: the account of the load balancer rule
            algorithm:
              dataType: string
              description: the load balancer algorithm (source, roundrobin, leastconn)
            cidrlist:
              dataType: string
              description: the cidr list to forward traffic from
            description:
              dataType: string
              description: the description of the load balancer
            domain:
              dataType: string
              description: the domain of the load balancer rule
            domainid:
              dataType: string
              description: the domain ID of the load balancer rule
            fordisplay:
              dataType: boolean
              description: is rule for display to the regular user
              sinceVersion: '4.4'
            id:
              dataType: string
              description: the load balancer rule ID
            name:
              dataType: string
              description: the name of the load balancer
            networkid:
              dataType: string
              description: the id of the guest network the lb rule belongs to
            privateport:
              dataType: string
              description: the private port
            project:
              dataType: string
              description: the project name of the load balancer
            projectid:
              dataType: string
              description: the project id of the load balancer
            protocol:
              dataType: string
              description: the protocol of the loadbalanacer rule
            publicip:
              dataType: string
              description: the public ip address
            publicipid:
              dataType: string
              description: the public ip address id
            publicport:
              dataType: string
              description: the public port
            state:
              dataType: string
              description: the state of the rule
            tags:
              dataType: list
              description: the list of resource tags associated with load balancer
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
            zoneid:
              dataType: string
              description: the id of the zone the rule belongs to
        name:
          dataType: string
          description: name of the global load balancer rule
        project:
          dataType: string
          description: the project name of the load balancer
        projectid:
          dataType: string
          description: the project id of the load balancer
        regionid:
          dataType: integer
          description: Region Id in which global load balancer is created
    user_types:
    - domain
    - root
    - user
  listGuestOsMapping:
    description: Lists all available OS mappings for given hypervisor
    isAsync: 'false'
    name: listGuestOsMapping
    request:
      parms:
        hypervisor:
          dataType: string
          description: list Guest OS mapping by hypervisor
          required: 'false'
        hypervisorversion:
          dataType: string
          description: list Guest OS mapping by hypervisor version. Must be used with
            hypervisor parameter
          required: 'false'
        id:
          dataType: uuid
          description: list mapping by its UUID
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        ostypeid:
          dataType: uuid
          description: list mapping by Guest OS Type UUID
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        hypervisor:
          dataType: string
          description: the hypervisor
        hypervisorversion:
          dataType: string
          description: version of the hypervisor for mapping
        id:
          dataType: string
          description: the ID of the Guest OS mapping
        isuserdefined:
          dataType: string
          description: is the mapping user defined
        osdisplayname:
          dataType: string
          description: standard display name for the Guest OS
        osnameforhypervisor:
          dataType: string
          description: hypervisor specific name for the Guest OS
        ostypeid:
          dataType: string
          description: the ID of the Guest OS type
    sinceVersion: 4.4.0
    user_types:
    - root
  listHostTags:
    description: Lists host tags
    isAsync: 'false'
    name: listHostTags
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        hostid:
          dataType: long
          description: the host ID of the host tag
        id:
          dataType: string
          description: the ID of the host tag
        name:
          dataType: string
          description: the name of the host tag
    user_types:
    - domain
    - root
  listHosts:
    description: Lists hosts.
    isAsync: 'false'
    name: listHosts
    request:
      parms:
        clusterid:
          dataType: uuid
          description: lists hosts existing in particular cluster
          required: 'false'
        details:
          dataType: list
          description: comma separated list of host details requested, value can be
            a list of [ min, all, capacity, events, stats]
          required: 'false'
          type: list
        hahost:
          dataType: boolean
          description: if true, list only hosts dedicated to HA
          required: 'false'
        hypervisor:
          dataType: string
          description: 'hypervisor type of host: XenServer,KVM,VMware,Hyperv,BareMetal,Simulator'
          required: 'false'
        id:
          dataType: uuid
          description: the id of the host
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: the name of the host
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        podid:
          dataType: uuid
          description: the Pod ID for the host
          required: 'false'
        resourcestate:
          dataType: string
          description: list hosts by resource state. Resource state represents current
            state determined by admin of host, valule can be one of [Enabled, Disabled,
            Unmanaged, PrepareForMaintenance, ErrorInMaintenance, Maintenance, Error]
          required: 'false'
        state:
          dataType: string
          description: the state of the host
          required: 'false'
        type:
          dataType: string
          description: the host type
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: lists hosts in the same cluster as this VM and flag hosts with
            enough CPU/RAm to host this VM
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID for the host
          required: 'false'
    response:
      parms:
        averageload:
          dataType: long
          description: the cpu average load on the host
        capabilities:
          dataType: string
          description: capabilities of the host
        clusterid:
          dataType: string
          description: the cluster ID of the host
        clustername:
          dataType: string
          description: the cluster name of the host
        clustertype:
          dataType: string
          description: the cluster type of the cluster that host belongs to
        cpuallocated:
          dataType: string
          description: the amount of the host's CPU currently allocated
        cpunumber:
          dataType: integer
          description: the CPU number of the host
        cpusockets:
          dataType: integer
          description: the number of CPU sockets on the host
        cpuspeed:
          dataType: long
          description: the CPU speed of the host
        cpuused:
          dataType: string
          description: the amount of the host's CPU currently used
        cpuwithoverprovisioning:
          dataType: string
          description: 'the amount of the host''s CPU after applying the cpu.overprovisioning.factor '
        created:
          dataType: date
          description: the date and time the host was created
        details:
          dataType: map
          description: Host details in key/value pairs.
          sinceVersion: '4.5'
        disconnected:
          dataType: date
          description: true if the host is disconnected. False otherwise.
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the host
        events:
          dataType: string
          description: events available for the host
        gpugroup:
          dataType: list
          description: GPU cards present in the host
          parms:
            gpugroupname:
              dataType: string
              description: GPU cards present in the host
            vgpu:
              dataType: list
              description: the list of enabled vGPUs
              parms:
                maxcapacity:
                  dataType: long
                  description: Maximum vgpu can be created with this vgpu type on
                    the given gpu group
                maxheads:
                  dataType: long
                  description: Maximum displays per user
                maxresolutionx:
                  dataType: long
                  description: Maximum X resolution per display
                maxresolutiony:
                  dataType: long
                  description: Maximum Y resolution per display
                maxvgpuperpgpu:
                  dataType: long
                  description: Maximum no. of vgpu per gpu card (pgpu)
                remainingcapacity:
                  dataType: long
                  description: Remaining capacity in terms of no. of more VMs that
                    can be deployped with this vGPU type
                vgputype:
                  dataType: string
                  description: Model Name of vGPU
                videoram:
                  dataType: long
                  description: Video RAM for this vGPU type
          sinceVersion: '4.4'
        hahost:
          dataType: boolean
          description: true if the host is Ha host (dedicated to vms started by HA
            process; false otherwise
        hasenoughcapacity:
          dataType: boolean
          description: true if this host has enough CPU and RAM capacity to migrate
            a VM to it, false otherwise
        hosttags:
          dataType: string
          description: comma-separated list of tags for the host
        hypervisor:
          dataType: hypervisortype
          description: the host hypervisor
        hypervisorversion:
          dataType: string
          description: the hypervisor version
        id:
          dataType: string
          description: the ID of the host
        ipaddress:
          dataType: string
          description: the IP address of the host
        islocalstorageactive:
          dataType: boolean
          description: true if local storage is active, false otherwise
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        lastpinged:
          dataType: date
          description: the date and time the host was last pinged
        managementserverid:
          dataType: long
          description: the management server ID of the host
        memoryallocated:
          dataType: long
          description: the amount of the host's memory currently allocated
        memorytotal:
          dataType: long
          description: the memory total of the host
        memoryused:
          dataType: long
          description: the amount of the host's memory currently used
        name:
          dataType: string
          description: the name of the host
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the host
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        oscategoryid:
          dataType: string
          description: the OS category ID of the host
        oscategoryname:
          dataType: string
          description: the OS category name of the host
        podid:
          dataType: string
          description: the Pod ID of the host
        podname:
          dataType: string
          description: the Pod name of the host
        removed:
          dataType: date
          description: the date and time the host was removed
        resourcestate:
          dataType: string
          description: the resource state of the host
        state:
          dataType: status
          description: the state of the host
        suitableformigration:
          dataType: boolean
          description: true if this host is suitable(has enough capacity and satisfies
            all conditions like hosttags, max guests vm limit etc) to migrate a VM
            to it , false otherwise
        type:
          dataType: type
          description: the host type
        version:
          dataType: string
          description: the host version
        zoneid:
          dataType: string
          description: the Zone ID of the host
        zonename:
          dataType: string
          description: the Zone name of the host
    user_types:
    - root
  listHypervisorCapabilities:
    description: Lists all hypervisor capabilities.
    isAsync: 'false'
    name: listHypervisorCapabilities
    request:
      parms:
        hypervisor:
          dataType: string
          description: the hypervisor for which to restrict the search
          required: 'false'
        id:
          dataType: uuid
          description: ID of the hypervisor capability
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        hypervisor:
          dataType: hypervisortype
          description: the hypervisor type
        hypervisorversion:
          dataType: string
          description: the hypervisor version
        id:
          dataType: string
          description: the ID of the hypervisor capabilities row
        maxdatavolumeslimit:
          dataType: integer
          description: the maximum number of Data Volumes that can be attached for
            this hypervisor
        maxguestslimit:
          dataType: long
          description: the maximum number of guest vms recommended for this hypervisor
        maxhostspercluster:
          dataType: integer
          description: the maximum number of Hosts per cluster for this hypervisor
        securitygroupenabled:
          dataType: boolean
          description: true if security group is supported
        storagemotionenabled:
          dataType: boolean
          description: true if storage motion is supported
    sinceVersion: 3.0.0
    user_types:
    - root
  listHypervisors:
    description: List hypervisors
    isAsync: 'false'
    name: listHypervisors
    request:
      parms:
        dataType: uuid
        description: the zone id for listing hypervisors.
        name: zoneid
        required: 'false'
    response:
      parms:
        dataType: string
        description: Hypervisor name
        name: name
    user_types:
    - domain
    - root
    - user
  listImageStores:
    description: Lists image stores.
    isAsync: 'false'
    name: listImageStores
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the storage pool
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: the name of the image store
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        protocol:
          dataType: string
          description: the image store protocol
          required: 'false'
        provider:
          dataType: string
          description: the image store provider
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID for the image store
          required: 'false'
    response:
      parms:
        details:
          dataType: set
          description: the details of the image store
        id:
          dataType: string
          description: the ID of the image store
        name:
          dataType: string
          description: the name of the image store
        protocol:
          dataType: string
          description: the protocol of the image store
        providername:
          dataType: string
          description: the provider name of the image store
        scope:
          dataType: scopetype
          description: the scope of the image store
        url:
          dataType: string
          description: the url of the image store
        zoneid:
          dataType: string
          description: the Zone ID of the image store
        zonename:
          dataType: string
          description: the Zone name of the image store
    sinceVersion: 4.2.0
    user_types:
    - root
  listInstanceGroups:
    description: Lists vm groups
    isAsync: 'false'
    name: listInstanceGroups
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: list instance groups by ID
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: list instance groups by name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the instance group
        created:
          dataType: date
          description: time and date the instance group was created
        domain:
          dataType: string
          description: the domain name of the instance group
        domainid:
          dataType: string
          description: the domain ID of the instance group
        id:
          dataType: string
          description: the id of the instance group
        name:
          dataType: string
          description: the name of the instance group
        project:
          dataType: string
          description: the project name of the group
        projectid:
          dataType: string
          description: the project id of the group
    user_types:
    - domain
    - root
    - user
  listInternalLoadBalancerElements:
    description: Lists all available Internal Load Balancer elements.
    isAsync: 'false'
    name: listInternalLoadBalancerElements
    request:
      parms:
        enabled:
          dataType: boolean
          description: list internal load balancer elements by enabled state
          required: 'false'
        id:
          dataType: uuid
          description: list internal load balancer elements by id
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        nspid:
          dataType: uuid
          description: list internal load balancer elements by network service provider
            id
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        enabled:
          dataType: boolean
          description: Enabled/Disabled the element
        id:
          dataType: string
          description: the id of the internal load balancer element
        nspid:
          dataType: string
          description: the physical network service provider id of the element
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
  listInternalLoadBalancerVMs:
    description: List internal LB VMs.
    isAsync: 'false'
    name: listInternalLoadBalancerVMs
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        forvpc:
          dataType: boolean
          description: if true is passed for this parameter, list only VPC Internal
            LB VMs
          required: 'false'
        hostid:
          dataType: uuid
          description: the host ID of the Internal LB VM
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the Internal LB VM
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: the name of the Internal LB VM
          required: 'false'
        networkid:
          dataType: uuid
          description: list by network id
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        podid:
          dataType: uuid
          description: the Pod ID of the Internal LB VM
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        state:
          dataType: string
          description: the state of the Internal LB VM
          required: 'false'
        vpcid:
          dataType: uuid
          description: List Internal LB VMs by VPC
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID of the Internal LB VM
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the router
        created:
          dataType: date
          description: the date and time the router was created
        dns1:
          dataType: string
          description: the first DNS for the router
        dns2:
          dataType: string
          description: the second DNS for the router
        domain:
          dataType: string
          description: the domain associated with the router
        domainid:
          dataType: string
          description: the domain ID associated with the router
        gateway:
          dataType: string
          description: the gateway for the router
        guestipaddress:
          dataType: string
          description: the guest IP address for the router
        guestmacaddress:
          dataType: string
          description: the guest MAC address for the router
        guestnetmask:
          dataType: string
          description: the guest netmask for the router
        guestnetworkid:
          dataType: string
          description: the ID of the corresponding guest network
        hostid:
          dataType: string
          description: the host ID for the router
        hostname:
          dataType: string
          description: the hostname for the router
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the id of the router
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the router
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the router
        isredundantrouter:
          dataType: boolean
          description: if this router is an redundant virtual router
        linklocalip:
          dataType: string
          description: the link local IP address for the router
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the router
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the router
        linklocalnetworkid:
          dataType: string
          description: the ID of the corresponding link local network
        name:
          dataType: string
          description: the name of the router
        networkdomain:
          dataType: string
          description: the network domain for the router
        nic:
          dataType: set
          description: the list of nics associated with the router
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
          sinceVersion: '4.0'
        podid:
          dataType: string
          description: the Pod ID for the router
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        publicip:
          dataType: string
          description: the public IP address for the router
        publicmacaddress:
          dataType: string
          description: the public MAC address for the router
        publicnetmask:
          dataType: string
          description: the public netmask for the router
        publicnetworkid:
          dataType: string
          description: the ID of the corresponding public network
        redundantstate:
          dataType: string
          description: the state of redundant virtual router
        requiresupgrade:
          dataType: boolean
          description: true if the router template requires upgrader
        role:
          dataType: string
          description: role of the domain router
        scriptsversion:
          dataType: string
          description: the version of scripts
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        state:
          dataType: state
          description: the state of the router
        templateid:
          dataType: string
          description: the template ID for the router
        version:
          dataType: string
          description: the version of template
        vpcid:
          dataType: string
          description: VPC the router belongs to
        zoneid:
          dataType: string
          description: the Zone ID for the router
        zonename:
          dataType: string
          description: the Zone name for the router
    user_types:
    - root
  listIpForwardingRules:
    description: List the ip forwarding rules
    isAsync: 'false'
    name: listIpForwardingRules
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: Lists rule with the specified ID.
          required: 'false'
        ipaddressid:
          dataType: uuid
          description: list the rule belonging to this public ip address
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: Lists all rules applied to the specified Vm.
          required: 'false'
    response:
      parms:
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        fordisplay:
          dataType: boolean
          description: is firewall for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the ID of the port forwarding rule
        ipaddress:
          dataType: string
          description: the public ip address for the port forwarding rule
        ipaddressid:
          dataType: string
          description: the public ip address id for the port forwarding rule
        networkid:
          dataType: string
          description: the id of the guest network the port forwarding rule belongs
            to
        privateendport:
          dataType: string
          description: the ending port of port forwarding rule's private port range
        privateport:
          dataType: string
          description: the starting port of port forwarding rule's private port range
        protocol:
          dataType: string
          description: the protocol of the port forwarding rule
        publicendport:
          dataType: string
          description: the ending port of port forwarding rule's private port range
        publicport:
          dataType: string
          description: the starting port of port forwarding rule's public port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        virtualmachinedisplayname:
          dataType: string
          description: the VM display name for the port forwarding rule
        virtualmachineid:
          dataType: string
          description: the VM ID for the port forwarding rule
        virtualmachinename:
          dataType: string
          description: the VM name for the port forwarding rule
        vmguestip:
          dataType: string
          description: the vm ip address for the port forwarding rule
    user_types:
    - domain
    - root
    - user
  listIsoPermissions:
    description: List iso visibility and all accounts that have permissions to view
      this iso.
    isAsync: 'false'
    name: listIsoPermissions
    request:
      parms:
        dataType: uuid
        description: the template ID
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: list
          description: the list of accounts the template is available for
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        id:
          dataType: string
          description: the template ID
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        projectids:
          dataType: list
          description: the list of projects the template is available for
    user_types:
    - domain
    - root
    - user
  listIsos:
    description: Lists all available ISO files.
    isAsync: 'false'
    name: listIsos
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        bootable:
          dataType: boolean
          description: true if the ISO is bootable, false otherwise
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        hypervisor:
          dataType: string
          description: the hypervisor for which to restrict the search
          required: 'false'
        id:
          dataType: uuid
          description: list ISO by id
          required: 'false'
        isofilter:
          dataType: string
          description: 'possible values are "featured", "self", "selfexecutable","sharedexecutable","executable",
            and "community". * featured : templates that have been marked as featured
            and public. * self : templates that have been registered or created by
            the calling user. * selfexecutable : same as self, but only returns templates
            that can be used to deploy a new VM. * sharedexecutable : templates ready
            to be deployed that have been granted to the calling user by another user.
            * executable : templates that are owned by the calling user, or public
            templates, that can be used to deploy a VM. * community : templates that
            have been marked as public but not featured. * all : all templates (only
            usable by admins).'
          required: 'false'
        ispublic:
          dataType: boolean
          description: true if the ISO is publicly available to all users, false otherwise.
          required: 'false'
        isready:
          dataType: boolean
          description: true if this ISO is ready to be deployed
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: list all isos by name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        showremoved:
          dataType: boolean
          description: show removed ISOs as well
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        zoneid:
          dataType: uuid
          description: the ID of the zone
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name to which the template belongs
        accountid:
          dataType: string
          description: the account id to which the template belongs
        bootable:
          dataType: boolean
          description: true if the ISO is bootable, false otherwise
        checksum:
          dataType: string
          description: checksum of the template
        created:
          dataType: date
          description: the date this template was created
        crossZones:
          dataType: boolean
          description: true if the template is managed across all Zones, false otherwise
        details:
          dataType: map
          description: additional key/value details tied with template
        displaytext:
          dataType: string
          description: the template display text
        domain:
          dataType: string
          description: the name of the domain to which the template belongs
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        format:
          dataType: imageformat
          description: the format of the template.
        hostid:
          dataType: string
          description: the ID of the secondary storage host for the template
        hostname:
          dataType: string
          description: the name of the secondary storage host for the template
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the template ID
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
        isextractable:
          dataType: boolean
          description: true if the template is extractable, false otherwise
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        isready:
          dataType: boolean
          description: true if the template is ready to be deployed from, false otherwise.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the template name
        ostypeid:
          dataType: string
          description: the ID of the OS type for this template.
        ostypename:
          dataType: string
          description: the name of the OS type for this template.
        passwordenabled:
          dataType: boolean
          description: true if the reset password feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the template
        projectid:
          dataType: string
          description: the project id of the template
        removed:
          dataType: date
          description: the date this template was removed
        size:
          dataType: long
          description: the size of the template
        sourcetemplateid:
          dataType: string
          description: the template ID of the parent template if present
        sshkeyenabled:
          dataType: boolean
          description: true if template is sshkey enabled, false otherwise
        status:
          dataType: string
          description: the status of the template
        tags:
          dataType: set
          description: the list of resource tags associated with tempate
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatetag:
          dataType: string
          description: the tag of this template
        templatetype:
          dataType: string
          description: the type of the template
        zoneid:
          dataType: string
          description: the ID of the zone for this template
        zonename:
          dataType: string
          description: the name of the zone for this template
    user_types:
    - domain
    - root
    - user
  listLBHealthCheckPolicies:
    description: Lists load balancer HealthCheck policies.
    isAsync: 'false'
    name: listLBHealthCheckPolicies
    request:
      parms:
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the healthcheck policy
          required: 'false'
          sinceVersion: '4.4'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        lbruleid:
          dataType: uuid
          description: the ID of the load balancer rule
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the HealthCheck policy
        domain:
          dataType: string
          description: the domain of the HealthCheck policy
        domainid:
          dataType: string
          description: the domain ID of the HealthCheck policy
        healthcheckpolicy:
          dataType: list
          description: the list of healthcheckpolicies
          parms:
            description:
              dataType: string
              description: the description of the healthcheck policy
            fordisplay:
              dataType: boolean
              description: is policy for display to the regular user
              sinceVersion: '4.4'
            healthcheckinterval:
              dataType: int
              description: Amount of time between health checks
            healthcheckthresshold:
              dataType: int
              description: Number of consecutive health check success before declaring
                an instance healthy
            id:
              dataType: string
              description: the LB HealthCheck policy ID
            pingpath:
              dataType: string
              description: the pingpath  of the healthcheck policy
            responsetime:
              dataType: int
              description: Time to wait when receiving a response from the health
                check
            state:
              dataType: string
              description: the state of the policy
            unhealthcheckthresshold:
              dataType: int
              description: Number of consecutive health check failures before declaring
                an instance unhealthy.
        lbruleid:
          dataType: string
          description: the LB rule ID
        zoneid:
          dataType: string
          description: the id of the zone the HealthCheck policy belongs to
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
    - user
  listLBStickinessPolicies:
    description: Lists LBStickiness policies.
    isAsync: 'false'
    name: listLBStickinessPolicies
    request:
      parms:
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the load balancer stickiness policy
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        lbruleid:
          dataType: uuid
          description: the ID of the load balancer rule
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the Stickiness policy
        description:
          dataType: string
          description: the description of the Stickiness policy
        domain:
          dataType: string
          description: the domain of the Stickiness policy
        domainid:
          dataType: string
          description: the domain ID of the Stickiness policy
        lbruleid:
          dataType: string
          description: the LB rule ID
        name:
          dataType: string
          description: the name of the Stickiness policy
        state:
          dataType: string
          description: the state of the policy
        stickinesspolicy:
          dataType: list
          description: the list of stickinesspolicies
          parms:
            description:
              dataType: string
              description: the description of the Stickiness policy
            fordisplay:
              dataType: boolean
              description: is policy for display to the regular user
              sinceVersion: '4.4'
            id:
              dataType: string
              description: the LB Stickiness policy ID
            methodname:
              dataType: string
              description: the method name of the Stickiness policy
            name:
              dataType: string
              description: the name of the Stickiness policy
            params:
              dataType: map
              description: the params of the policy
            state:
              dataType: string
              description: the state of the policy
        zoneid:
          dataType: string
          description: the id of the zone the Stickiness policy belongs to
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  listLdapConfigurations:
    description: Lists all LDAP configurations
    isAsync: 'false'
    name: listLdapConfigurations
    request:
      parms:
        hostname:
          dataType: string
          description: Hostname
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        port:
          dataType: integer
          description: Port
          required: 'false'
    response:
      parms:
        hostname:
          dataType: string
          description: hostname
        port:
          dataType: int
          description: port
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
    - user
  listLdapUsers:
    description: Lists all LDAP Users
    isAsync: 'false'
    name: listLdapUsers
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listtype:
          dataType: string
          description: Determines whether all ldap users are returned or just non-cloudstack
            users
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        domain:
          dataType: string
          description: The user's domain
        email:
          dataType: string
          description: The user's email
        firstname:
          dataType: string
          description: The user's firstname
        lastname:
          dataType: string
          description: The user's lastname
        principal:
          dataType: string
          description: The user's principle
        username:
          dataType: string
          description: The user's username
    sinceVersion: 4.2.0
    user_types:
    - root
  listLoadBalancerRuleInstances:
    description: List all virtual machine instances that are assigned to a load balancer
      rule.
    isAsync: 'false'
    name: listLoadBalancerRuleInstances
    request:
      parms:
        applied:
          dataType: boolean
          description: true if listing all virtual machines currently applied to the
            load balancer rule; default is true
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the load balancer rule
          required: 'true'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        lbvmips:
          dataType: boolean
          description: true if lb rule vm ip information to be included; default is
            false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        lbvmipaddresses:
          dataType: list
          description: IP addresses of the vm set of lb rule
        loadbalancerruleinstance:
          dataType: uservmresponse
          description: the user vm set for lb rule
    user_types:
    - domain
    - root
    - user
  listLoadBalancerRules:
    description: Lists load balancer rules.
    isAsync: 'false'
    name: listLoadBalancerRules
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the load balancer rule
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: the name of the load balancer rule
          required: 'false'
        networkid:
          dataType: uuid
          description: list by network id the rule belongs to
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        publicipid:
          dataType: uuid
          description: 'the public IP address id of the load balancer rule '
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine of the load balancer rule
          required: 'false'
        zoneid:
          dataType: uuid
          description: the availability zone ID
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the load balancer rule
        algorithm:
          dataType: string
          description: the load balancer algorithm (source, roundrobin, leastconn)
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        description:
          dataType: string
          description: the description of the load balancer
        domain:
          dataType: string
          description: the domain of the load balancer rule
        domainid:
          dataType: string
          description: the domain ID of the load balancer rule
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the load balancer rule ID
        name:
          dataType: string
          description: the name of the load balancer
        networkid:
          dataType: string
          description: the id of the guest network the lb rule belongs to
        privateport:
          dataType: string
          description: the private port
        project:
          dataType: string
          description: the project name of the load balancer
        projectid:
          dataType: string
          description: the project id of the load balancer
        protocol:
          dataType: string
          description: the protocol of the loadbalanacer rule
        publicip:
          dataType: string
          description: the public ip address
        publicipid:
          dataType: string
          description: the public ip address id
        publicport:
          dataType: string
          description: the public port
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with load balancer
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        zoneid:
          dataType: string
          description: the id of the zone the rule belongs to
    user_types:
    - domain
    - root
    - user
  listLoadBalancers:
    description: Lists Load Balancers
    isAsync: 'false'
    name: listLoadBalancers
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the Load Balancer
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: the name of the Load Balancer
          required: 'false'
        networkid:
          dataType: uuid
          description: the network id of the Load Balancer
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        scheme:
          dataType: string
          description: the scheme of the Load Balancer. Supported value is Internal
            in the current release
          required: 'false'
        sourceipaddress:
          dataType: string
          description: the source ip address of the Load Balancer
          required: 'false'
        sourceipaddressnetworkid:
          dataType: uuid
          description: the network id of the source ip address
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
    response:
      parms:
        account:
          dataType: string
          description: the account of the Load Balancer
        algorithm:
          dataType: string
          description: the load balancer algorithm (source, roundrobin, leastconn)
        description:
          dataType: string
          description: the description of the Load Balancer
        domain:
          dataType: string
          description: the domain of the Load Balancer
        domainid:
          dataType: string
          description: the domain ID of the Load Balancer
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the Load Balancer ID
        loadbalancerinstance:
          dataType: list
          description: the list of instances associated with the Load Balancer
          parms:
            id:
              dataType: string
              description: the instance ID
            ipaddress:
              dataType: string
              description: the ip address of the instance
            name:
              dataType: string
              description: the name of the instance
            state:
              dataType: string
              description: the state of the instance
        loadbalancerrule:
          dataType: list
          description: the list of rules associated with the Load Balancer
          parms:
            instanceport:
              dataType: integer
              description: instance port of the load balancer rule
            sourceport:
              dataType: integer
              description: source port of the load balancer rule
            state:
              dataType: string
              description: the state of the load balancer rule
        name:
          dataType: string
          description: the name of the Load Balancer
        networkid:
          dataType: string
          description: Load Balancer network id
        project:
          dataType: string
          description: the project name of the Load Balancer
        projectid:
          dataType: string
          description: the project id of the Load Balancer
        sourceipaddress:
          dataType: string
          description: Load Balancer source ip
        sourceipaddressnetworkid:
          dataType: string
          description: Load Balancer source ip network id
        tags:
          dataType: list
          description: the list of resource tags associated with the Load Balancer
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
    - user
  listNetscalerLoadBalancerNetworks:
    description: lists network that are using a netscaler load balancer device
    isAsync: 'false'
    name: listNetscalerLoadBalancerNetworks
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        lbdeviceid:
          dataType: uuid
          description: netscaler load balancer device ID
          required: 'true'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the network
        aclid:
          dataType: string
          description: ACL Id associated with the VPC network
        acltype:
          dataType: string
          description: acl type - access type to the network
        broadcastdomaintype:
          dataType: string
          description: Broadcast domain type of the network
        broadcasturi:
          dataType: string
          description: broadcast uri of the network. This parameter is visible to
            ROOT admins only
        canusefordeploy:
          dataType: boolean
          description: list networks available for vm deployment
        cidr:
          dataType: string
          description: Cloudstack managed address space, all CloudStack managed VMs
            get IP address from CIDR
        displaynetwork:
          dataType: boolean
          description: an optional field, whether to the display the network to the
            end user or not.
        displaytext:
          dataType: string
          description: the displaytext of the network
        dns1:
          dataType: string
          description: the first DNS for the network
        dns2:
          dataType: string
          description: the second DNS for the network
        domain:
          dataType: string
          description: the domain name of the network owner
        domainid:
          dataType: string
          description: the domain id of the network owner
        gateway:
          dataType: string
          description: the network's gateway
        id:
          dataType: string
          description: the id of the network
        ip6cidr:
          dataType: string
          description: the cidr of IPv6 network
        ip6gateway:
          dataType: string
          description: the gateway of IPv6 network
        isdefault:
          dataType: boolean
          description: true if network is default, false otherwise
        ispersistent:
          dataType: boolean
          description: list networks that are persistent
        issystem:
          dataType: boolean
          description: true if network is system, false otherwise
        name:
          dataType: string
          description: the name of the network
        netmask:
          dataType: string
          description: the network's netmask
        networkcidr:
          dataType: string
          description: the network CIDR of the guest network configured with IP reservation.
            It is the summation of CIDR and RESERVED_IP_RANGE
        networkdomain:
          dataType: string
          description: the network domain
        networkofferingavailability:
          dataType: string
          description: availability of the network offering the network is created
            from
        networkofferingconservemode:
          dataType: boolean
          description: true if network offering is ip conserve mode enabled
        networkofferingdisplaytext:
          dataType: string
          description: display text of the network offering the network is created
            from
        networkofferingid:
          dataType: string
          description: network offering id the network is created from
        networkofferingname:
          dataType: string
          description: name of the network offering the network is created from
        physicalnetworkid:
          dataType: string
          description: the physical network id
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        related:
          dataType: string
          description: related to what other network configuration
        reservediprange:
          dataType: string
          description: the network's IP range not to be used by CloudStack guest VMs
            and can be used for non CloudStack purposes
        restartrequired:
          dataType: boolean
          description: true network requires restart
        service:
          dataType: list
          description: the list of services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        specifyipranges:
          dataType: boolean
          description: true if network supports specifying ip ranges, false otherwise
        state:
          dataType: string
          description: state of the network
        strechedl2subnet:
          dataType: boolean
          description: true if network can span multiple zones
          sinceVersion: '4.4'
        subdomainaccess:
          dataType: boolean
          description: true if users from subdomains can access the domain level network
        tags:
          dataType: list
          description: the list of resource tags associated with network
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        traffictype:
          dataType: string
          description: the traffic type of the network
        type:
          dataType: string
          description: the type of the network
        vlan:
          dataType: string
          description: The vlan of the network. This parameter is visible to ROOT
            admins only
        vpcid:
          dataType: string
          description: VPC the network belongs to
        zoneid:
          dataType: string
          description: zone id of the network
        zonename:
          dataType: string
          description: the name of the zone the network belongs to
        zonesnetworkspans:
          dataType: set
          description: If a network is enabled for 'streched l2 subnet' then represents
            zones on which network currently spans
          sinceVersion: '4.4'
    user_types:
    - root
  listNetscalerLoadBalancers:
    description: lists netscaler load balancer devices
    isAsync: 'false'
    name: listNetscalerLoadBalancers
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        lbdeviceid:
          dataType: uuid
          description: netscaler load balancer device ID
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'false'
    response:
      parms:
        gslbprovider:
          dataType: boolean
          description: true if NetScaler device is provisioned to be a GSLB service
            provider
        gslbproviderprivateip:
          dataType: string
          description: private IP of the NetScaler representing GSLB site
        gslbproviderpublicip:
          dataType: string
          description: public IP of the NetScaler representing GSLB site
        ipaddress:
          dataType: string
          description: the management IP address of the external load balancer
        isexclusivegslbprovider:
          dataType: boolean
          description: true if NetScaler device is provisioned exclusively to be a
            GSLB service provider
        lbdevicecapacity:
          dataType: long
          description: device capacity
        lbdevicededicated:
          dataType: boolean
          description: true if device is dedicated for an account
        lbdeviceid:
          dataType: string
          description: device id of the netscaler load balancer
        lbdevicename:
          dataType: string
          description: device name
        lbdevicestate:
          dataType: string
          description: device state
        physicalnetworkid:
          dataType: string
          description: the physical network to which this netscaler device belongs
            to
        podids:
          dataType: list
          description: Used when NetScaler device is provider of EIP service. This
            parameter represents the list of pod's, for which there exists a policy
            based route on datacenter L3 router to route pod's subnet IP to a NetScaler
            device.
        privateinterface:
          dataType: string
          description: the private interface of the load balancer
        provider:
          dataType: string
          description: name of the provider
        publicinterface:
          dataType: string
          description: the public interface of the load balancer
    user_types:
    - root
  listNetworkACLLists:
    description: Lists all network ACLs
    isAsync: 'false'
    name: listNetworkACLLists
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: Lists network ACL with the specified ID.
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: list network ACLs by specified name
          required: 'false'
        networkid:
          dataType: uuid
          description: list network ACLs by network Id
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        vpcid:
          dataType: uuid
          description: list network ACLs by Vpc Id
          required: 'false'
    response:
      parms:
        description:
          dataType: string
          description: Description of the ACL
        fordisplay:
          dataType: boolean
          description: is ACL for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the ID of the ACL
        name:
          dataType: string
          description: the Name of the ACL
        vpcid:
          dataType: string
          description: Id of the VPC this ACL is associated with
    user_types:
    - domain
    - root
    - user
  listNetworkACLs:
    description: Lists all network ACL items
    isAsync: 'false'
    name: listNetworkACLs
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        aclid:
          dataType: uuid
          description: list network ACL Items by ACL Id
          required: 'false'
        action:
          dataType: string
          description: list network ACL Items by Action
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: Lists network ACL Item with the specified ID
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        networkid:
          dataType: uuid
          description: list network ACL Items by network Id
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        protocol:
          dataType: string
          description: list network ACL Items by Protocol
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        traffictype:
          dataType: string
          description: list network ACL Items by traffic type - Ingress or Egress
          required: 'false'
    response:
      parms:
        aclid:
          dataType: string
          description: the ID of the ACL this item belongs to
        action:
          dataType: string
          description: Action of ACL Item. Allow/Deny
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        endport:
          dataType: string
          description: the ending port of ACL's port range
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
        id:
          dataType: string
          description: the ID of the ACL Item
        number:
          dataType: integer
          description: Number of the ACL Item
        protocol:
          dataType: string
          description: the protocol of the ACL
        startport:
          dataType: string
          description: the starting port of ACL's port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the network ACLs
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        traffictype:
          dataType: string
          description: the traffic type for the ACL
    user_types:
    - domain
    - root
    - user
  listNetworkDevice:
    description: List network devices
    isAsync: 'false'
    name: listNetworkDevice
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        networkdeviceparameterlist:
          dataType: map
          description: parameters for network device
          required: 'false'
          type: map
        networkdevicetype:
          dataType: string
          description: Network device type, now supports ExternalDhcp, PxeServer,
            NetscalerMPXLoadBalancer, NetscalerVPXLoadBalancer, NetscalerSDXLoadBalancer,
            F5BigIpLoadBalancer, JuniperSRXFirewall, PaloAltoFirewall
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        dataType: string
        description: the ID of the network device
        name: id
    user_types:
    - root
  listNetworkIsolationMethods:
    description: Lists supported methods of network isolation
    isAsync: 'false'
    name: listNetworkIsolationMethods
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        dataType: string
        description: Network isolation method name
        name: name
    sinceVersion: 4.2.0
    user_types:
    - root
  listNetworkOfferings:
    description: Lists all available network offerings.
    isAsync: 'false'
    name: listNetworkOfferings
    request:
      parms:
        availability:
          dataType: string
          description: the availability of network offering. Default value is Required
          required: 'false'
        displaytext:
          dataType: string
          description: list network offerings by display text
          required: 'false'
        forvpc:
          dataType: boolean
          description: the network offering can be used only for network creation
            inside the VPC
          required: 'false'
        guestiptype:
          dataType: string
          description: 'list network offerings by guest type: Shared or Isolated'
          required: 'false'
        id:
          dataType: uuid
          description: list network offerings by id
          required: 'false'
        isdefault:
          dataType: boolean
          description: true if need to list only default network offerings. Default
            value is false
          required: 'false'
        istagged:
          dataType: boolean
          description: true if offering has tags specified
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: list network offerings by name
          required: 'false'
        networkid:
          dataType: uuid
          description: the ID of the network. Pass this in if you want to see the
            available network offering that a network can be changed to.
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        sourcenatsupported:
          dataType: boolean
          description: true if need to list only netwok offerings where source nat
            is supported, false otherwise
          required: 'false'
        specifyipranges:
          dataType: boolean
          description: true if need to list only network offerings which support specifying
            ip ranges
          required: 'false'
        specifyvlan:
          dataType: boolean
          description: the tags for the network offering.
          required: 'false'
        state:
          dataType: string
          description: list network offerings by state
          required: 'false'
        supportedservices:
          dataType: list
          description: list network offerings supporting certain services
          required: 'false'
          type: list
        tags:
          dataType: string
          description: list network offerings by tags
          required: 'false'
        traffictype:
          dataType: string
          description: list by traffic type
          required: 'false'
        zoneid:
          dataType: uuid
          description: list netowrk offerings available for network creation in specific
            zone
          required: 'false'
    response:
      parms:
        availability:
          dataType: string
          description: availability of the network offering
        conservemode:
          dataType: boolean
          description: true if network offering is ip conserve mode enabled
        created:
          dataType: date
          description: the date this network offering was created
        details:
          dataType: map
          description: additional key/value details tied with network offering
          sinceVersion: 4.2.0
        displaytext:
          dataType: string
          description: an alternate display text of the network offering.
        egressdefaultpolicy:
          dataType: boolean
          description: true if guest network default egress policy is allow; false
            if default egress policy is deny
        forvpc:
          dataType: boolean
          description: true if network offering can be used by VPC networks only
        guestiptype:
          dataType: string
          description: guest type of the network offering, can be Shared or Isolated
        id:
          dataType: string
          description: the id of the network offering
        isdefault:
          dataType: boolean
          description: true if network offering is default, false otherwise
        ispersistent:
          dataType: boolean
          description: true if network offering supports persistent networks, false
            otherwise
        maxconnections:
          dataType: integer
          description: maximum number of concurrents connections to be handled by
            lb
        name:
          dataType: string
          description: the name of the network offering
        networkrate:
          dataType: integer
          description: data transfer rate in megabits per second allowed.
        service:
          dataType: list
          description: the list of supported services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        serviceofferingid:
          dataType: string
          description: the ID of the service offering used by virtual router provider
        specifyipranges:
          dataType: boolean
          description: true if network offering supports specifying ip ranges, false
            otherwise
        specifyvlan:
          dataType: boolean
          description: true if network offering supports vlans, false otherwise
        state:
          dataType: string
          description: state of the network offering. Can be Disabled/Enabled/Inactive
        supportsstrechedl2subnet:
          dataType: boolean
          description: true if network offering supports network that span multiple
            zones
          sinceVersion: '4.4'
        tags:
          dataType: string
          description: the tags for the network offering
        traffictype:
          dataType: string
          description: the traffic type for the network offering, supported types
            are Public, Management, Control, Guest, Vlan or Storage.
    user_types:
    - domain
    - root
    - user
  listNetworkServiceProviders:
    description: Lists network serviceproviders for a given physical network.
    isAsync: 'false'
    name: listNetworkServiceProviders
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: list providers by name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'false'
        state:
          dataType: string
          description: list providers by state
          required: 'false'
    response:
      parms:
        canenableindividualservice:
          dataType: boolean
          description: true if individual services can be enabled/disabled
        destinationphysicalnetworkid:
          dataType: string
          description: the destination physical network
        id:
          dataType: string
          description: uuid of the network provider
        name:
          dataType: string
          description: the provider name
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        servicelist:
          dataType: list
          description: services for this provider
        state:
          dataType: string
          description: state of the network provider
    sinceVersion: 3.0.0
    user_types:
    - root
  listNetworks:
    description: Lists all available networks.
    isAsync: 'false'
    name: listNetworks
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        acltype:
          dataType: string
          description: list networks by ACL (access control list) type. Supported
            values are Account and Domain
          required: 'false'
        canusefordeploy:
          dataType: boolean
          description: list networks available for vm deployment
          required: 'false'
        displaynetwork:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        forvpc:
          dataType: boolean
          description: the network belongs to vpc
          required: 'false'
        id:
          dataType: uuid
          description: list networks by id
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        issystem:
          dataType: boolean
          description: true if network is system, false otherwise
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: list networks by physical network id
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        restartrequired:
          dataType: boolean
          description: list networks by restartRequired
          required: 'false'
        specifyipranges:
          dataType: boolean
          description: true if need to list only networks which support specifying
            ip ranges
          required: 'false'
        supportedservices:
          dataType: list
          description: list networks supporting certain services
          required: 'false'
          type: list
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        traffictype:
          dataType: string
          description: type of the traffic
          required: 'false'
        type:
          dataType: string
          description: 'the type of the network. Supported values are: Isolated and
            Shared'
          required: 'false'
        vpcid:
          dataType: uuid
          description: List networks by VPC
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID of the network
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the network
        aclid:
          dataType: string
          description: ACL Id associated with the VPC network
        acltype:
          dataType: string
          description: acl type - access type to the network
        broadcastdomaintype:
          dataType: string
          description: Broadcast domain type of the network
        broadcasturi:
          dataType: string
          description: broadcast uri of the network. This parameter is visible to
            ROOT admins only
        canusefordeploy:
          dataType: boolean
          description: list networks available for vm deployment
        cidr:
          dataType: string
          description: Cloudstack managed address space, all CloudStack managed VMs
            get IP address from CIDR
        displaynetwork:
          dataType: boolean
          description: an optional field, whether to the display the network to the
            end user or not.
        displaytext:
          dataType: string
          description: the displaytext of the network
        dns1:
          dataType: string
          description: the first DNS for the network
        dns2:
          dataType: string
          description: the second DNS for the network
        domain:
          dataType: string
          description: the domain name of the network owner
        domainid:
          dataType: string
          description: the domain id of the network owner
        gateway:
          dataType: string
          description: the network's gateway
        id:
          dataType: string
          description: the id of the network
        ip6cidr:
          dataType: string
          description: the cidr of IPv6 network
        ip6gateway:
          dataType: string
          description: the gateway of IPv6 network
        isdefault:
          dataType: boolean
          description: true if network is default, false otherwise
        ispersistent:
          dataType: boolean
          description: list networks that are persistent
        issystem:
          dataType: boolean
          description: true if network is system, false otherwise
        name:
          dataType: string
          description: the name of the network
        netmask:
          dataType: string
          description: the network's netmask
        networkcidr:
          dataType: string
          description: the network CIDR of the guest network configured with IP reservation.
            It is the summation of CIDR and RESERVED_IP_RANGE
        networkdomain:
          dataType: string
          description: the network domain
        networkofferingavailability:
          dataType: string
          description: availability of the network offering the network is created
            from
        networkofferingconservemode:
          dataType: boolean
          description: true if network offering is ip conserve mode enabled
        networkofferingdisplaytext:
          dataType: string
          description: display text of the network offering the network is created
            from
        networkofferingid:
          dataType: string
          description: network offering id the network is created from
        networkofferingname:
          dataType: string
          description: name of the network offering the network is created from
        physicalnetworkid:
          dataType: string
          description: the physical network id
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        related:
          dataType: string
          description: related to what other network configuration
        reservediprange:
          dataType: string
          description: the network's IP range not to be used by CloudStack guest VMs
            and can be used for non CloudStack purposes
        restartrequired:
          dataType: boolean
          description: true network requires restart
        service:
          dataType: list
          description: the list of services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        specifyipranges:
          dataType: boolean
          description: true if network supports specifying ip ranges, false otherwise
        state:
          dataType: string
          description: state of the network
        strechedl2subnet:
          dataType: boolean
          description: true if network can span multiple zones
          sinceVersion: '4.4'
        subdomainaccess:
          dataType: boolean
          description: true if users from subdomains can access the domain level network
        tags:
          dataType: list
          description: the list of resource tags associated with network
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        traffictype:
          dataType: string
          description: the traffic type of the network
        type:
          dataType: string
          description: the type of the network
        vlan:
          dataType: string
          description: The vlan of the network. This parameter is visible to ROOT
            admins only
        vpcid:
          dataType: string
          description: VPC the network belongs to
        zoneid:
          dataType: string
          description: zone id of the network
        zonename:
          dataType: string
          description: the name of the zone the network belongs to
        zonesnetworkspans:
          dataType: set
          description: If a network is enabled for 'streched l2 subnet' then represents
            zones on which network currently spans
          sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  listNiciraNvpDeviceNetworks:
    description: lists network that are using a nicira nvp device
    isAsync: 'false'
    name: listNiciraNvpDeviceNetworks
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        nvpdeviceid:
          dataType: uuid
          description: nicira nvp device ID
          required: 'true'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the network
        aclid:
          dataType: string
          description: ACL Id associated with the VPC network
        acltype:
          dataType: string
          description: acl type - access type to the network
        broadcastdomaintype:
          dataType: string
          description: Broadcast domain type of the network
        broadcasturi:
          dataType: string
          description: broadcast uri of the network. This parameter is visible to
            ROOT admins only
        canusefordeploy:
          dataType: boolean
          description: list networks available for vm deployment
        cidr:
          dataType: string
          description: Cloudstack managed address space, all CloudStack managed VMs
            get IP address from CIDR
        displaynetwork:
          dataType: boolean
          description: an optional field, whether to the display the network to the
            end user or not.
        displaytext:
          dataType: string
          description: the displaytext of the network
        dns1:
          dataType: string
          description: the first DNS for the network
        dns2:
          dataType: string
          description: the second DNS for the network
        domain:
          dataType: string
          description: the domain name of the network owner
        domainid:
          dataType: string
          description: the domain id of the network owner
        gateway:
          dataType: string
          description: the network's gateway
        id:
          dataType: string
          description: the id of the network
        ip6cidr:
          dataType: string
          description: the cidr of IPv6 network
        ip6gateway:
          dataType: string
          description: the gateway of IPv6 network
        isdefault:
          dataType: boolean
          description: true if network is default, false otherwise
        ispersistent:
          dataType: boolean
          description: list networks that are persistent
        issystem:
          dataType: boolean
          description: true if network is system, false otherwise
        name:
          dataType: string
          description: the name of the network
        netmask:
          dataType: string
          description: the network's netmask
        networkcidr:
          dataType: string
          description: the network CIDR of the guest network configured with IP reservation.
            It is the summation of CIDR and RESERVED_IP_RANGE
        networkdomain:
          dataType: string
          description: the network domain
        networkofferingavailability:
          dataType: string
          description: availability of the network offering the network is created
            from
        networkofferingconservemode:
          dataType: boolean
          description: true if network offering is ip conserve mode enabled
        networkofferingdisplaytext:
          dataType: string
          description: display text of the network offering the network is created
            from
        networkofferingid:
          dataType: string
          description: network offering id the network is created from
        networkofferingname:
          dataType: string
          description: name of the network offering the network is created from
        physicalnetworkid:
          dataType: string
          description: the physical network id
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        related:
          dataType: string
          description: related to what other network configuration
        reservediprange:
          dataType: string
          description: the network's IP range not to be used by CloudStack guest VMs
            and can be used for non CloudStack purposes
        restartrequired:
          dataType: boolean
          description: true network requires restart
        service:
          dataType: list
          description: the list of services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        specifyipranges:
          dataType: boolean
          description: true if network supports specifying ip ranges, false otherwise
        state:
          dataType: string
          description: state of the network
        strechedl2subnet:
          dataType: boolean
          description: true if network can span multiple zones
          sinceVersion: '4.4'
        subdomainaccess:
          dataType: boolean
          description: true if users from subdomains can access the domain level network
        tags:
          dataType: list
          description: the list of resource tags associated with network
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        traffictype:
          dataType: string
          description: the traffic type of the network
        type:
          dataType: string
          description: the type of the network
        vlan:
          dataType: string
          description: The vlan of the network. This parameter is visible to ROOT
            admins only
        vpcid:
          dataType: string
          description: VPC the network belongs to
        zoneid:
          dataType: string
          description: zone id of the network
        zonename:
          dataType: string
          description: the name of the zone the network belongs to
        zonesnetworkspans:
          dataType: set
          description: If a network is enabled for 'streched l2 subnet' then represents
            zones on which network currently spans
          sinceVersion: '4.4'
    user_types:
    - root
  listNiciraNvpDevices:
    description: Lists Nicira NVP devices
    isAsync: 'false'
    name: listNiciraNvpDevices
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        nvpdeviceid:
          dataType: uuid
          description: nicira nvp device ID
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'false'
    response:
      parms:
        hostname:
          dataType: string
          description: the controller Ip address
        l3gatewayserviceuuid:
          dataType: string
          description: this L3 gateway service Uuid
        niciradevicename:
          dataType: string
          description: device name
        nvpdeviceid:
          dataType: string
          description: device id of the Nicire Nvp
        physicalnetworkid:
          dataType: string
          description: the physical network to which this Nirica Nvp belongs to
        provider:
          dataType: string
          description: name of the provider
        transportzoneuuid:
          dataType: string
          description: the transport zone Uuid
    user_types:
    - root
  listNics:
    description: list the vm nics  IP to NIC
    isAsync: 'false'
    name: listNics
    request:
      parms:
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        networkid:
          dataType: uuid
          description: list nic of the specific vm's network
          required: 'false'
        nicid:
          dataType: uuid
          description: the ID of the nic to to list IPs
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: the ID of the vm
          required: 'true'
    response:
      parms:
        broadcasturi:
          dataType: string
          description: the broadcast uri of the nic
        deviceid:
          dataType: string
          description: device id for the network when plugged into the virtual machine
          sinceVersion: '4.4'
        gateway:
          dataType: string
          description: the gateway of the nic
        id:
          dataType: string
          description: the ID of the nic
        ip6address:
          dataType: string
          description: the IPv6 address of network
        ip6cidr:
          dataType: string
          description: the cidr of IPv6 network
        ip6gateway:
          dataType: string
          description: the gateway of IPv6 network
        ipaddress:
          dataType: string
          description: the ip address of the nic
        isdefault:
          dataType: boolean
          description: true if nic is default, false otherwise
        isolationuri:
          dataType: string
          description: the isolation uri of the nic
        macaddress:
          dataType: string
          description: true if nic is default, false otherwise
        netmask:
          dataType: string
          description: the netmask of the nic
        networkid:
          dataType: string
          description: the ID of the corresponding network
        networkname:
          dataType: string
          description: the name of the corresponding network
        secondaryip:
          dataType: list
          description: the Secondary ipv4 addr of nic
        traffictype:
          dataType: string
          description: the traffic type of the nic
        type:
          dataType: string
          description: the type of the nic
        virtualmachineid:
          dataType: string
          description: Id of the vm to which the nic belongs
    user_types:
    - domain
    - root
    - user
  listOpenDaylightControllers:
    description: Lists OpenDyalight controllers
    isAsync: 'false'
    name: listOpenDaylightControllers
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of a OpenDaylight Controller
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'false'
    response:
      parms:
        id:
          dataType: string
          description: device id of the controller
        name:
          dataType: string
          description: the name assigned to the controller
        physicalnetworkid:
          dataType: string
          description: the physical network to which this controller belongs to
        url:
          dataType: string
          description: the url of the controller api
        username:
          dataType: string
          description: the username to authenticate to the controller
    user_types:
    - root
  listOsCategories:
    description: Lists all supported OS categories for this cloud.
    isAsync: 'false'
    name: listOsCategories
    request:
      parms:
        id:
          dataType: uuid
          description: list Os category by id
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: list os category by name
          required: 'false'
          sinceVersion: 3.0.1
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        id:
          dataType: string
          description: the ID of the OS category
        name:
          dataType: string
          description: the name of the OS category
    user_types:
    - domain
    - root
    - user
  listOsTypes:
    description: Lists all supported OS types for this cloud.
    isAsync: 'false'
    name: listOsTypes
    request:
      parms:
        description:
          dataType: string
          description: list os by description
          required: 'false'
          sinceVersion: 3.0.1
        id:
          dataType: uuid
          description: list by Os type Id
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        oscategoryid:
          dataType: uuid
          description: list by Os Category id
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        description:
          dataType: string
          description: the name/description of the OS type
        id:
          dataType: string
          description: the ID of the OS type
        isuserdefined:
          dataType: string
          description: is the guest OS user defined
        oscategoryid:
          dataType: string
          description: the ID of the OS category
    user_types:
    - domain
    - root
    - user
  listOvsElements:
    description: Lists all available ovs elements.
    isAsync: 'false'
    name: listOvsElements
    request:
      parms:
        enabled:
          dataType: boolean
          description: list network offerings by enabled state
          required: 'false'
        id:
          dataType: uuid
          description: list ovs elements by id
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        nspid:
          dataType: uuid
          description: list ovs elements by network service provider id
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the provider
        domain:
          dataType: string
          description: the domain associated with the provider
        domainid:
          dataType: string
          description: the domain ID associated with the provider
        enabled:
          dataType: boolean
          description: Enabled/Disabled the service provider
        id:
          dataType: string
          description: the id of the ovs
        nspid:
          dataType: string
          description: the physical network service provider id of the provider
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
    user_types:
    - domain
    - root
  listPaloAltoFirewallNetworks:
    description: lists network that are using Palo Alto firewall device
    isAsync: 'false'
    name: listPaloAltoFirewallNetworks
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        lbdeviceid:
          dataType: uuid
          description: palo alto balancer device ID
          required: 'true'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the network
        aclid:
          dataType: string
          description: ACL Id associated with the VPC network
        acltype:
          dataType: string
          description: acl type - access type to the network
        broadcastdomaintype:
          dataType: string
          description: Broadcast domain type of the network
        broadcasturi:
          dataType: string
          description: broadcast uri of the network. This parameter is visible to
            ROOT admins only
        canusefordeploy:
          dataType: boolean
          description: list networks available for vm deployment
        cidr:
          dataType: string
          description: Cloudstack managed address space, all CloudStack managed VMs
            get IP address from CIDR
        displaynetwork:
          dataType: boolean
          description: an optional field, whether to the display the network to the
            end user or not.
        displaytext:
          dataType: string
          description: the displaytext of the network
        dns1:
          dataType: string
          description: the first DNS for the network
        dns2:
          dataType: string
          description: the second DNS for the network
        domain:
          dataType: string
          description: the domain name of the network owner
        domainid:
          dataType: string
          description: the domain id of the network owner
        gateway:
          dataType: string
          description: the network's gateway
        id:
          dataType: string
          description: the id of the network
        ip6cidr:
          dataType: string
          description: the cidr of IPv6 network
        ip6gateway:
          dataType: string
          description: the gateway of IPv6 network
        isdefault:
          dataType: boolean
          description: true if network is default, false otherwise
        ispersistent:
          dataType: boolean
          description: list networks that are persistent
        issystem:
          dataType: boolean
          description: true if network is system, false otherwise
        name:
          dataType: string
          description: the name of the network
        netmask:
          dataType: string
          description: the network's netmask
        networkcidr:
          dataType: string
          description: the network CIDR of the guest network configured with IP reservation.
            It is the summation of CIDR and RESERVED_IP_RANGE
        networkdomain:
          dataType: string
          description: the network domain
        networkofferingavailability:
          dataType: string
          description: availability of the network offering the network is created
            from
        networkofferingconservemode:
          dataType: boolean
          description: true if network offering is ip conserve mode enabled
        networkofferingdisplaytext:
          dataType: string
          description: display text of the network offering the network is created
            from
        networkofferingid:
          dataType: string
          description: network offering id the network is created from
        networkofferingname:
          dataType: string
          description: name of the network offering the network is created from
        physicalnetworkid:
          dataType: string
          description: the physical network id
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        related:
          dataType: string
          description: related to what other network configuration
        reservediprange:
          dataType: string
          description: the network's IP range not to be used by CloudStack guest VMs
            and can be used for non CloudStack purposes
        restartrequired:
          dataType: boolean
          description: true network requires restart
        service:
          dataType: list
          description: the list of services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        specifyipranges:
          dataType: boolean
          description: true if network supports specifying ip ranges, false otherwise
        state:
          dataType: string
          description: state of the network
        strechedl2subnet:
          dataType: boolean
          description: true if network can span multiple zones
          sinceVersion: '4.4'
        subdomainaccess:
          dataType: boolean
          description: true if users from subdomains can access the domain level network
        tags:
          dataType: list
          description: the list of resource tags associated with network
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        traffictype:
          dataType: string
          description: the traffic type of the network
        type:
          dataType: string
          description: the type of the network
        vlan:
          dataType: string
          description: The vlan of the network. This parameter is visible to ROOT
            admins only
        vpcid:
          dataType: string
          description: VPC the network belongs to
        zoneid:
          dataType: string
          description: zone id of the network
        zonename:
          dataType: string
          description: the name of the zone the network belongs to
        zonesnetworkspans:
          dataType: set
          description: If a network is enabled for 'streched l2 subnet' then represents
            zones on which network currently spans
          sinceVersion: '4.4'
    user_types:
    - root
  listPaloAltoFirewalls:
    description: lists Palo Alto firewall devices in a physical network
    isAsync: 'false'
    name: listPaloAltoFirewalls
    request:
      parms:
        fwdeviceid:
          dataType: uuid
          description: Palo Alto firewall device ID
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'false'
    response:
      parms:
        fwdevicecapacity:
          dataType: long
          description: device capacity
        fwdeviceid:
          dataType: string
          description: device id of the Palo Alto firewall
        fwdevicename:
          dataType: string
          description: device name
        fwdevicestate:
          dataType: string
          description: device state
        ipaddress:
          dataType: string
          description: the management IP address of the external firewall
        numretries:
          dataType: string
          description: the number of times to retry requests to the external firewall
        physicalnetworkid:
          dataType: string
          description: the physical network to which this Palo Alto firewall belongs
            to
        privateinterface:
          dataType: string
          description: the private interface of the external firewall
        privatezone:
          dataType: string
          description: the private security zone of the external firewall
        provider:
          dataType: string
          description: name of the provider
        publicinterface:
          dataType: string
          description: the public interface of the external firewall
        publiczone:
          dataType: string
          description: the public security zone of the external firewall
        timeout:
          dataType: string
          description: the timeout (in seconds) for requests to the external firewall
        usageinterface:
          dataType: string
          description: the usage interface of the external firewall
        username:
          dataType: string
          description: the username that's used to log in to the external firewall
        zoneid:
          dataType: string
          description: the zone ID of the external firewall
    user_types:
    - root
  listPhysicalNetworks:
    description: Lists physical networks
    isAsync: 'false'
    name: listPhysicalNetworks
    request:
      parms:
        id:
          dataType: uuid
          description: list physical network by id
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: search by name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID for the physical network
          required: 'false'
    response:
      parms:
        broadcastdomainrange:
          dataType: string
          description: Broadcast domain range of the physical network
        domainid:
          dataType: string
          description: the domain id of the physical network owner
        id:
          dataType: string
          description: the uuid of the physical network
        isolationmethods:
          dataType: string
          description: isolation methods
        name:
          dataType: string
          description: name of the physical network
        networkspeed:
          dataType: string
          description: the speed of the physical network
        state:
          dataType: string
          description: state of the physical network
        tags:
          dataType: string
          description: comma separated tag
        vlan:
          dataType: string
          description: the vlan of the physical network
        zoneid:
          dataType: string
          description: zone id of the physical network
    sinceVersion: 3.0.0
    user_types:
    - root
  listPods:
    description: Lists all Pods.
    isAsync: 'false'
    name: listPods
    request:
      parms:
        allocationstate:
          dataType: string
          description: list pods by allocation state
          required: 'false'
        id:
          dataType: uuid
          description: list Pods by ID
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: list Pods by name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        showcapacities:
          dataType: boolean
          description: flag to display the capacity of the pods
          required: 'false'
        zoneid:
          dataType: uuid
          description: list Pods by Zone ID
          required: 'false'
    response:
      parms:
        allocationstate:
          dataType: string
          description: the allocation state of the Pod
        capacity:
          dataType: list
          description: the capacity of the Pod
          parms:
            capacitytotal:
              dataType: long
              description: the total capacity available
            capacityused:
              dataType: long
              description: the capacity currently in use
            clusterid:
              dataType: string
              description: the Cluster ID
            clustername:
              dataType: string
              description: the Cluster name
            percentused:
              dataType: string
              description: the percentage of capacity currently in use
            podid:
              dataType: string
              description: the Pod ID
            podname:
              dataType: string
              description: the Pod name
            type:
              dataType: short
              description: the capacity type
            zoneid:
              dataType: string
              description: the Zone ID
            zonename:
              dataType: string
              description: the Zone name
        endip:
          dataType: string
          description: the ending IP for the Pod
        gateway:
          dataType: string
          description: the gateway of the Pod
        id:
          dataType: string
          description: the ID of the Pod
        name:
          dataType: string
          description: the name of the Pod
        netmask:
          dataType: string
          description: the netmask of the Pod
        startip:
          dataType: string
          description: the starting IP for the Pod
        zoneid:
          dataType: string
          description: the Zone ID of the Pod
        zonename:
          dataType: string
          description: the Zone name of the Pod
    user_types:
    - root
  listPortForwardingRules:
    description: Lists all port forwarding rules for an IP address.
    isAsync: 'false'
    name: listPortForwardingRules
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: Lists rule with the specified ID.
          required: 'false'
        ipaddressid:
          dataType: uuid
          description: the id of IP address of the port forwarding services
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        networkid:
          dataType: uuid
          description: list port forwarding rules for ceratin network
          required: 'false'
          sinceVersion: '4.3'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
    response:
      parms:
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        fordisplay:
          dataType: boolean
          description: is firewall for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the ID of the port forwarding rule
        ipaddress:
          dataType: string
          description: the public ip address for the port forwarding rule
        ipaddressid:
          dataType: string
          description: the public ip address id for the port forwarding rule
        networkid:
          dataType: string
          description: the id of the guest network the port forwarding rule belongs
            to
        privateendport:
          dataType: string
          description: the ending port of port forwarding rule's private port range
        privateport:
          dataType: string
          description: the starting port of port forwarding rule's private port range
        protocol:
          dataType: string
          description: the protocol of the port forwarding rule
        publicendport:
          dataType: string
          description: the ending port of port forwarding rule's private port range
        publicport:
          dataType: string
          description: the starting port of port forwarding rule's public port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        virtualmachinedisplayname:
          dataType: string
          description: the VM display name for the port forwarding rule
        virtualmachineid:
          dataType: string
          description: the VM ID for the port forwarding rule
        virtualmachinename:
          dataType: string
          description: the VM name for the port forwarding rule
        vmguestip:
          dataType: string
          description: the vm ip address for the port forwarding rule
    user_types:
    - domain
    - root
    - user
  listPortableIpRanges:
    description: list portable IP ranges
    isAsync: 'false'
    name: listPortableIpRanges
    request:
      parms:
        id:
          dataType: uuid
          description: Id of the portable ip range
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        regionid:
          dataType: integer
          description: Id of a Region
          required: 'false'
    response:
      parms:
        endip:
          dataType: string
          description: the end ip of the portable IP range
        gateway:
          dataType: string
          description: the gateway of the VLAN IP range
        id:
          dataType: string
          description: portable IP range ID
        netmask:
          dataType: string
          description: the netmask of the VLAN IP range
        portableipaddress:
          dataType: list
          description: List of portable IP and association with zone/network/vpc details
            that are part of GSLB rule
          parms:
            accountid:
              dataType: string
              description: the account ID the portable IP address is associated with
            allocated:
              dataType: date
              description: date the portal IP address was acquired
            domainid:
              dataType: string
              description: the domain ID the portable IP address is associated with
            ipaddress:
              dataType: string
              description: public IP address
            networkid:
              dataType: string
              description: the ID of the Network where ip belongs to
            physicalnetworkid:
              dataType: string
              description: the physical network this belongs to
            regionid:
              dataType: integer
              description: Region Id in which global load balancer is created
            state:
              dataType: string
              description: 'State of the ip address. Can be: Allocatin, Allocated
                and Releasing'
            vpcid:
              dataType: string
              description: VPC the ip belongs to
            zoneid:
              dataType: string
              description: the ID of the zone the public IP address belongs to
        regionid:
          dataType: integer
          description: Region Id in which portable ip range is provisioned
        startip:
          dataType: string
          description: the start ip of the portable IP range
        vlan:
          dataType: string
          description: the ID or VID of the VLAN.
    user_types:
    - root
  listPrivateGateways:
    description: List private gateways
    isAsync: 'false'
    name: listPrivateGateways
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: list private gateway by id
          required: 'false'
        ipaddress:
          dataType: string
          description: list gateways by ip address
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        state:
          dataType: string
          description: list gateways by state
          required: 'false'
        vlan:
          dataType: string
          description: list gateways by vlan
          required: 'false'
        vpcid:
          dataType: uuid
          description: list gateways by vpc
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the private gateway
        aclid:
          dataType: string
          description: ACL Id set for private gateway
        domain:
          dataType: string
          description: the domain associated with the private gateway
        domainid:
          dataType: string
          description: the ID of the domain associated with the private gateway
        gateway:
          dataType: string
          description: the gateway
        id:
          dataType: string
          description: the id of the private gateway
        ipaddress:
          dataType: string
          description: the private gateway's ip address
        netmask:
          dataType: string
          description: the private gateway's netmask
        physicalnetworkid:
          dataType: string
          description: the physical network id
        project:
          dataType: string
          description: the project name of the private gateway
        projectid:
          dataType: string
          description: the project id of the private gateway
        sourcenatsupported:
          dataType: boolean
          description: Souce Nat enable status
        state:
          dataType: string
          description: State of the gateway, can be Creating, Ready, Deleting
        vlan:
          dataType: string
          description: the network implementation uri for the private gateway
        vpcid:
          dataType: string
          description: VPC the private gateaway belongs to
        zoneid:
          dataType: string
          description: zone id of the private gateway
        zonename:
          dataType: string
          description: the name of the zone the private gateway belongs to
    user_types:
    - domain
    - root
    - user
  listProjectAccounts:
    description: Lists project's accounts
    isAsync: 'false'
    name: listProjectAccounts
    request:
      parms:
        account:
          dataType: string
          description: list accounts of the project by account name
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: id of the project
          required: 'true'
        role:
          dataType: string
          description: list accounts of the project by role
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the project's owner
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            project
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the project can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by project
          sinceVersion: 4.2.0
        displaytext:
          dataType: string
          description: the displaytext of the project
        domain:
          dataType: string
          description: the domain name where the project belongs to
        domainid:
          dataType: string
          description: the domain id the project belongs to
        id:
          dataType: string
          description: the id of the project
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            project to acquire
          sinceVersion: 4.2.0
        iplimit:
          dataType: string
          description: the total number of public ip addresses this project can acquire
          sinceVersion: 4.2.0
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            project
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this project
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the project can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by project
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the project
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            project
          sinceVersion: 4.2.0
        networklimit:
          dataType: string
          description: the total number of networks the project can own
          sinceVersion: 4.2.0
        networktotal:
          dataType: long
          description: the total number of networks owned by project
          sinceVersion: 4.2.0
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this project
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the project can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this project
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the project can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this project
          sinceVersion: 4.2.0
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this project
          sinceVersion: 4.2.0
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this project
          sinceVersion: 4.2.0
        state:
          dataType: string
          description: the state of the project
        tags:
          dataType: list
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            project
          sinceVersion: 4.2.0
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            project
          sinceVersion: 4.2.0
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            project
          sinceVersion: 4.2.0
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this project
            to acquire
          sinceVersion: 4.2.0
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this project
          sinceVersion: 4.2.0
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this project
          sinceVersion: 4.2.0
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this project
          sinceVersion: 4.2.0
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this project
          sinceVersion: 4.2.0
        volumeavailable:
          dataType: string
          description: the total volume available for this project
          sinceVersion: 4.2.0
        volumelimit:
          dataType: string
          description: the total volume which can be used by this project
          sinceVersion: 4.2.0
        volumetotal:
          dataType: long
          description: the total volume being used by this project
          sinceVersion: 4.2.0
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this project
          sinceVersion: 4.2.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the project can own
          sinceVersion: 4.2.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by project
          sinceVersion: 4.2.0
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  listProjectInvitations:
    description: Lists project invitations and provides detailed information for listed
      invitations
    isAsync: 'false'
    name: listProjectInvitations
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        activeonly:
          dataType: boolean
          description: if true, list only active invitations - having Pending state
            and ones that are not timed out yet
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: list invitations by id
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list by project id
          required: 'false'
        state:
          dataType: string
          description: list invitations by state
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the project's owner
        domain:
          dataType: string
          description: the domain name where the project belongs to
        domainid:
          dataType: string
          description: the domain id the project belongs to
        email:
          dataType: string
          description: the email the invitation was sent to
        id:
          dataType: string
          description: the id of the invitation
        project:
          dataType: string
          description: the name of the project
        projectid:
          dataType: string
          description: the id of the project
        state:
          dataType: string
          description: the invitation state
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  listProjects:
    description: Lists projects and provides detailed information for listed projects
    isAsync: 'false'
    name: listProjects
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        displaytext:
          dataType: string
          description: list projects by display text
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: list projects by project ID
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: list projects by name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        state:
          dataType: string
          description: list projects by state
          required: 'false'
        tags:
          dataType: map
          description: List projects by tags (key/value pairs)
          required: 'false'
          type: map
    response:
      parms:
        account:
          dataType: string
          description: the account name of the project's owner
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            project
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the project can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by project
          sinceVersion: 4.2.0
        displaytext:
          dataType: string
          description: the displaytext of the project
        domain:
          dataType: string
          description: the domain name where the project belongs to
        domainid:
          dataType: string
          description: the domain id the project belongs to
        id:
          dataType: string
          description: the id of the project
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            project to acquire
          sinceVersion: 4.2.0
        iplimit:
          dataType: string
          description: the total number of public ip addresses this project can acquire
          sinceVersion: 4.2.0
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            project
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this project
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the project can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by project
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the project
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            project
          sinceVersion: 4.2.0
        networklimit:
          dataType: string
          description: the total number of networks the project can own
          sinceVersion: 4.2.0
        networktotal:
          dataType: long
          description: the total number of networks owned by project
          sinceVersion: 4.2.0
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this project
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the project can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this project
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the project can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this project
          sinceVersion: 4.2.0
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this project
          sinceVersion: 4.2.0
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this project
          sinceVersion: 4.2.0
        state:
          dataType: string
          description: the state of the project
        tags:
          dataType: list
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            project
          sinceVersion: 4.2.0
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            project
          sinceVersion: 4.2.0
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            project
          sinceVersion: 4.2.0
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this project
            to acquire
          sinceVersion: 4.2.0
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this project
          sinceVersion: 4.2.0
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this project
          sinceVersion: 4.2.0
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this project
          sinceVersion: 4.2.0
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this project
          sinceVersion: 4.2.0
        volumeavailable:
          dataType: string
          description: the total volume available for this project
          sinceVersion: 4.2.0
        volumelimit:
          dataType: string
          description: the total volume which can be used by this project
          sinceVersion: 4.2.0
        volumetotal:
          dataType: long
          description: the total volume being used by this project
          sinceVersion: 4.2.0
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this project
          sinceVersion: 4.2.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the project can own
          sinceVersion: 4.2.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by project
          sinceVersion: 4.2.0
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  listPublicIpAddresses:
    description: Lists all public ip addresses
    isAsync: 'false'
    name: listPublicIpAddresses
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        allocatedonly:
          dataType: boolean
          description: limits search results to allocated public IP addresses
          required: 'false'
        associatednetworkid:
          dataType: uuid
          description: lists all public IP addresses associated to the network specified
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        forloadbalancing:
          dataType: boolean
          description: list only ips used for load balancing
          required: 'false'
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the IP address
          required: 'false'
        id:
          dataType: uuid
          description: lists ip address by id
          required: 'false'
        ipaddress:
          dataType: string
          description: lists the specified IP address
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        issourcenat:
          dataType: boolean
          description: list only source nat ip addresses
          required: 'false'
        isstaticnat:
          dataType: boolean
          description: list only static nat ip addresses
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: lists all public IP addresses by physical network id
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        state:
          dataType: string
          description: lists all public IP addresses by state
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        vlanid:
          dataType: uuid
          description: lists all public IP addresses by VLAN ID
          required: 'false'
        vpcid:
          dataType: uuid
          description: List ips belonging to the VPC
          required: 'false'
        zoneid:
          dataType: uuid
          description: lists all public IP addresses by Zone ID
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account the public IP address is associated with
        allocated:
          dataType: date
          description: date the public IP address was acquired
        associatednetworkid:
          dataType: string
          description: the ID of the Network associated with the IP address
        associatednetworkname:
          dataType: string
          description: the name of the Network associated with the IP address
        domain:
          dataType: string
          description: the domain the public IP address is associated with
        domainid:
          dataType: string
          description: the domain ID the public IP address is associated with
        fordisplay:
          dataType: boolean
          description: is public ip for display to the regular user
          sinceVersion: '4.4'
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the IP address
        id:
          dataType: string
          description: public IP address id
        ipaddress:
          dataType: string
          description: public IP address
        isportable:
          dataType: boolean
          description: is public IP portable across the zones
        issourcenat:
          dataType: boolean
          description: true if the IP address is a source nat address, false otherwise
        isstaticnat:
          dataType: boolean
          description: true if this ip is for static nat, false otherwise
        issystem:
          dataType: boolean
          description: true if this ip is system ip (was allocated as a part of deployVm
            or createLbRule)
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        networkid:
          dataType: string
          description: the ID of the Network where ip belongs to
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        purpose:
          dataType: string
          description: purpose of the IP address. In Acton this value is not null
            for Ips with isSystem=true, and can have either StaticNat or LB value
        state:
          dataType: string
          description: 'State of the ip address. Can be: Allocatin, Allocated and
            Releasing'
        tags:
          dataType: list
          description: the list of resource tags associated with ip address
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        virtualmachinedisplayname:
          dataType: string
          description: virutal machine display name the ip address is assigned to
            (not null only for static nat Ip)
        virtualmachineid:
          dataType: string
          description: virutal machine id the ip address is assigned to (not null
            only for static nat Ip)
        virtualmachinename:
          dataType: string
          description: virutal machine name the ip address is assigned to (not null
            only for static nat Ip)
        vlanid:
          dataType: string
          description: the ID of the VLAN associated with the IP address. This parameter
            is visible to ROOT admins only
        vlanname:
          dataType: string
          description: the VLAN associated with the IP address
        vmipaddress:
          dataType: string
          description: virutal machine (dnat) ip address (not null only for static
            nat Ip)
        vpcid:
          dataType: string
          description: VPC the ip belongs to
        zoneid:
          dataType: string
          description: the ID of the zone the public IP address belongs to
        zonename:
          dataType: string
          description: the name of the zone the public IP address belongs to
    user_types:
    - domain
    - root
    - user
  listRegions:
    description: Lists Regions
    isAsync: 'false'
    name: listRegions
    request:
      parms:
        id:
          dataType: integer
          description: List Region by region ID.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: List Region by region name.
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        endpoint:
          dataType: string
          description: the end point of the region
        gslbserviceenabled:
          dataType: boolean
          description: true if GSLB service is enabled in the region, false otherwise
        id:
          dataType: integer
          description: the ID of the region
        name:
          dataType: string
          description: the name of the region
        portableipserviceenabled:
          dataType: boolean
          description: true if security groups support is enabled, false otherwise
    user_types:
    - domain
    - root
    - user
  listRemoteAccessVpns:
    description: Lists remote access vpns
    isAsync: 'false'
    name: listRemoteAccessVpns
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: Lists remote access vpn rule with the specified ID
          required: 'false'
          sinceVersion: '4.3'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        networkid:
          dataType: uuid
          description: list remote access VPNs for ceratin network
          required: 'false'
          sinceVersion: '4.3'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        publicipid:
          dataType: uuid
          description: public ip address id of the vpn server
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the remote access vpn
        domain:
          dataType: string
          description: the domain name of the account of the remote access vpn
        domainid:
          dataType: string
          description: the domain id of the account of the remote access vpn
        fordisplay:
          dataType: boolean
          description: is vpn for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the remote access vpn
        iprange:
          dataType: string
          description: the range of ips to allocate to the clients
        presharedkey:
          dataType: string
          description: the ipsec preshared key
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        publicip:
          dataType: string
          description: the public ip address of the vpn server
        publicipid:
          dataType: string
          description: the public ip address of the vpn server
        state:
          dataType: string
          description: the state of the rule
    user_types:
    - domain
    - root
    - user
  listResourceDetails:
    description: List resource detail(s)
    isAsync: 'false'
    name: listResourceDetails
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: if set to true, only details marked with display=true, are
            returned. False by default
          required: 'false'
          sinceVersion: '4.3'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        key:
          dataType: string
          description: list by key
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        resourceid:
          dataType: string
          description: list by resource id
          required: 'false'
        resourcetype:
          dataType: string
          description: list by resource type
          required: 'true'
        value:
          dataType: string
          description: list by key, value. Needs to be passed only along with key
          required: 'false'
          sinceVersion: '4.4'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the tag
        customer:
          dataType: string
          description: customer associated with the tag
        domain:
          dataType: string
          description: the domain associated with the tag
        domainid:
          dataType: string
          description: the ID of the domain associated with the tag
        key:
          dataType: string
          description: tag key name
        project:
          dataType: string
          description: the project name where tag belongs to
        projectid:
          dataType: string
          description: the project id the tag belongs to
        resourceid:
          dataType: string
          description: id of the resource
        resourcetype:
          dataType: string
          description: resource type
        value:
          dataType: string
          description: tag value
    sinceVersion: '4.2'
    user_types:
    - domain
    - root
    - user
  listResourceLimits:
    description: Lists resource limits.
    isAsync: 'false'
    name: listResourceLimits
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: long
          description: Lists resource limits by ID.
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        resourcetype:
          dataType: integer
          description: Type of resource to update. Values are 0, 1, 2, 3, and 4.0
            - Instance. Number of instances a user can create. 1 - IP. Number of public
            IP addresses an account can own. 2 - Volume. Number of disk volumes an
            account can own.3 - Snapshot. Number of snapshots an account can own.4
            - Template. Number of templates an account can register/create.5 - Project.
            Number of projects an account can own.6 - Network. Number of networks
            an account can own.7 - VPC. Number of VPC an account can own.8 - CPU.
            Number of CPU an account can allocate for his resources.9 - Memory. Amount
            of RAM an account can allocate for his resources.10 - Primary Storage.
            Amount of Primary storage an account can allocate for his resoruces.11
            - Secondary Storage. Amount of Secondary storage an account can allocate
            for his resources.
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the resource limit
        domain:
          dataType: string
          description: the domain name of the resource limit
        domainid:
          dataType: string
          description: the domain ID of the resource limit
        max:
          dataType: long
          description: the maximum number of the resource. A -1 means the resource
            currently has no limit.
        project:
          dataType: string
          description: the project name of the resource limit
        projectid:
          dataType: string
          description: the project id of the resource limit
        resourcetype:
          dataType: string
          description: resource type. Values include 0, 1, 2, 3, 4, 6, 7, 8, 9, 10,
            11. See the resourceType parameter for more information on these values.
    user_types:
    - domain
    - root
    - user
  listRouters:
    description: List routers.
    isAsync: 'false'
    name: listRouters
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        clusterid:
          dataType: uuid
          description: the cluster ID of the router
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        forvpc:
          dataType: boolean
          description: if true is passed for this parameter, list only VPC routers
          required: 'false'
        hostid:
          dataType: uuid
          description: the host ID of the router
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the disk router
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: the name of the router
          required: 'false'
        networkid:
          dataType: uuid
          description: list by network id
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        podid:
          dataType: uuid
          description: the Pod ID of the router
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        state:
          dataType: string
          description: the state of the router
          required: 'false'
        version:
          dataType: string
          description: list virtual router elements by version
          required: 'false'
        vpcid:
          dataType: uuid
          description: List networks by VPC
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID of the router
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the router
        created:
          dataType: date
          description: the date and time the router was created
        dns1:
          dataType: string
          description: the first DNS for the router
        dns2:
          dataType: string
          description: the second DNS for the router
        domain:
          dataType: string
          description: the domain associated with the router
        domainid:
          dataType: string
          description: the domain ID associated with the router
        gateway:
          dataType: string
          description: the gateway for the router
        guestipaddress:
          dataType: string
          description: the guest IP address for the router
        guestmacaddress:
          dataType: string
          description: the guest MAC address for the router
        guestnetmask:
          dataType: string
          description: the guest netmask for the router
        guestnetworkid:
          dataType: string
          description: the ID of the corresponding guest network
        hostid:
          dataType: string
          description: the host ID for the router
        hostname:
          dataType: string
          description: the hostname for the router
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the id of the router
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the router
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the router
        isredundantrouter:
          dataType: boolean
          description: if this router is an redundant virtual router
        linklocalip:
          dataType: string
          description: the link local IP address for the router
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the router
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the router
        linklocalnetworkid:
          dataType: string
          description: the ID of the corresponding link local network
        name:
          dataType: string
          description: the name of the router
        networkdomain:
          dataType: string
          description: the network domain for the router
        nic:
          dataType: set
          description: the list of nics associated with the router
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
          sinceVersion: '4.0'
        podid:
          dataType: string
          description: the Pod ID for the router
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        publicip:
          dataType: string
          description: the public IP address for the router
        publicmacaddress:
          dataType: string
          description: the public MAC address for the router
        publicnetmask:
          dataType: string
          description: the public netmask for the router
        publicnetworkid:
          dataType: string
          description: the ID of the corresponding public network
        redundantstate:
          dataType: string
          description: the state of redundant virtual router
        requiresupgrade:
          dataType: boolean
          description: true if the router template requires upgrader
        role:
          dataType: string
          description: role of the domain router
        scriptsversion:
          dataType: string
          description: the version of scripts
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        state:
          dataType: state
          description: the state of the router
        templateid:
          dataType: string
          description: the template ID for the router
        version:
          dataType: string
          description: the version of template
        vpcid:
          dataType: string
          description: VPC the router belongs to
        zoneid:
          dataType: string
          description: the Zone ID for the router
        zonename:
          dataType: string
          description: the Zone name for the router
    user_types:
    - domain
    - root
  listS3s:
    description: Lists S3s
    isAsync: 'false'
    name: listS3s
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        details:
          dataType: set
          description: the details of the image store
        id:
          dataType: string
          description: the ID of the image store
        name:
          dataType: string
          description: the name of the image store
        protocol:
          dataType: string
          description: the protocol of the image store
        providername:
          dataType: string
          description: the provider name of the image store
        scope:
          dataType: scopetype
          description: the scope of the image store
        url:
          dataType: string
          description: the url of the image store
        zoneid:
          dataType: string
          description: the Zone ID of the image store
        zonename:
          dataType: string
          description: the Zone name of the image store
    sinceVersion: 4.0.0
    user_types:
    - root
  listSSHKeyPairs:
    description: List registered keypairs
    isAsync: 'false'
    name: listSSHKeyPairs
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fingerprint:
          dataType: string
          description: A public key fingerprint to look for
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: A key pair name to look for
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
    response:
      parms:
        fingerprint:
          dataType: string
          description: Fingerprint of the public key
        name:
          dataType: string
          description: Name of the keypair
    user_types:
    - domain
    - root
    - user
  listSecondaryStagingStores:
    description: Lists secondary staging stores.
    isAsync: 'false'
    name: listSecondaryStagingStores
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the staging store
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: the name of the staging store
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        protocol:
          dataType: string
          description: the staging store protocol
          required: 'false'
        provider:
          dataType: string
          description: the staging store provider
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID for the staging store
          required: 'false'
    response:
      parms:
        details:
          dataType: set
          description: the details of the image store
        id:
          dataType: string
          description: the ID of the image store
        name:
          dataType: string
          description: the name of the image store
        protocol:
          dataType: string
          description: the protocol of the image store
        providername:
          dataType: string
          description: the provider name of the image store
        scope:
          dataType: scopetype
          description: the scope of the image store
        url:
          dataType: string
          description: the url of the image store
        zoneid:
          dataType: string
          description: the Zone ID of the image store
        zonename:
          dataType: string
          description: the Zone name of the image store
    sinceVersion: 4.2.0
    user_types:
    - root
  listSecurityGroups:
    description: Lists security groups
    isAsync: 'false'
    name: listSecurityGroups
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: list the security group by the id provided
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        securitygroupname:
          dataType: string
          description: lists security groups by name
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        virtualmachineid:
          dataType: uuid
          description: lists security groups by virtual machine id
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the security group
        description:
          dataType: string
          description: the description of the security group
        domain:
          dataType: string
          description: the domain name of the security group
        domainid:
          dataType: string
          description: the domain ID of the security group
        egressrule:
          dataType: set
          description: the list of egress rules associated with the security group
          parms:
            account:
              dataType: string
              description: account owning the security group rule
            cidr:
              dataType: string
              description: the CIDR notation for the base IP address of the security
                group rule
            endport:
              dataType: integer
              description: 'the ending IP of the security group rule '
            icmpcode:
              dataType: integer
              description: the code for the ICMP message response
            icmptype:
              dataType: integer
              description: the type of the ICMP message response
            protocol:
              dataType: string
              description: the protocol of the security group rule
            ruleid:
              dataType: string
              description: the id of the security group rule
            securitygroupname:
              dataType: string
              description: security group name
            startport:
              dataType: integer
              description: the starting IP of the security group rule
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        id:
          dataType: string
          description: the ID of the security group
        ingressrule:
          dataType: set
          description: the list of ingress rules associated with the security group
          parms:
            account:
              dataType: string
              description: account owning the security group rule
            cidr:
              dataType: string
              description: the CIDR notation for the base IP address of the security
                group rule
            endport:
              dataType: integer
              description: 'the ending IP of the security group rule '
            icmpcode:
              dataType: integer
              description: the code for the ICMP message response
            icmptype:
              dataType: integer
              description: the type of the ICMP message response
            protocol:
              dataType: string
              description: the protocol of the security group rule
            ruleid:
              dataType: string
              description: the id of the security group rule
            securitygroupname:
              dataType: string
              description: security group name
            startport:
              dataType: integer
              description: the starting IP of the security group rule
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the name of the security group
        project:
          dataType: string
          description: the project name of the group
        projectid:
          dataType: string
          description: the project id of the group
        tags:
          dataType: set
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    user_types:
    - domain
    - root
    - user
  listServiceOfferings:
    description: Lists all available service offerings.
    isAsync: 'false'
    name: listServiceOfferings
    request:
      parms:
        domainid:
          dataType: uuid
          description: the ID of the domain associated with the service offering
          required: 'false'
        id:
          dataType: uuid
          description: ID of the service offering
          required: 'false'
        issystem:
          dataType: boolean
          description: is this a system vm offering
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: name of the service offering
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        systemvmtype:
          dataType: string
          description: the system VM type. Possible types are "consoleproxy", "secondarystoragevm"
            or "domainrouter".
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine. Pass this in if you want to
            see the available service offering that a virtual machine can be changed
            to.
          required: 'false'
    response:
      parms:
        cpunumber:
          dataType: integer
          description: the number of CPU
        cpuspeed:
          dataType: integer
          description: the clock rate CPU speed in Mhz
        created:
          dataType: date
          description: the date this service offering was created
        defaultuse:
          dataType: boolean
          description: is this a  default system vm offering
        deploymentplanner:
          dataType: string
          description: deployment strategy used to deploy VM.
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the service offering
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the service offering
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the service offering
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the service offering
        displaytext:
          dataType: string
          description: an alternate display text of the service offering.
        domain:
          dataType: string
          description: Domain name for the offering
        domainid:
          dataType: string
          description: the domain id of the service offering
        hosttags:
          dataType: string
          description: the host tag for the service offering
        hypervisorsnapshotreserve:
          dataType: integer
          description: Hypervisor snapshot reserve space as a percent of a volume
            (for managed storage using Xen or VMware)
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the service offering
        iscustomized:
          dataType: boolean
          description: is true if the offering is customized
          sinceVersion: 4.3.0
        iscustomizediops:
          dataType: boolean
          description: true if disk offering uses custom iops, false otherwise
          sinceVersion: '4.4'
        issystem:
          dataType: boolean
          description: is this a system vm offering
        isvolatile:
          dataType: boolean
          description: true if the vm needs to be volatile, i.e., on every reboot
            of vm from API root disk is discarded and creates a new root disk
        limitcpuuse:
          dataType: boolean
          description: restrict the CPU usage to committed service offering
        maxiops:
          dataType: long
          description: the max iops of the disk offering
          sinceVersion: '4.4'
        memory:
          dataType: integer
          description: the memory in MB
        miniops:
          dataType: long
          description: the min iops of the disk offering
          sinceVersion: '4.4'
        name:
          dataType: string
          description: the name of the service offering
        networkrate:
          dataType: integer
          description: data transfer rate in megabits per second allowed.
        offerha:
          dataType: boolean
          description: the ha support in the service offering
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes. Valid values are
            thin, sparse, fat.
          sinceVersion: 4.4.0
        serviceofferingdetails:
          dataType: map
          description: additional key/value details tied with this service offering
          sinceVersion: 4.2.0
        storagetype:
          dataType: string
          description: the storage type for this service offering
        systemvmtype:
          dataType: string
          description: is this a the systemvm type for system vm offering
        tags:
          dataType: string
          description: the tags for the service offering
    user_types:
    - domain
    - root
    - user
  listSnapshotPolicies:
    description: Lists snapshot policies.
    isAsync: 'false'
    name: listSnapshotPolicies
    request:
      parms:
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the snapshot policy
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        volumeid:
          dataType: uuid
          description: the ID of the disk volume
          required: 'false'
    response:
      parms:
        fordisplay:
          dataType: boolean
          description: is this policy for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the ID of the snapshot policy
        intervaltype:
          dataType: short
          description: the interval type of the snapshot policy
        maxsnaps:
          dataType: int
          description: maximum number of snapshots retained
        schedule:
          dataType: string
          description: time the snapshot is scheduled to be taken.
        timezone:
          dataType: string
          description: the time zone of the snapshot policy
        volumeid:
          dataType: string
          description: the ID of the disk volume
    user_types:
    - domain
    - root
    - user
  listSnapshots:
    description: Lists all available snapshots for the account.
    isAsync: 'false'
    name: listSnapshots
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: lists snapshot by snapshot ID
          required: 'false'
        intervaltype:
          dataType: string
          description: valid values are HOURLY, DAILY, WEEKLY, and MONTHLY.
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: lists snapshot by snapshot name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        snapshottype:
          dataType: string
          description: valid values are MANUAL or RECURRING.
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        volumeid:
          dataType: uuid
          description: the ID of the disk volume
          required: 'false'
        zoneid:
          dataType: uuid
          description: list snapshots by zone id
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the snapshot
        created:
          dataType: date
          description: '  the date the snapshot was created'
        domain:
          dataType: string
          description: the domain name of the snapshot's account
        domainid:
          dataType: string
          description: the domain ID of the snapshot's account
        id:
          dataType: string
          description: ID of the snapshot
        intervaltype:
          dataType: string
          description: valid types are hourly, daily, weekly, monthy, template, and
            none.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: name of the snapshot
        physicalsize:
          dataType: long
          description: physical size of backedup snapshot on image store
        project:
          dataType: string
          description: the project name of the snapshot
        projectid:
          dataType: string
          description: the project id of the snapshot
        revertable:
          dataType: boolean
          description: indicates whether the underlying storage supports reverting
            the volume to this snapshot
        snapshottype:
          dataType: string
          description: the type of the snapshot
        state:
          dataType: state
          description: the state of the snapshot. BackedUp means that snapshot is
            ready to be used; Creating - the snapshot is being allocated on the primary
            storage; BackingUp - the snapshot is being backed up on secondary storage
        tags:
          dataType: list
          description: the list of resource tags associated with snapshot
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        volumeid:
          dataType: string
          description: ID of the disk volume
        volumename:
          dataType: string
          description: name of the disk volume
        volumetype:
          dataType: string
          description: type of the disk volume
        zoneid:
          dataType: string
          description: id of the availability zone
    user_types:
    - domain
    - root
    - user
  listSslCerts:
    description: Lists SSL certificates
    isAsync: 'false'
    name: listSslCerts
    request:
      parms:
        accountid:
          dataType: uuid
          description: Account Id
          required: 'false'
        certid:
          dataType: uuid
          description: Id of SSL certificate
          required: 'false'
        lbruleid:
          dataType: uuid
          description: Loadbalancer Rule Id
          required: 'false'
        projectid:
          dataType: uuid
          description: project who owns the ssl cert
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: account for the certificate
        certchain:
          dataType: string
          description: certificate chain
        certificate:
          dataType: string
          description: certificate
        domain:
          dataType: string
          description: the domain name of the network owner
        domainid:
          dataType: string
          description: the domain id of the network owner
        fingerprint:
          dataType: string
          description: certificate fingerprint
        id:
          dataType: string
          description: SSL certificate ID
        loadbalancerrulelist:
          dataType: list
          description: List of loabalancers this certificate is bound to
        project:
          dataType: string
          description: the project name of the certificate
        projectid:
          dataType: string
          description: the project id of the certificate
    user_types:
    - domain
    - root
    - user
  listStaticRoutes:
    description: Lists all static routes
    isAsync: 'false'
    name: listStaticRoutes
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        gatewayid:
          dataType: uuid
          description: list static routes by gateway id
          required: 'false'
        id:
          dataType: uuid
          description: list static route by id
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        vpcid:
          dataType: uuid
          description: list static routes by vpc id
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the static route
        cidr:
          dataType: string
          description: static route CIDR
        domain:
          dataType: string
          description: the domain associated with the static route
        domainid:
          dataType: string
          description: the ID of the domain associated with the static route
        gatewayid:
          dataType: string
          description: VPC gateway the route is created for
        id:
          dataType: string
          description: the ID of static route
        project:
          dataType: string
          description: the project name of the static route
        projectid:
          dataType: string
          description: the project id of the static route
        state:
          dataType: string
          description: the state of the static route
        tags:
          dataType: list
          description: the list of resource tags associated with static route
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        vpcid:
          dataType: string
          description: VPC the static route belongs to
    user_types:
    - domain
    - root
    - user
  listStorageNetworkIpRange:
    description: List a storage network IP range.
    isAsync: 'false'
    name: listStorageNetworkIpRange
    request:
      parms:
        id:
          dataType: uuid
          description: optional parameter. Storaget network IP range uuid, if specicied,
            using it to search the range.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        podid:
          dataType: uuid
          description: optional parameter. Pod uuid, if specicied and range uuid is
            absent, using it to search the range.
          required: 'false'
        zoneid:
          dataType: uuid
          description: optional parameter. Zone uuid, if specicied and both pod uuid
            and range uuid are absent, using it to search the range.
          required: 'false'
    response:
      parms:
        endip:
          dataType: string
          description: the end ip of the storage network IP range
        gateway:
          dataType: string
          description: the gateway of the storage network IP range
        id:
          dataType: string
          description: the uuid of storage network IP range.
        netmask:
          dataType: string
          description: the netmask of the storage network IP range
        networkid:
          dataType: string
          description: the network uuid of storage network IP range
        podid:
          dataType: string
          description: the Pod uuid for the storage network IP range
        startip:
          dataType: string
          description: the start ip of the storage network IP range
        vlan:
          dataType: integer
          description: the ID or VID of the VLAN.
        zoneid:
          dataType: string
          description: the Zone uuid of the storage network IP range
    sinceVersion: 3.0.0
    user_types:
    - root
  listStoragePools:
    description: Lists storage pools.
    isAsync: 'false'
    name: listStoragePools
    request:
      parms:
        clusterid:
          dataType: uuid
          description: list storage pools belongig to the specific cluster
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the storage pool
          required: 'false'
        ipaddress:
          dataType: string
          description: the IP address for the storage pool
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: the name of the storage pool
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        path:
          dataType: string
          description: the storage pool path
          required: 'false'
        podid:
          dataType: uuid
          description: the Pod ID for the storage pool
          required: 'false'
        scope:
          dataType: string
          description: the ID of the storage pool
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID for the storage pool
          required: 'false'
    response:
      parms:
        capacityiops:
          dataType: long
          description: IOPS CloudStack can provision from this storage pool
        clusterid:
          dataType: string
          description: the ID of the cluster for the storage pool
        clustername:
          dataType: string
          description: the name of the cluster for the storage pool
        created:
          dataType: date
          description: the date and time the storage pool was created
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the storage pool
        disksizeused:
          dataType: long
          description: the host's currently used disk size
        hypervisor:
          dataType: string
          description: the hypervisor type of the storage pool
        id:
          dataType: string
          description: the ID of the storage pool
        ipaddress:
          dataType: string
          description: the IP address of the storage pool
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the name of the storage pool
        overprovisionfactor:
          dataType: string
          description: the overprovisionfactor for the storage pool
          sinceVersion: '4.4'
        path:
          dataType: string
          description: the storage pool path
        podid:
          dataType: string
          description: the Pod ID of the storage pool
        podname:
          dataType: string
          description: the Pod name of the storage pool
        scope:
          dataType: string
          description: the scope of the storage pool
        state:
          dataType: storagepoolstatus
          description: the state of the storage pool
        storagecapabilities:
          dataType: map
          description: the storage pool capabilities
        suitableformigration:
          dataType: boolean
          description: true if this pool is suitable to migrate a volume, false otherwise
        tags:
          dataType: string
          description: the tags for the storage pool
        type:
          dataType: string
          description: the storage pool type
        zoneid:
          dataType: string
          description: the Zone ID of the storage pool
        zonename:
          dataType: string
          description: the Zone name of the storage pool
    user_types:
    - root
  listStorageProviders:
    description: Lists storage providers.
    isAsync: 'false'
    name: listStorageProviders
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        type:
          dataType: string
          description: 'the type of storage provider: either primary or image'
          required: 'true'
    response:
      parms:
        name:
          dataType: string
          description: the name of the storage provider
        type:
          dataType: string
          description: 'the type of the storage provider: primary or image provider'
    user_types:
    - root
  listStorageTags:
    description: Lists storage tags
    isAsync: 'false'
    name: listStorageTags
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        id:
          dataType: string
          description: the ID of the storage tag
        name:
          dataType: string
          description: the name of the storage tag
        poolid:
          dataType: long
          description: the pool ID of the storage tag
    user_types:
    - domain
    - root
  listSupportedNetworkServices:
    description: Lists all network services provided by CloudStack or for the given
      Provider.
    isAsync: 'false'
    name: listSupportedNetworkServices
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        provider:
          dataType: string
          description: network service provider name
          required: 'false'
        service:
          dataType: string
          description: network service name to list providers and capabilities of
          required: 'false'
    response:
      parms:
        capability:
          dataType: list
          description: the list of capabilities
          parms:
            canchooseservicecapability:
              dataType: boolean
              description: can this service capability value can be choosable while
                creatine network offerings
            name:
              dataType: string
              description: the capability name
            value:
              dataType: string
              description: the capability value
        name:
          dataType: string
          description: the service name
        provider:
          dataType: list
          description: the service provider name
          parms:
            canenableindividualservice:
              dataType: boolean
              description: true if individual services can be enabled/disabled
            destinationphysicalnetworkid:
              dataType: string
              description: the destination physical network
            id:
              dataType: string
              description: uuid of the network provider
            name:
              dataType: string
              description: the provider name
            physicalnetworkid:
              dataType: string
              description: the physical network this belongs to
            servicelist:
              dataType: list
              description: services for this provider
            state:
              dataType: string
              description: state of the network provider
    sinceVersion: 3.0.0
    user_types:
    - root
  listSwifts:
    description: List Swift.
    isAsync: 'false'
    name: listSwifts
    request:
      parms:
        id:
          dataType: long
          description: the id of the swift
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        details:
          dataType: set
          description: the details of the image store
        id:
          dataType: string
          description: the ID of the image store
        name:
          dataType: string
          description: the name of the image store
        protocol:
          dataType: string
          description: the protocol of the image store
        providername:
          dataType: string
          description: the provider name of the image store
        scope:
          dataType: scopetype
          description: the scope of the image store
        url:
          dataType: string
          description: the url of the image store
        zoneid:
          dataType: string
          description: the Zone ID of the image store
        zonename:
          dataType: string
          description: the Zone name of the image store
    sinceVersion: 3.0.0
    user_types:
    - root
  listSystemVms:
    description: List system virtual machines.
    isAsync: 'false'
    name: listSystemVms
    request:
      parms:
        hostid:
          dataType: uuid
          description: the host ID of the system VM
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the system VM
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: the name of the system VM
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        podid:
          dataType: uuid
          description: the Pod ID of the system VM
          required: 'false'
        state:
          dataType: string
          description: the state of the system VM
          required: 'false'
        storageid:
          dataType: uuid
          description: the storage ID where vm's volumes belong to
          required: 'false'
          sinceVersion: 3.0.1
        systemvmtype:
          dataType: string
          description: the system VM type. Possible types are "consoleproxy" and "secondarystoragevm".
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID of the system VM
          required: 'false'
    response:
      parms:
        activeviewersessions:
          dataType: integer
          description: the number of active console sessions for the console proxy
            system vm
        created:
          dataType: date
          description: the date and time the system VM was created
        dns1:
          dataType: string
          description: the first DNS for the system VM
        dns2:
          dataType: string
          description: the second DNS for the system VM
        gateway:
          dataType: string
          description: the gateway for the system VM
        hostid:
          dataType: string
          description: the host ID for the system VM
        hostname:
          dataType: string
          description: the hostname for the system VM
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the system VM
        jobid:
          dataType: string
          description: the job ID associated with the system VM. This is only displayed
            if the router listed is part of a currently running asynchronous job.
        jobstatus:
          dataType: integer
          description: the job status associated with the system VM.  This is only
            displayed if the router listed is part of a currently running asynchronous
            job.
        linklocalip:
          dataType: string
          description: the link local IP address for the system vm
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the system vm
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the system vm
        name:
          dataType: string
          description: the name of the system VM
        networkdomain:
          dataType: string
          description: the network domain for the system VM
        podid:
          dataType: string
          description: the Pod ID for the system VM
        privateip:
          dataType: string
          description: the private IP address for the system VM
        privatemacaddress:
          dataType: string
          description: the private MAC address for the system VM
        privatenetmask:
          dataType: string
          description: the private netmask for the system VM
        publicip:
          dataType: string
          description: the public IP address for the system VM
        publicmacaddress:
          dataType: string
          description: the public MAC address for the system VM
        publicnetmask:
          dataType: string
          description: the public netmask for the system VM
        state:
          dataType: string
          description: the state of the system VM
        systemvmtype:
          dataType: string
          description: the system VM type
        templateid:
          dataType: string
          description: the template ID for the system VM
        zoneid:
          dataType: string
          description: the Zone ID for the system VM
        zonename:
          dataType: string
          description: the Zone name for the system VM
    user_types:
    - root
  listTags:
    description: List resource tag(s)
    isAsync: 'false'
    name: listTags
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        customer:
          dataType: string
          description: list by customer name
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        key:
          dataType: string
          description: list by key
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        resourceid:
          dataType: string
          description: list by resource id
          required: 'false'
        resourcetype:
          dataType: string
          description: list by resource type
          required: 'false'
        value:
          dataType: string
          description: list by value
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the tag
        customer:
          dataType: string
          description: customer associated with the tag
        domain:
          dataType: string
          description: the domain associated with the tag
        domainid:
          dataType: string
          description: the ID of the domain associated with the tag
        key:
          dataType: string
          description: tag key name
        project:
          dataType: string
          description: the project name where tag belongs to
        projectid:
          dataType: string
          description: the project id the tag belongs to
        resourceid:
          dataType: string
          description: id of the resource
        resourcetype:
          dataType: string
          description: resource type
        value:
          dataType: string
          description: tag value
    sinceVersion: 4.0.0
    user_types:
    - domain
    - root
    - user
  listTemplatePermissions:
    description: List template visibility and all accounts that have permissions to
      view this template.
    isAsync: 'false'
    name: listTemplatePermissions
    request:
      parms:
        dataType: uuid
        description: the template ID
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: list
          description: the list of accounts the template is available for
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        id:
          dataType: string
          description: the template ID
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        projectids:
          dataType: list
          description: the list of projects the template is available for
    user_types:
    - domain
    - root
    - user
  listTemplates:
    description: List all public, private, and privileged templates.
    isAsync: 'false'
    name: listTemplates
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        hypervisor:
          dataType: string
          description: the hypervisor for which to restrict the search
          required: 'false'
        id:
          dataType: uuid
          description: the template ID
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: the template name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        showremoved:
          dataType: boolean
          description: show removed templates as well
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        templatefilter:
          dataType: string
          description: 'possible values are "featured", "self", "selfexecutable","sharedexecutable","executable",
            and "community". * featured : templates that have been marked as featured
            and public. * self : templates that have been registered or created by
            the calling user. * selfexecutable : same as self, but only returns templates
            that can be used to deploy a new VM. * sharedexecutable : templates ready
            to be deployed that have been granted to the calling user by another user.
            * executable : templates that are owned by the calling user, or public
            templates, that can be used to deploy a VM. * community : templates that
            have been marked as public but not featured. * all : all templates (only
            usable by admins).'
          required: 'true'
        zoneid:
          dataType: uuid
          description: list templates by zoneId
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name to which the template belongs
        accountid:
          dataType: string
          description: the account id to which the template belongs
        bootable:
          dataType: boolean
          description: true if the ISO is bootable, false otherwise
        checksum:
          dataType: string
          description: checksum of the template
        created:
          dataType: date
          description: the date this template was created
        crossZones:
          dataType: boolean
          description: true if the template is managed across all Zones, false otherwise
        details:
          dataType: map
          description: additional key/value details tied with template
        displaytext:
          dataType: string
          description: the template display text
        domain:
          dataType: string
          description: the name of the domain to which the template belongs
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        format:
          dataType: imageformat
          description: the format of the template.
        hostid:
          dataType: string
          description: the ID of the secondary storage host for the template
        hostname:
          dataType: string
          description: the name of the secondary storage host for the template
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the template ID
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
        isextractable:
          dataType: boolean
          description: true if the template is extractable, false otherwise
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        isready:
          dataType: boolean
          description: true if the template is ready to be deployed from, false otherwise.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the template name
        ostypeid:
          dataType: string
          description: the ID of the OS type for this template.
        ostypename:
          dataType: string
          description: the name of the OS type for this template.
        passwordenabled:
          dataType: boolean
          description: true if the reset password feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the template
        projectid:
          dataType: string
          description: the project id of the template
        removed:
          dataType: date
          description: the date this template was removed
        size:
          dataType: long
          description: the size of the template
        sourcetemplateid:
          dataType: string
          description: the template ID of the parent template if present
        sshkeyenabled:
          dataType: boolean
          description: true if template is sshkey enabled, false otherwise
        status:
          dataType: string
          description: the status of the template
        tags:
          dataType: set
          description: the list of resource tags associated with tempate
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatetag:
          dataType: string
          description: the tag of this template
        templatetype:
          dataType: string
          description: the type of the template
        zoneid:
          dataType: string
          description: the ID of the zone for this template
        zonename:
          dataType: string
          description: the name of the zone for this template
    user_types:
    - domain
    - root
    - user
  listTrafficMonitors:
    description: List traffic monitor Hosts.
    isAsync: 'false'
    name: listTrafficMonitors
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        zoneid:
          dataType: uuid
          description: zone Id
          required: 'true'
    response:
      parms:
        id:
          dataType: string
          description: the ID of the external firewall
        ipaddress:
          dataType: string
          description: the management IP address of the external firewall
        numretries:
          dataType: string
          description: the number of times to retry requests to the external firewall
        timeout:
          dataType: string
          description: the timeout (in seconds) for requests to the external firewall
        zoneid:
          dataType: string
          description: the zone ID of the external firewall
    user_types:
    - root
  listTrafficTypeImplementors:
    description: Lists implementors of implementor of a network traffic type or implementors
      of all network traffic types
    isAsync: 'false'
    name: listTrafficTypeImplementors
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        traffictype:
          dataType: string
          description: Optional. The network traffic type, if specified, return its
            implementor. Otherwise, return all traffic types with their implementor
          required: 'false'
    response:
      parms:
        traffictype:
          dataType: string
          description: network traffic type
        traffictypeimplementor:
          dataType: string
          description: implementor of network traffic type
    sinceVersion: 3.0.0
    user_types:
    - root
  listTrafficTypes:
    description: Lists traffic types of a given physical network.
    isAsync: 'false'
    name: listTrafficTypes
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: the Physical Network ID
          required: 'true'
    response:
      parms:
        canenableindividualservice:
          dataType: boolean
          description: true if individual services can be enabled/disabled
        destinationphysicalnetworkid:
          dataType: string
          description: the destination physical network
        id:
          dataType: string
          description: uuid of the network provider
        name:
          dataType: string
          description: the provider name
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        servicelist:
          dataType: list
          description: services for this provider
        state:
          dataType: string
          description: state of the network provider
    sinceVersion: 3.0.0
    user_types:
    - root
  listUcsBlades:
    description: List ucs blades
    isAsync: 'false'
    name: listUcsBlades
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        ucsmanagerid:
          dataType: uuid
          description: ucs manager id
          required: 'true'
    response:
      parms:
        bladedn:
          dataType: string
          description: ucs blade dn
        hostid:
          dataType: string
          description: cloudstack host id this blade associates to
        id:
          dataType: string
          description: ucs blade id
        profiledn:
          dataType: string
          description: associated ucs profile dn
        ucsmanagerid:
          dataType: string
          description: ucs manager id
    user_types:
    - root
  listUcsManagers:
    description: List ucs manager
    isAsync: 'false'
    name: listUcsManagers
    request:
      parms:
        id:
          dataType: uuid
          description: the ID of the ucs manager
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        zoneid:
          dataType: uuid
          description: the zone id
          required: 'false'
    response:
      parms:
        id:
          dataType: string
          description: the ID of the ucs manager
        name:
          dataType: string
          description: the name of ucs manager
        url:
          dataType: string
          description: the url of ucs manager
        zoneid:
          dataType: string
          description: the zone ID of ucs manager
    user_types:
    - root
  listUcsProfiles:
    description: List profile in ucs manager
    isAsync: 'false'
    name: listUcsProfiles
    request:
      parms:
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        ucsmanagerid:
          dataType: uuid
          description: the id for the ucs manager
          required: 'true'
    response:
      parms:
        dataType: string
        description: ucs profile dn
        name: ucsdn
    user_types:
    - root
  listUsageRecords:
    description: Lists usage records for accounts
    isAsync: 'false'
    name: listUsageRecords
    request:
      parms:
        account:
          dataType: string
          description: List usage records for the specified user.
          required: 'false'
        accountid:
          dataType: uuid
          description: List usage records for the specified account
          required: 'false'
        domainid:
          dataType: uuid
          description: List usage records for the specified domain.
          required: 'false'
        enddate:
          dataType: date
          description: End date range for usage record query (use format "yyyy-MM-dd"
            or the new format "yyyy-MM-dd HH:mm:ss", e.g. startDate=2015-01-01 or
            startdate=2015-01-01 10:30:00).
          required: 'true'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: List usage records for specified project
          required: 'false'
        startdate:
          dataType: date
          description: Start date range for usage record query (use format "yyyy-MM-dd"
            or the new format "yyyy-MM-dd HH:mm:ss", e.g. startDate=2015-01-01 or
            startdate=2015-01-01 11:00:00).
          required: 'true'
        type:
          dataType: long
          description: List usage records for the specified usage type
          required: 'false'
        usageid:
          dataType: string
          description: List usage records for the specified usage UUID. Can be used
            only together with TYPE parameter.
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the user account name
        accountid:
          dataType: string
          description: the user account Id
        cpunumber:
          dataType: long
          description: number of cpu of resource
        cpuspeed:
          dataType: long
          description: speed of each cpu of resource
        description:
          dataType: string
          description: description of the usage record
        domain:
          dataType: string
          description: the domain the resource is associated with
        domainid:
          dataType: string
          description: the domain ID
        enddate:
          dataType: string
          description: end date of the usage record
        isdefault:
          dataType: boolean
          description: True if the resource is default
        issourcenat:
          dataType: boolean
          description: True if the IPAddress is source NAT
        issystem:
          dataType: boolean
          description: True if the IPAddress is system IP - allocated during vm deploy
            or lb rule create
        memory:
          dataType: long
          description: memory allocated for the resource
        name:
          dataType: string
          description: virtual machine name
        networkid:
          dataType: string
          description: id of the network
        offeringid:
          dataType: string
          description: offering ID
        project:
          dataType: string
          description: the project name of the resource
        projectid:
          dataType: string
          description: the project id of the resource
        rawusage:
          dataType: string
          description: raw usage in hours
        size:
          dataType: long
          description: resource size
        startdate:
          dataType: string
          description: start date of the usage record
        templateid:
          dataType: string
          description: template ID
        type:
          dataType: string
          description: resource type
        usage:
          dataType: string
          description: usage in hours
        usageid:
          dataType: string
          description: id of the resource
        usagetype:
          dataType: integer
          description: usage type ID
        virtualmachineid:
          dataType: string
          description: virtual machine ID
        virtualsize:
          dataType: long
          description: virtual size of resource
        zoneid:
          dataType: string
          description: the zone ID
    user_types:
    - domain
    - root
  listUsageTypes:
    description: List Usage Types
    isAsync: 'false'
    name: listUsageTypes
    request: {}
    response:
      parms:
        description:
          dataType: string
          description: description of usage type
        usagetypeid:
          dataType: integer
          description: usage type
    user_types:
    - root
  listUsers:
    description: Lists user accounts
    isAsync: 'false'
    name: listUsers
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        accounttype:
          dataType: long
          description: List users by account type. Valid types include admin, domain-admin,
            read-only-admin, or user.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: List user by ID.
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        state:
          dataType: string
          description: List users by state of the user account.
          required: 'false'
        username:
          dataType: string
          description: List user by the username
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the user
        accountid:
          dataType: string
          description: the account ID of the user
        accounttype:
          dataType: short
          description: the account type of the user
        apikey:
          dataType: string
          description: the api key of the user
        created:
          dataType: date
          description: the date and time the user account was created
        domain:
          dataType: string
          description: the domain name of the user
        domainid:
          dataType: string
          description: the domain ID of the user
        email:
          dataType: string
          description: the user email address
        firstname:
          dataType: string
          description: the user firstname
        id:
          dataType: string
          description: the user ID
        iscallerchilddomain:
          dataType: boolean
          description: the boolean value representing if the updating target is in
            caller's child domain
        isdefault:
          dataType: boolean
          description: true if user is default, false otherwise
          sinceVersion: 4.2.0
        lastname:
          dataType: string
          description: the user lastname
        secretkey:
          dataType: string
          description: the secret key of the user
        state:
          dataType: string
          description: the user state
        timezone:
          dataType: string
          description: the timezone user was created in
        username:
          dataType: string
          description: the user name
    user_types:
    - domain
    - root
    - user
  listVMSnapshot:
    description: List virtual machine snapshot by conditions
    isAsync: 'false'
    name: listVMSnapshot
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: lists snapshot by snapshot name or display name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        state:
          dataType: string
          description: state of the virtual machine snapshot
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        virtualmachineid:
          dataType: uuid
          description: the ID of the vm
          required: 'false'
        vmsnapshotid:
          dataType: uuid
          description: The ID of the VM snapshot
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the disk volume
        created:
          dataType: date
          description: the create date of the vm snapshot
        current:
          dataType: boolean
          description: indiates if this is current snapshot
        description:
          dataType: string
          description: the description of the vm snapshot
        displayname:
          dataType: string
          description: the display name of the vm snapshot
        domain:
          dataType: string
          description: the domain associated with the disk volume
        domainid:
          dataType: string
          description: the ID of the domain associated with the disk volume
        id:
          dataType: string
          description: the ID of the vm snapshot
        name:
          dataType: string
          description: the name of the vm snapshot
        parent:
          dataType: string
          description: the parent ID of the vm snapshot
        parentName:
          dataType: string
          description: the parent displayName of the vm snapshot
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        state:
          dataType: state
          description: the state of the vm snapshot
        type:
          dataType: string
          description: VM Snapshot type
        virtualmachineid:
          dataType: string
          description: the vm ID of the vm snapshot
        zoneid:
          dataType: string
          description: the Zone ID of the vm snapshot
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
    - user
  listVPCOfferings:
    description: Lists VPC offerings
    isAsync: 'false'
    name: listVPCOfferings
    request:
      parms:
        displaytext:
          dataType: string
          description: list VPC offerings by display text
          required: 'false'
        id:
          dataType: uuid
          description: list VPC offerings by id
          required: 'false'
        isdefault:
          dataType: boolean
          description: true if need to list only default VPC offerings. Default value
            is false
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: list VPC offerings by name
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        state:
          dataType: string
          description: list VPC offerings by state
          required: 'false'
        supportedservices:
          dataType: list
          description: list VPC offerings supporting certain services
          required: 'false'
          type: list
    response:
      parms:
        created:
          dataType: date
          description: the date this vpc offering was created
        displaytext:
          dataType: string
          description: an alternate display text of the vpc offering.
        distributedvpcrouter:
          dataType: boolean
          description: ' indicates if the vpc offering supports distributed router
            for one-hop forwarding'
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the vpc offering
        isdefault:
          dataType: boolean
          description: true if vpc offering is default, false otherwise
        name:
          dataType: string
          description: the name of the vpc offering
        service:
          dataType: list
          description: the list of supported services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        state:
          dataType: string
          description: state of the vpc offering. Can be Disabled/Enabled
        supportsregionLevelvpc:
          dataType: boolean
          description: ' indicated if the offering can support region level vpc'
          sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  listVPCs:
    description: Lists VPCs
    isAsync: 'false'
    name: listVPCs
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        cidr:
          dataType: string
          description: list by cidr of the VPC. All VPC guest networks' cidrs should
            be within this CIDR
          required: 'false'
        displaytext:
          dataType: string
          description: List by display text of the VPC
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: list VPC by id
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: list by name of the VPC
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        restartrequired:
          dataType: boolean
          description: list VPCs by restartRequired option
          required: 'false'
        state:
          dataType: string
          description: list VPCs by state
          required: 'false'
        supportedservices:
          dataType: list
          description: list VPC supporting certain services
          required: 'false'
          type: list
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        vpcofferingid:
          dataType: uuid
          description: list by ID of the VPC offering
          required: 'false'
        zoneid:
          dataType: uuid
          description: list by zone
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the VPC
        cidr:
          dataType: string
          description: the cidr the VPC
        created:
          dataType: date
          description: the date this VPC was created
        displaytext:
          dataType: string
          description: an alternate display text of the VPC.
        distributedvpcrouter:
          dataType: boolean
          description: is VPC uses distributed router for one hop forwarding and host
            based network ACL's
          sinceVersion: '4.4'
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the VPC owner
        fordisplay:
          dataType: boolean
          description: is vpc for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the VPC
        name:
          dataType: string
          description: the name of the VPC
        network:
          dataType: list
          description: the list of networks belongign to the VPC
          parms:
            account:
              dataType: string
              description: the owner of the network
            aclid:
              dataType: string
              description: ACL Id associated with the VPC network
            acltype:
              dataType: string
              description: acl type - access type to the network
            broadcastdomaintype:
              dataType: string
              description: Broadcast domain type of the network
            broadcasturi:
              dataType: string
              description: broadcast uri of the network. This parameter is visible
                to ROOT admins only
            canusefordeploy:
              dataType: boolean
              description: list networks available for vm deployment
            cidr:
              dataType: string
              description: Cloudstack managed address space, all CloudStack managed
                VMs get IP address from CIDR
            displaynetwork:
              dataType: boolean
              description: an optional field, whether to the display the network to
                the end user or not.
            displaytext:
              dataType: string
              description: the displaytext of the network
            dns1:
              dataType: string
              description: the first DNS for the network
            dns2:
              dataType: string
              description: the second DNS for the network
            domain:
              dataType: string
              description: the domain name of the network owner
            domainid:
              dataType: string
              description: the domain id of the network owner
            gateway:
              dataType: string
              description: the network's gateway
            id:
              dataType: string
              description: the id of the network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            isdefault:
              dataType: boolean
              description: true if network is default, false otherwise
            ispersistent:
              dataType: boolean
              description: list networks that are persistent
            issystem:
              dataType: boolean
              description: true if network is system, false otherwise
            name:
              dataType: string
              description: the name of the network
            netmask:
              dataType: string
              description: the network's netmask
            networkcidr:
              dataType: string
              description: the network CIDR of the guest network configured with IP
                reservation. It is the summation of CIDR and RESERVED_IP_RANGE
            networkdomain:
              dataType: string
              description: the network domain
            networkofferingavailability:
              dataType: string
              description: availability of the network offering the network is created
                from
            networkofferingconservemode:
              dataType: boolean
              description: true if network offering is ip conserve mode enabled
            networkofferingdisplaytext:
              dataType: string
              description: display text of the network offering the network is created
                from
            networkofferingid:
              dataType: string
              description: network offering id the network is created from
            networkofferingname:
              dataType: string
              description: name of the network offering the network is created from
            physicalnetworkid:
              dataType: string
              description: the physical network id
            project:
              dataType: string
              description: the project name of the address
            projectid:
              dataType: string
              description: the project id of the ipaddress
            related:
              dataType: string
              description: related to what other network configuration
            reservediprange:
              dataType: string
              description: the network's IP range not to be used by CloudStack guest
                VMs and can be used for non CloudStack purposes
            restartrequired:
              dataType: boolean
              description: true network requires restart
            service:
              dataType: list
              description: the list of services
              parms:
                capability:
                  dataType: list
                  description: the list of capabilities
                  parms:
                    canchooseservicecapability:
                      dataType: boolean
                      description: can this service capability value can be choosable
                        while creatine network offerings
                    name:
                      dataType: string
                      description: the capability name
                    value:
                      dataType: string
                      description: the capability value
                name:
                  dataType: string
                  description: the service name
                provider:
                  dataType: list
                  description: the service provider name
                  parms:
                    canenableindividualservice:
                      dataType: boolean
                      description: true if individual services can be enabled/disabled
                    destinationphysicalnetworkid:
                      dataType: string
                      description: the destination physical network
                    id:
                      dataType: string
                      description: uuid of the network provider
                    name:
                      dataType: string
                      description: the provider name
                    physicalnetworkid:
                      dataType: string
                      description: the physical network this belongs to
                    servicelist:
                      dataType: list
                      description: services for this provider
                    state:
                      dataType: string
                      description: state of the network provider
            specifyipranges:
              dataType: boolean
              description: true if network supports specifying ip ranges, false otherwise
            state:
              dataType: string
              description: state of the network
            strechedl2subnet:
              dataType: boolean
              description: true if network can span multiple zones
              sinceVersion: '4.4'
            subdomainaccess:
              dataType: boolean
              description: true if users from subdomains can access the domain level
                network
            tags:
              dataType: list
              description: the list of resource tags associated with network
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
            traffictype:
              dataType: string
              description: the traffic type of the network
            type:
              dataType: string
              description: the type of the network
            vlan:
              dataType: string
              description: The vlan of the network. This parameter is visible to ROOT
                admins only
            vpcid:
              dataType: string
              description: VPC the network belongs to
            zoneid:
              dataType: string
              description: zone id of the network
            zonename:
              dataType: string
              description: the name of the zone the network belongs to
            zonesnetworkspans:
              dataType: set
              description: If a network is enabled for 'streched l2 subnet' then represents
                zones on which network currently spans
              sinceVersion: '4.4'
        networkdomain:
          dataType: string
          description: the network domain of the VPC
        project:
          dataType: string
          description: the project name of the VPC
        projectid:
          dataType: string
          description: the project id of the VPC
        regionlevelvpc:
          dataType: boolean
          description: true if VPC is region level
          sinceVersion: '4.4'
        restartrequired:
          dataType: boolean
          description: true VPC requires restart
        service:
          dataType: list
          description: the list of supported services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        state:
          dataType: string
          description: state of the VPC. Can be Inactive/Enabled
        tags:
          dataType: list
          description: the list of resource tags associated with the project
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        vpcofferingid:
          dataType: string
          description: vpc offering id the VPC is created from
        zoneid:
          dataType: string
          description: zone id of the vpc
        zonename:
          dataType: string
          description: the name of the zone the VPC belongs to
    user_types:
    - domain
    - root
    - user
  listVirtualMachines:
    description: List the virtual machines owned by the account.
    isAsync: 'false'
    name: listVirtualMachines
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        affinitygroupid:
          dataType: uuid
          description: list vms by affinity group
          required: 'false'
        details:
          dataType: list
          description: comma separated list of host details requested, value can be
            a list of [all, group, nics, stats, secgrp, tmpl, servoff, diskoff, iso,
            volume, min, affgrp]. If no parameter is passed in, the details will be
            defaulted to all
          required: 'false'
          type: list
        displayvm:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        forvirtualnetwork:
          dataType: boolean
          description: list by network type; true if need to list vms using Virtual
            Network, false otherwise
          required: 'false'
        groupid:
          dataType: uuid
          description: the group ID
          required: 'false'
        hostid:
          dataType: uuid
          description: the host ID
          required: 'false'
        hypervisor:
          dataType: string
          description: the target hypervisor for the template
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the virtual machine
          required: 'false'
        ids:
          dataType: list
          description: the IDs of the virtual machines, mutually exclusive with id
          required: 'false'
          sinceVersion: '4.4'
          type: list
        isoid:
          dataType: uuid
          description: list vms by iso
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: name of the virtual machine (a substring match is made against
            the parameter value, data for all matching VMs will be returned)
          required: 'false'
        networkid:
          dataType: uuid
          description: list by network id
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        podid:
          dataType: uuid
          description: the pod ID
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        serviceofferingid:
          dataType: uuid
          description: list by the service offering
          required: 'false'
          sinceVersion: '4.4'
        state:
          dataType: string
          description: state of the virtual machine
          required: 'false'
        storageid:
          dataType: uuid
          description: the storage ID where vm's volumes belong to
          required: 'false'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        templateid:
          dataType: uuid
          description: list vms by template
          required: 'false'
        vpcid:
          dataType: uuid
          description: list vms by vpc
          required: 'false'
        zoneid:
          dataType: uuid
          description: the availability zone ID
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  listVirtualRouterElements:
    description: Lists all available virtual router elements.
    isAsync: 'false'
    name: listVirtualRouterElements
    request:
      parms:
        enabled:
          dataType: boolean
          description: list network offerings by enabled state
          required: 'false'
        id:
          dataType: uuid
          description: list virtual router elements by id
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        nspid:
          dataType: uuid
          description: list virtual router elements by network service provider id
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the provider
        domain:
          dataType: string
          description: the domain associated with the provider
        domainid:
          dataType: string
          description: the domain ID associated with the provider
        enabled:
          dataType: boolean
          description: Enabled/Disabled the service provider
        id:
          dataType: string
          description: the id of the router
        nspid:
          dataType: string
          description: the physical network service provider id of the provider
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
    user_types:
    - domain
    - root
  listVlanIpRanges:
    description: Lists all VLAN IP ranges.
    isAsync: 'false'
    name: listVlanIpRanges
    request:
      parms:
        account:
          dataType: string
          description: the account with which the VLAN IP range is associated. Must
            be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: the domain ID with which the VLAN IP range is associated.  If
            used with the account parameter, returns all VLAN IP ranges for that account
            in the specified domain.
          required: 'false'
        forvirtualnetwork:
          dataType: boolean
          description: true if VLAN is of Virtual type, false if Direct
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the VLAN IP range
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        networkid:
          dataType: uuid
          description: network id of the VLAN IP range
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        physicalnetworkid:
          dataType: uuid
          description: physical network id of the VLAN IP range
          required: 'false'
        podid:
          dataType: uuid
          description: the Pod ID of the VLAN IP range
          required: 'false'
        projectid:
          dataType: uuid
          description: project who will own the VLAN
          required: 'false'
        vlan:
          dataType: string
          description: the ID or VID of the VLAN. Default is an "untagged" VLAN.
          required: 'false'
        zoneid:
          dataType: uuid
          description: the Zone ID of the VLAN IP range
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the VLAN IP range
        description:
          dataType: string
          description: the description of the VLAN IP range
        domain:
          dataType: string
          description: the domain name of the VLAN IP range
        domainid:
          dataType: string
          description: the domain ID of the VLAN IP range
        endip:
          dataType: string
          description: the end ip of the VLAN IP range
        endipv6:
          dataType: string
          description: the end ipv6 of the VLAN IP range
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the VLAN IP range
        gateway:
          dataType: string
          description: the gateway of the VLAN IP range
        id:
          dataType: string
          description: the ID of the VLAN IP range
        ip6cidr:
          dataType: string
          description: the cidr of IPv6 network
        ip6gateway:
          dataType: string
          description: the gateway of IPv6 network
        netmask:
          dataType: string
          description: the netmask of the VLAN IP range
        networkid:
          dataType: string
          description: the network id of vlan range
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        podid:
          dataType: string
          description: the Pod ID for the VLAN IP range
        podname:
          dataType: string
          description: the Pod name for the VLAN IP range
        project:
          dataType: string
          description: the project name of the vlan range
        projectid:
          dataType: string
          description: the project id of the vlan range
        startip:
          dataType: string
          description: the start ip of the VLAN IP range
        startipv6:
          dataType: string
          description: the start ipv6 of the VLAN IP range
        vlan:
          dataType: string
          description: the ID or VID of the VLAN.
        zoneid:
          dataType: string
          description: the Zone ID of the VLAN IP range
    user_types:
    - root
  listVolumes:
    description: Lists all volumes.
    isAsync: 'false'
    name: listVolumes
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        diskofferingid:
          dataType: uuid
          description: list volumes by disk offering
          required: 'false'
          sinceVersion: '4.4'
        displayvolume:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        hostid:
          dataType: uuid
          description: list volumes on specified host
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the disk volume
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        name:
          dataType: string
          description: the name of the disk volume
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        podid:
          dataType: uuid
          description: the pod id the disk volume belongs to
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        storageid:
          dataType: uuid
          description: the ID of the storage pool, available to ROOT admin only
          required: 'false'
          sinceVersion: '4.3'
        tags:
          dataType: map
          description: List resources by tags (key/value pairs)
          required: 'false'
          type: map
        type:
          dataType: string
          description: the type of disk volume
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine
          required: 'false'
        zoneid:
          dataType: uuid
          description: the ID of the availability zone
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the disk volume
        attached:
          dataType: date
          description: the date the volume was attached to a VM instance
        chaininfo:
          dataType: string
          description: the chain info of the volume
          sinceVersion: '4.4'
        created:
          dataType: date
          description: the date the disk volume was created
        destroyed:
          dataType: boolean
          description: the boolean state of whether the volume is destroyed or not
        deviceid:
          dataType: long
          description: the ID of the device on user vm the volume is attahed to. This
            tag is not returned when the volume is detached.
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the disk volume
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the disk volume
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the disk volume
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the disk volume
        diskofferingdisplaytext:
          dataType: string
          description: the display text of the disk offering
        diskofferingid:
          dataType: string
          description: ID of the disk offering
        diskofferingname:
          dataType: string
          description: name of the disk offering
        displayvolume:
          dataType: boolean
          description: an optional field whether to the display the volume to the
            end user or not.
        domain:
          dataType: string
          description: the domain associated with the disk volume
        domainid:
          dataType: string
          description: the ID of the domain associated with the disk volume
        hypervisor:
          dataType: string
          description: Hypervisor the volume belongs to
        id:
          dataType: string
          description: ID of the disk volume
        isextractable:
          dataType: boolean
          description: true if the volume is extractable, false otherwise
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        maxiops:
          dataType: long
          description: max iops of the disk volume
        miniops:
          dataType: long
          description: min iops of the disk volume
        name:
          dataType: string
          description: name of the disk volume
        path:
          dataType: string
          description: the path of the volume
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes.
        quiescevm:
          dataType: boolean
          description: need quiesce vm or not when taking snapshot
          sinceVersion: '4.3'
        serviceofferingdisplaytext:
          dataType: string
          description: the display text of the service offering for root disk
        serviceofferingid:
          dataType: string
          description: ID of the service offering for root disk
        serviceofferingname:
          dataType: string
          description: name of the service offering for root disk
        size:
          dataType: long
          description: size of the disk volume
        snapshotid:
          dataType: string
          description: ID of the snapshot from which this volume was created
        state:
          dataType: string
          description: the state of the disk volume
        status:
          dataType: string
          description: the status of the volume
        storage:
          dataType: string
          description: name of the primary storage hosting the disk volume
        storageid:
          dataType: string
          description: id of the primary storage hosting the disk volume; returned
            to admin user only
          sinceVersion: '4.3'
        storagetype:
          dataType: string
          description: shared or local storage
        tags:
          dataType: set
          description: the list of resource tags associated with volume
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        type:
          dataType: string
          description: type of the disk volume (ROOT or DATADISK)
        virtualmachineid:
          dataType: string
          description: id of the virtual machine
        vmdisplayname:
          dataType: string
          description: display name of the virtual machine
        vmname:
          dataType: string
          description: name of the virtual machine
        vmstate:
          dataType: string
          description: state of the virtual machine
        zoneid:
          dataType: string
          description: ID of the availability zone
        zonename:
          dataType: string
          description: name of the availability zone
    user_types:
    - domain
    - root
    - user
  listVpnConnections:
    description: Lists site to site vpn connection gateways
    isAsync: 'false'
    name: listVpnConnections
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: id of the vpn connection
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        vpcid:
          dataType: uuid
          description: id of vpc
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner
        cidrlist:
          dataType: string
          description: guest cidr list of the customer gateway
        created:
          dataType: date
          description: the date and time the host was created
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the owner
        dpd:
          dataType: boolean
          description: if DPD is enabled for customer gateway
        esplifetime:
          dataType: long
          description: Lifetime of ESP SA of customer gateway
        esppolicy:
          dataType: string
          description: ESP policy of the customer gateway
        fordisplay:
          dataType: boolean
          description: is connection for display to the regular user
          sinceVersion: '4.4'
        gateway:
          dataType: string
          description: public ip address id of the customer gateway
        id:
          dataType: string
          description: the connection ID
        ikelifetime:
          dataType: long
          description: Lifetime of IKE SA of customer gateway
        ikepolicy:
          dataType: string
          description: IKE policy of the customer gateway
        ipsecpsk:
          dataType: string
          description: IPsec Preshared-Key of the customer gateway
        passive:
          dataType: boolean
          description: State of vpn connection
        project:
          dataType: string
          description: the project name
        projectid:
          dataType: string
          description: the project id
        publicip:
          dataType: string
          description: the public IP address
        removed:
          dataType: date
          description: the date and time the host was removed
        s2scustomergatewayid:
          dataType: string
          description: the customer gateway ID
        s2svpngatewayid:
          dataType: string
          description: the vpn gateway ID
        state:
          dataType: string
          description: State of vpn connection
    user_types:
    - domain
    - root
    - user
  listVpnCustomerGateways:
    description: Lists site to site vpn customer gateways
    isAsync: 'false'
    name: listVpnCustomerGateways
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: id of the customer gateway
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner
        cidrlist:
          dataType: string
          description: guest cidr list of the customer gateway
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the owner
        dpd:
          dataType: boolean
          description: if DPD is enabled for customer gateway
        esplifetime:
          dataType: long
          description: Lifetime of ESP SA of customer gateway
        esppolicy:
          dataType: string
          description: IPsec policy of customer gateway
        gateway:
          dataType: string
          description: public ip address id of the customer gateway
        id:
          dataType: string
          description: the vpn gateway ID
        ikelifetime:
          dataType: long
          description: Lifetime of IKE SA of customer gateway
        ikepolicy:
          dataType: string
          description: IKE policy of customer gateway
        ipaddress:
          dataType: string
          description: guest ip of the customer gateway
        ipsecpsk:
          dataType: string
          description: IPsec preshared-key of customer gateway
        name:
          dataType: string
          description: name of the customer gateway
        project:
          dataType: string
          description: the project name
        projectid:
          dataType: string
          description: the project id
        removed:
          dataType: date
          description: the date and time the host was removed
    user_types:
    - domain
    - root
    - user
  listVpnGateways:
    description: Lists site 2 site vpn gateways
    isAsync: 'false'
    name: listVpnGateways
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        fordisplay:
          dataType: boolean
          description: list resources by display flag; only ROOT admin is eligible
            to pass this parameter
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: id of the vpn gateway
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        vpcid:
          dataType: uuid
          description: id of vpc
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the owner
        fordisplay:
          dataType: boolean
          description: is vpn gateway for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the vpn gateway ID
        project:
          dataType: string
          description: the project name
        projectid:
          dataType: string
          description: the project id
        publicip:
          dataType: string
          description: the public IP address
        removed:
          dataType: date
          description: the date and time the host was removed
        vpcid:
          dataType: string
          description: the vpc id of this gateway
    user_types:
    - domain
    - root
    - user
  listVpnUsers:
    description: Lists vpn users
    isAsync: 'false'
    name: listVpnUsers
    request:
      parms:
        account:
          dataType: string
          description: list resources by account. Must be used with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: list only resources belonging to the domain specified
          required: 'false'
        id:
          dataType: uuid
          description: The uuid of the Vpn user
          required: 'false'
        isrecursive:
          dataType: boolean
          description: defaults to false, but if true, lists all resources from the
            parent specified by the domainId till leaves.
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        listall:
          dataType: boolean
          description: If set to false, list only resources belonging to the command's
            caller; if set to true - list resources that the caller is authorized
            to see. Default value is false
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        projectid:
          dataType: uuid
          description: list objects by project
          required: 'false'
        username:
          dataType: string
          description: the username of the vpn user.
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the remote access vpn
        domain:
          dataType: string
          description: the domain name of the account of the remote access vpn
        domainid:
          dataType: string
          description: the domain id of the account of the remote access vpn
        id:
          dataType: string
          description: the vpn userID
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        state:
          dataType: string
          description: the state of the Vpn User
        username:
          dataType: string
          description: the username of the vpn user
    user_types:
    - domain
    - root
    - user
  listZones:
    description: Lists zones
    isAsync: 'false'
    name: listZones
    request:
      parms:
        available:
          dataType: boolean
          description: true if you want to retrieve all available Zones. False if
            you only want to return the Zones from which you have at least one VM.
            Default is false.
          required: 'false'
        domainid:
          dataType: uuid
          description: the ID of the domain associated with the zone
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the zone
          required: 'false'
        keyword:
          dataType: string
          description: List by keyword
          required: 'false'
        name:
          dataType: string
          description: the name of the zone
          required: 'false'
        networktype:
          dataType: string
          description: the network type of the zone that the virtual machine belongs
            to
          required: 'false'
        page:
          dataType: integer
          required: 'false'
        pagesize:
          dataType: integer
          required: 'false'
        showcapacities:
          dataType: boolean
          description: flag to display the capacity of the zones
          required: 'false'
        tags:
          dataType: map
          description: List zones by resource tags (key/value pairs)
          required: 'false'
          sinceVersion: '4.3'
          type: map
    response:
      parms:
        allocationstate:
          dataType: string
          description: the allocation state of the cluster
        capacity:
          dataType: list
          description: the capacity of the Zone
          parms:
            capacitytotal:
              dataType: long
              description: the total capacity available
            capacityused:
              dataType: long
              description: the capacity currently in use
            clusterid:
              dataType: string
              description: the Cluster ID
            clustername:
              dataType: string
              description: the Cluster name
            percentused:
              dataType: string
              description: the percentage of capacity currently in use
            podid:
              dataType: string
              description: the Pod ID
            podname:
              dataType: string
              description: the Pod name
            type:
              dataType: short
              description: the capacity type
            zoneid:
              dataType: string
              description: the Zone ID
            zonename:
              dataType: string
              description: the Zone name
        description:
          dataType: string
          description: Zone description
        dhcpprovider:
          dataType: string
          description: the dhcp Provider for the Zone
        displaytext:
          dataType: string
          description: the display text of the zone
        dns1:
          dataType: string
          description: the first DNS for the Zone
        dns2:
          dataType: string
          description: the second DNS for the Zone
        domain:
          dataType: string
          description: Network domain name for the networks in the zone
        domainid:
          dataType: string
          description: the UUID of the containing domain, null for public zones
        domainname:
          dataType: string
          description: the name of the containing domain, null for public zones
        guestcidraddress:
          dataType: string
          description: the guest CIDR address for the Zone
        id:
          dataType: string
          description: Zone id
        internaldns1:
          dataType: string
          description: the first internal DNS for the Zone
        internaldns2:
          dataType: string
          description: the second internal DNS for the Zone
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the Zone
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the Zone
        localstorageenabled:
          dataType: boolean
          description: true if local storage offering enabled, false otherwise
        name:
          dataType: string
          description: Zone name
        networktype:
          dataType: string
          description: the network type of the zone; can be Basic or Advanced
        resourcedetails:
          dataType: map
          description: Meta data associated with the zone (key/value pairs)
          sinceVersion: 4.3.0
        securitygroupsenabled:
          dataType: boolean
          description: true if security groups support is enabled, false otherwise
        tags:
          dataType: set
          description: the list of resource tags associated with zone.
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
          sinceVersion: '4.3'
        zonetoken:
          dataType: string
          description: Zone Token
    user_types:
    - domain
    - root
    - user
  lockAccount:
    description: Locks an account
    isAsync: 'false'
    name: lockAccount
    request:
      parms:
        account:
          dataType: string
          description: Locks the specified account.
          required: 'true'
        domainid:
          dataType: uuid
          description: Locks the specified account on this domain.
          required: 'true'
    response:
      parms:
        accountdetails:
          dataType: map
          description: details for the account
        accounttype:
          dataType: short
          description: account type (admin, domain-admin, user)
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            account
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the account can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by account
          sinceVersion: 4.2.0
        defaultzoneid:
          dataType: string
          description: the default zone of the account
        domain:
          dataType: string
          description: name of the Domain the account belongs too
        domainid:
          dataType: string
          description: id of the Domain the account belongs too
        groups:
          dataType: list
          description: the list of acl groups that account belongs to
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the account
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            account to acquire
        iplimit:
          dataType: string
          description: the total number of public ip addresses this account can acquire
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            account
        iscleanuprequired:
          dataType: boolean
          description: true if the account requires cleanup
        isdefault:
          dataType: boolean
          description: true if account is default, false otherwise
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this account
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the account can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by account
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the account
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            account
          sinceVersion: 3.0.1
        networkdomain:
          dataType: string
          description: the network domain
        networklimit:
          dataType: string
          description: the total number of networks the account can own
          sinceVersion: 3.0.1
        networktotal:
          dataType: long
          description: the total number of networks owned by account
          sinceVersion: 3.0.1
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this account
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the account can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        projectavailable:
          dataType: string
          description: the total number of projects available for administration by
            this account
          sinceVersion: 3.0.1
        projectlimit:
          dataType: string
          description: the total number of projects the account can own
          sinceVersion: 3.0.1
        projecttotal:
          dataType: long
          description: the total number of projects being administrated by this account
          sinceVersion: 3.0.1
        receivedbytes:
          dataType: long
          description: the total number of network traffic bytes received
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this account
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the account can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        sentbytes:
          dataType: long
          description: the total number of network traffic bytes sent
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this account
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this account
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this account
        state:
          dataType: string
          description: the state of the account
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            account
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            account
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            account
        user:
          dataType: list
          description: the list of users associated with account
          parms:
            account:
              dataType: string
              description: the account name of the user
            accountid:
              dataType: string
              description: the account ID of the user
            accounttype:
              dataType: short
              description: the account type of the user
            apikey:
              dataType: string
              description: the api key of the user
            created:
              dataType: date
              description: the date and time the user account was created
            domain:
              dataType: string
              description: the domain name of the user
            domainid:
              dataType: string
              description: the domain ID of the user
            email:
              dataType: string
              description: the user email address
            firstname:
              dataType: string
              description: the user firstname
            id:
              dataType: string
              description: the user ID
            iscallerchilddomain:
              dataType: boolean
              description: the boolean value representing if the updating target is
                in caller's child domain
            isdefault:
              dataType: boolean
              description: true if user is default, false otherwise
              sinceVersion: 4.2.0
            lastname:
              dataType: string
              description: the user lastname
            secretkey:
              dataType: string
              description: the secret key of the user
            state:
              dataType: string
              description: the user state
            timezone:
              dataType: string
              description: the timezone user was created in
            username:
              dataType: string
              description: the user name
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this account
            to acquire
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this account
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this account
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this account
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this account
        volumeavailable:
          dataType: string
          description: the total volume available for this account
        volumelimit:
          dataType: string
          description: the total volume which can be used by this account
        volumetotal:
          dataType: long
          description: the total volume being used by this account
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this account
          sinceVersion: 4.0.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the account can own
          sinceVersion: 4.0.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by account
          sinceVersion: 4.0.0
    user_types:
    - domain
    - root
  lockUser:
    description: Locks a user account
    isAsync: 'false'
    name: lockUser
    request:
      parms:
        dataType: uuid
        description: Locks user by user ID.
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the user
        accountid:
          dataType: string
          description: the account ID of the user
        accounttype:
          dataType: short
          description: the account type of the user
        apikey:
          dataType: string
          description: the api key of the user
        created:
          dataType: date
          description: the date and time the user account was created
        domain:
          dataType: string
          description: the domain name of the user
        domainid:
          dataType: string
          description: the domain ID of the user
        email:
          dataType: string
          description: the user email address
        firstname:
          dataType: string
          description: the user firstname
        id:
          dataType: string
          description: the user ID
        iscallerchilddomain:
          dataType: boolean
          description: the boolean value representing if the updating target is in
            caller's child domain
        isdefault:
          dataType: boolean
          description: true if user is default, false otherwise
          sinceVersion: 4.2.0
        lastname:
          dataType: string
          description: the user lastname
        secretkey:
          dataType: string
          description: the secret key of the user
        state:
          dataType: string
          description: the user state
        timezone:
          dataType: string
          description: the timezone user was created in
        username:
          dataType: string
          description: the user name
    user_types:
    - domain
    - root
  login:
    description: Logs a user into the CloudStack. A successful login attempt will
      generate a JSESSIONID cookie value that can be passed in subsequent Query command
      calls until the "logout" command has been issued or the session has expired.
    isAsync: 'false'
    name: login
    request:
      parms:
        domain:
          dataType: string
          description: 'Path of the domain that the user belongs to. Example: domain=/com/cloud/internal.
            If no domain is passed in, the ROOT (/) domain is assumed.'
          required: 'false'
        domainId:
          dataType: long
          description: The id of the domain that the user belongs to. If both domain
            and domainId are passed in, "domainId" parameter takes precendence
          required: 'false'
        password:
          dataType: string
          description: Hashed password (Default is MD5). If you wish to use any other
            hashing algorithm, you would need to write a custom authentication adapter
            See Docs section.
          required: 'true'
        username:
          dataType: string
          description: Username
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name the user belongs to
        domainid:
          dataType: string
          description: Domain ID that the user belongs to
        firstname:
          dataType: string
          description: first name of the user
        lastname:
          dataType: string
          description: last name of the user
        registered:
          dataType: string
          description: Is user registered
        sessionkey:
          dataType: string
          description: Session key that can be passed in subsequent Query command
            calls
        timeout:
          dataType: integer
          description: the time period before the session has expired
        timezone:
          dataType: string
          description: user time zone
        type:
          dataType: string
          description: the account type (admin, domain-admin, read-only-admin, user)
        userid:
          dataType: string
          description: User ID
        username:
          dataType: string
          description: Username
    user_types:
    - domain
    - root
    - user
  logout:
    description: Logs out the user
    isAsync: 'false'
    name: logout
    request: {}
    response:
      parms:
        dataType: string
        description: Response description
        name: description
    user_types:
    - domain
    - root
    - user
  markDefaultZoneForAccount:
    description: Marks a default zone for this account
    isAsync: 'true'
    name: markDefaultZoneForAccount
    request:
      parms:
        account:
          dataType: string
          description: Name of the account that is to be marked.
          required: 'true'
        domainid:
          dataType: uuid
          description: Marks the account that belongs to the specified domain.
          required: 'true'
        zoneid:
          dataType: uuid
          description: The Zone ID with which the account is to be marked.
          required: 'true'
    response:
      parms:
        accountdetails:
          dataType: map
          description: details for the account
        accounttype:
          dataType: short
          description: account type (admin, domain-admin, user)
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            account
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the account can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by account
          sinceVersion: 4.2.0
        defaultzoneid:
          dataType: string
          description: the default zone of the account
        domain:
          dataType: string
          description: name of the Domain the account belongs too
        domainid:
          dataType: string
          description: id of the Domain the account belongs too
        groups:
          dataType: list
          description: the list of acl groups that account belongs to
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the account
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            account to acquire
        iplimit:
          dataType: string
          description: the total number of public ip addresses this account can acquire
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            account
        iscleanuprequired:
          dataType: boolean
          description: true if the account requires cleanup
        isdefault:
          dataType: boolean
          description: true if account is default, false otherwise
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this account
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the account can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by account
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the account
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            account
          sinceVersion: 3.0.1
        networkdomain:
          dataType: string
          description: the network domain
        networklimit:
          dataType: string
          description: the total number of networks the account can own
          sinceVersion: 3.0.1
        networktotal:
          dataType: long
          description: the total number of networks owned by account
          sinceVersion: 3.0.1
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this account
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the account can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        projectavailable:
          dataType: string
          description: the total number of projects available for administration by
            this account
          sinceVersion: 3.0.1
        projectlimit:
          dataType: string
          description: the total number of projects the account can own
          sinceVersion: 3.0.1
        projecttotal:
          dataType: long
          description: the total number of projects being administrated by this account
          sinceVersion: 3.0.1
        receivedbytes:
          dataType: long
          description: the total number of network traffic bytes received
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this account
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the account can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        sentbytes:
          dataType: long
          description: the total number of network traffic bytes sent
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this account
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this account
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this account
        state:
          dataType: string
          description: the state of the account
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            account
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            account
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            account
        user:
          dataType: list
          description: the list of users associated with account
          parms:
            account:
              dataType: string
              description: the account name of the user
            accountid:
              dataType: string
              description: the account ID of the user
            accounttype:
              dataType: short
              description: the account type of the user
            apikey:
              dataType: string
              description: the api key of the user
            created:
              dataType: date
              description: the date and time the user account was created
            domain:
              dataType: string
              description: the domain name of the user
            domainid:
              dataType: string
              description: the domain ID of the user
            email:
              dataType: string
              description: the user email address
            firstname:
              dataType: string
              description: the user firstname
            id:
              dataType: string
              description: the user ID
            iscallerchilddomain:
              dataType: boolean
              description: the boolean value representing if the updating target is
                in caller's child domain
            isdefault:
              dataType: boolean
              description: true if user is default, false otherwise
              sinceVersion: 4.2.0
            lastname:
              dataType: string
              description: the user lastname
            secretkey:
              dataType: string
              description: the secret key of the user
            state:
              dataType: string
              description: the user state
            timezone:
              dataType: string
              description: the timezone user was created in
            username:
              dataType: string
              description: the user name
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this account
            to acquire
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this account
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this account
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this account
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this account
        volumeavailable:
          dataType: string
          description: the total volume available for this account
        volumelimit:
          dataType: string
          description: the total volume which can be used by this account
        volumetotal:
          dataType: long
          description: the total volume being used by this account
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this account
          sinceVersion: 4.0.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the account can own
          sinceVersion: 4.0.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by account
          sinceVersion: 4.0.0
    sinceVersion: '4.0'
    user_types:
    - root
  migrateSystemVm:
    description: Attempts Migration of a system virtual machine to the host specified.
    isAsync: 'true'
    name: migrateSystemVm
    request:
      parms:
        hostid:
          dataType: uuid
          description: destination Host ID to migrate VM to
          required: 'true'
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine
          required: 'true'
    response:
      parms:
        activeviewersessions:
          dataType: integer
          description: the number of active console sessions for the console proxy
            system vm
        created:
          dataType: date
          description: the date and time the system VM was created
        dns1:
          dataType: string
          description: the first DNS for the system VM
        dns2:
          dataType: string
          description: the second DNS for the system VM
        gateway:
          dataType: string
          description: the gateway for the system VM
        hostid:
          dataType: string
          description: the host ID for the system VM
        hostname:
          dataType: string
          description: the hostname for the system VM
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the system VM
        jobid:
          dataType: string
          description: the job ID associated with the system VM. This is only displayed
            if the router listed is part of a currently running asynchronous job.
        jobstatus:
          dataType: integer
          description: the job status associated with the system VM.  This is only
            displayed if the router listed is part of a currently running asynchronous
            job.
        linklocalip:
          dataType: string
          description: the link local IP address for the system vm
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the system vm
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the system vm
        name:
          dataType: string
          description: the name of the system VM
        networkdomain:
          dataType: string
          description: the network domain for the system VM
        podid:
          dataType: string
          description: the Pod ID for the system VM
        privateip:
          dataType: string
          description: the private IP address for the system VM
        privatemacaddress:
          dataType: string
          description: the private MAC address for the system VM
        privatenetmask:
          dataType: string
          description: the private netmask for the system VM
        publicip:
          dataType: string
          description: the public IP address for the system VM
        publicmacaddress:
          dataType: string
          description: the public MAC address for the system VM
        publicnetmask:
          dataType: string
          description: the public netmask for the system VM
        state:
          dataType: string
          description: the state of the system VM
        systemvmtype:
          dataType: string
          description: the system VM type
        templateid:
          dataType: string
          description: the template ID for the system VM
        zoneid:
          dataType: string
          description: the Zone ID for the system VM
        zonename:
          dataType: string
          description: the Zone name for the system VM
    user_types:
    - root
  migrateVirtualMachine:
    description: Attempts Migration of a VM to a different host or Root volume of
      the vm to a different storage pool
    isAsync: 'true'
    name: migrateVirtualMachine
    request:
      parms:
        hostid:
          dataType: uuid
          description: Destination Host ID to migrate VM to. Required for live migrating
            a VM from host to host
          required: 'false'
        storageid:
          dataType: uuid
          description: Destination storage pool ID to migrate VM volumes to. Required
            for migrating the root disk volume
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - root
  migrateVirtualMachineWithVolume:
    description: Attempts Migration of a VM with its volumes to a different host
    isAsync: 'true'
    name: migrateVirtualMachineWithVolume
    request:
      parms:
        hostid:
          dataType: uuid
          description: Destination Host ID to migrate VM to.
          required: 'true'
        migrateto:
          dataType: map
          description: Map of pool to which each volume should be migrated (volume/pool
            pair)
          required: 'false'
          type: map
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - root
  migrateVolume:
    description: Migrate volume
    isAsync: 'true'
    name: migrateVolume
    request:
      parms:
        livemigrate:
          dataType: boolean
          description: if the volume should be live migrated when it is attached to
            a running vm
          required: 'false'
        storageid:
          dataType: uuid
          description: destination storage pool ID to migrate the volume to
          required: 'true'
        volumeid:
          dataType: uuid
          description: the ID of the volume
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the disk volume
        attached:
          dataType: date
          description: the date the volume was attached to a VM instance
        chaininfo:
          dataType: string
          description: the chain info of the volume
          sinceVersion: '4.4'
        created:
          dataType: date
          description: the date the disk volume was created
        destroyed:
          dataType: boolean
          description: the boolean state of whether the volume is destroyed or not
        deviceid:
          dataType: long
          description: the ID of the device on user vm the volume is attahed to. This
            tag is not returned when the volume is detached.
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the disk volume
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the disk volume
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the disk volume
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the disk volume
        diskofferingdisplaytext:
          dataType: string
          description: the display text of the disk offering
        diskofferingid:
          dataType: string
          description: ID of the disk offering
        diskofferingname:
          dataType: string
          description: name of the disk offering
        displayvolume:
          dataType: boolean
          description: an optional field whether to the display the volume to the
            end user or not.
        domain:
          dataType: string
          description: the domain associated with the disk volume
        domainid:
          dataType: string
          description: the ID of the domain associated with the disk volume
        hypervisor:
          dataType: string
          description: Hypervisor the volume belongs to
        id:
          dataType: string
          description: ID of the disk volume
        isextractable:
          dataType: boolean
          description: true if the volume is extractable, false otherwise
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        maxiops:
          dataType: long
          description: max iops of the disk volume
        miniops:
          dataType: long
          description: min iops of the disk volume
        name:
          dataType: string
          description: name of the disk volume
        path:
          dataType: string
          description: the path of the volume
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes.
        quiescevm:
          dataType: boolean
          description: need quiesce vm or not when taking snapshot
          sinceVersion: '4.3'
        serviceofferingdisplaytext:
          dataType: string
          description: the display text of the service offering for root disk
        serviceofferingid:
          dataType: string
          description: ID of the service offering for root disk
        serviceofferingname:
          dataType: string
          description: name of the service offering for root disk
        size:
          dataType: long
          description: size of the disk volume
        snapshotid:
          dataType: string
          description: ID of the snapshot from which this volume was created
        state:
          dataType: string
          description: the state of the disk volume
        status:
          dataType: string
          description: the status of the volume
        storage:
          dataType: string
          description: name of the primary storage hosting the disk volume
        storageid:
          dataType: string
          description: id of the primary storage hosting the disk volume; returned
            to admin user only
          sinceVersion: '4.3'
        storagetype:
          dataType: string
          description: shared or local storage
        tags:
          dataType: set
          description: the list of resource tags associated with volume
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        type:
          dataType: string
          description: type of the disk volume (ROOT or DATADISK)
        virtualmachineid:
          dataType: string
          description: id of the virtual machine
        vmdisplayname:
          dataType: string
          description: display name of the virtual machine
        vmname:
          dataType: string
          description: name of the virtual machine
        vmstate:
          dataType: string
          description: state of the virtual machine
        zoneid:
          dataType: string
          description: ID of the availability zone
        zonename:
          dataType: string
          description: name of the availability zone
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  prepareHostForMaintenance:
    description: Prepares a host for maintenance.
    isAsync: 'true'
    name: prepareHostForMaintenance
    request:
      parms:
        dataType: uuid
        description: the host ID
        name: id
        required: 'true'
    response:
      parms:
        averageload:
          dataType: long
          description: the cpu average load on the host
        capabilities:
          dataType: string
          description: capabilities of the host
        clusterid:
          dataType: string
          description: the cluster ID of the host
        clustername:
          dataType: string
          description: the cluster name of the host
        clustertype:
          dataType: string
          description: the cluster type of the cluster that host belongs to
        cpuallocated:
          dataType: string
          description: the amount of the host's CPU currently allocated
        cpunumber:
          dataType: integer
          description: the CPU number of the host
        cpusockets:
          dataType: integer
          description: the number of CPU sockets on the host
        cpuspeed:
          dataType: long
          description: the CPU speed of the host
        cpuused:
          dataType: string
          description: the amount of the host's CPU currently used
        cpuwithoverprovisioning:
          dataType: string
          description: 'the amount of the host''s CPU after applying the cpu.overprovisioning.factor '
        created:
          dataType: date
          description: the date and time the host was created
        details:
          dataType: map
          description: Host details in key/value pairs.
          sinceVersion: '4.5'
        disconnected:
          dataType: date
          description: true if the host is disconnected. False otherwise.
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the host
        events:
          dataType: string
          description: events available for the host
        gpugroup:
          dataType: list
          description: GPU cards present in the host
          parms:
            gpugroupname:
              dataType: string
              description: GPU cards present in the host
            vgpu:
              dataType: list
              description: the list of enabled vGPUs
              parms:
                maxcapacity:
                  dataType: long
                  description: Maximum vgpu can be created with this vgpu type on
                    the given gpu group
                maxheads:
                  dataType: long
                  description: Maximum displays per user
                maxresolutionx:
                  dataType: long
                  description: Maximum X resolution per display
                maxresolutiony:
                  dataType: long
                  description: Maximum Y resolution per display
                maxvgpuperpgpu:
                  dataType: long
                  description: Maximum no. of vgpu per gpu card (pgpu)
                remainingcapacity:
                  dataType: long
                  description: Remaining capacity in terms of no. of more VMs that
                    can be deployped with this vGPU type
                vgputype:
                  dataType: string
                  description: Model Name of vGPU
                videoram:
                  dataType: long
                  description: Video RAM for this vGPU type
          sinceVersion: '4.4'
        hahost:
          dataType: boolean
          description: true if the host is Ha host (dedicated to vms started by HA
            process; false otherwise
        hasenoughcapacity:
          dataType: boolean
          description: true if this host has enough CPU and RAM capacity to migrate
            a VM to it, false otherwise
        hosttags:
          dataType: string
          description: comma-separated list of tags for the host
        hypervisor:
          dataType: hypervisortype
          description: the host hypervisor
        hypervisorversion:
          dataType: string
          description: the hypervisor version
        id:
          dataType: string
          description: the ID of the host
        ipaddress:
          dataType: string
          description: the IP address of the host
        islocalstorageactive:
          dataType: boolean
          description: true if local storage is active, false otherwise
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        lastpinged:
          dataType: date
          description: the date and time the host was last pinged
        managementserverid:
          dataType: long
          description: the management server ID of the host
        memoryallocated:
          dataType: long
          description: the amount of the host's memory currently allocated
        memorytotal:
          dataType: long
          description: the memory total of the host
        memoryused:
          dataType: long
          description: the amount of the host's memory currently used
        name:
          dataType: string
          description: the name of the host
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the host
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        oscategoryid:
          dataType: string
          description: the OS category ID of the host
        oscategoryname:
          dataType: string
          description: the OS category name of the host
        podid:
          dataType: string
          description: the Pod ID of the host
        podname:
          dataType: string
          description: the Pod name of the host
        removed:
          dataType: date
          description: the date and time the host was removed
        resourcestate:
          dataType: string
          description: the resource state of the host
        state:
          dataType: status
          description: the state of the host
        suitableformigration:
          dataType: boolean
          description: true if this host is suitable(has enough capacity and satisfies
            all conditions like hosttags, max guests vm limit etc) to migrate a VM
            to it , false otherwise
        type:
          dataType: type
          description: the host type
        version:
          dataType: string
          description: the host version
        zoneid:
          dataType: string
          description: the Zone ID of the host
        zonename:
          dataType: string
          description: the Zone name of the host
    user_types:
    - root
  prepareTemplate:
    description: load template into primary storage
    isAsync: 'false'
    name: prepareTemplate
    request:
      parms:
        templateid:
          dataType: uuid
          description: template ID of the template to be prepared in primary storage(s).
          required: 'true'
        zoneid:
          dataType: uuid
          description: zone ID of the template to be prepared in primary storage(s).
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name to which the template belongs
        accountid:
          dataType: string
          description: the account id to which the template belongs
        bootable:
          dataType: boolean
          description: true if the ISO is bootable, false otherwise
        checksum:
          dataType: string
          description: checksum of the template
        created:
          dataType: date
          description: the date this template was created
        crossZones:
          dataType: boolean
          description: true if the template is managed across all Zones, false otherwise
        details:
          dataType: map
          description: additional key/value details tied with template
        displaytext:
          dataType: string
          description: the template display text
        domain:
          dataType: string
          description: the name of the domain to which the template belongs
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        format:
          dataType: imageformat
          description: the format of the template.
        hostid:
          dataType: string
          description: the ID of the secondary storage host for the template
        hostname:
          dataType: string
          description: the name of the secondary storage host for the template
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the template ID
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
        isextractable:
          dataType: boolean
          description: true if the template is extractable, false otherwise
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        isready:
          dataType: boolean
          description: true if the template is ready to be deployed from, false otherwise.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the template name
        ostypeid:
          dataType: string
          description: the ID of the OS type for this template.
        ostypename:
          dataType: string
          description: the name of the OS type for this template.
        passwordenabled:
          dataType: boolean
          description: true if the reset password feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the template
        projectid:
          dataType: string
          description: the project id of the template
        removed:
          dataType: date
          description: the date this template was removed
        size:
          dataType: long
          description: the size of the template
        sourcetemplateid:
          dataType: string
          description: the template ID of the parent template if present
        sshkeyenabled:
          dataType: boolean
          description: true if template is sshkey enabled, false otherwise
        status:
          dataType: string
          description: the status of the template
        tags:
          dataType: set
          description: the list of resource tags associated with tempate
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatetag:
          dataType: string
          description: the tag of this template
        templatetype:
          dataType: string
          description: the type of the template
        zoneid:
          dataType: string
          description: the ID of the zone for this template
        zonename:
          dataType: string
          description: the name of the zone for this template
    user_types:
    - root
  queryAsyncJobResult:
    description: Retrieves the current status of asynchronous job.
    isAsync: 'false'
    name: queryAsyncJobResult
    request:
      parms:
        dataType: uuid
        description: the ID of the asychronous job
        name: jobid
        required: 'true'
    response:
      parms:
        accountid:
          dataType: string
          description: the account that executed the async command
        cmd:
          dataType: string
          description: the async command executed
        created:
          dataType: date
          description: '  the created date of the job'
        jobid:
          description: the ID of the async job
        jobinstanceid:
          dataType: string
          description: the unique ID of the instance/entity object related to the
            job
        jobinstancetype:
          dataType: string
          description: the instance/entity object related to the job
        jobprocstatus:
          dataType: integer
          description: the progress information of the PENDING job
        jobresult:
          dataType: responseobject
          description: the result reason
        jobresultcode:
          dataType: integer
          description: the result code for the job
        jobresulttype:
          dataType: string
          description: the result type
        jobstatus:
          dataType: integer
          description: the current job status-should be 0 for PENDING
        userid:
          dataType: string
          description: the user that executed the async command
    user_types:
    - domain
    - root
    - user
  rebootRouter:
    description: Starts a router.
    isAsync: 'true'
    name: rebootRouter
    request:
      parms:
        dataType: uuid
        description: the ID of the router
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the router
        created:
          dataType: date
          description: the date and time the router was created
        dns1:
          dataType: string
          description: the first DNS for the router
        dns2:
          dataType: string
          description: the second DNS for the router
        domain:
          dataType: string
          description: the domain associated with the router
        domainid:
          dataType: string
          description: the domain ID associated with the router
        gateway:
          dataType: string
          description: the gateway for the router
        guestipaddress:
          dataType: string
          description: the guest IP address for the router
        guestmacaddress:
          dataType: string
          description: the guest MAC address for the router
        guestnetmask:
          dataType: string
          description: the guest netmask for the router
        guestnetworkid:
          dataType: string
          description: the ID of the corresponding guest network
        hostid:
          dataType: string
          description: the host ID for the router
        hostname:
          dataType: string
          description: the hostname for the router
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the id of the router
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the router
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the router
        isredundantrouter:
          dataType: boolean
          description: if this router is an redundant virtual router
        linklocalip:
          dataType: string
          description: the link local IP address for the router
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the router
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the router
        linklocalnetworkid:
          dataType: string
          description: the ID of the corresponding link local network
        name:
          dataType: string
          description: the name of the router
        networkdomain:
          dataType: string
          description: the network domain for the router
        nic:
          dataType: set
          description: the list of nics associated with the router
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
          sinceVersion: '4.0'
        podid:
          dataType: string
          description: the Pod ID for the router
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        publicip:
          dataType: string
          description: the public IP address for the router
        publicmacaddress:
          dataType: string
          description: the public MAC address for the router
        publicnetmask:
          dataType: string
          description: the public netmask for the router
        publicnetworkid:
          dataType: string
          description: the ID of the corresponding public network
        redundantstate:
          dataType: string
          description: the state of redundant virtual router
        requiresupgrade:
          dataType: boolean
          description: true if the router template requires upgrader
        role:
          dataType: string
          description: role of the domain router
        scriptsversion:
          dataType: string
          description: the version of scripts
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        state:
          dataType: state
          description: the state of the router
        templateid:
          dataType: string
          description: the template ID for the router
        version:
          dataType: string
          description: the version of template
        vpcid:
          dataType: string
          description: VPC the router belongs to
        zoneid:
          dataType: string
          description: the Zone ID for the router
        zonename:
          dataType: string
          description: the Zone name for the router
    user_types:
    - domain
    - root
  rebootSystemVm:
    description: Reboots a system VM.
    isAsync: 'true'
    name: rebootSystemVm
    request:
      parms:
        dataType: uuid
        description: The ID of the system virtual machine
        name: id
        required: 'true'
    response:
      parms:
        activeviewersessions:
          dataType: integer
          description: the number of active console sessions for the console proxy
            system vm
        created:
          dataType: date
          description: the date and time the system VM was created
        dns1:
          dataType: string
          description: the first DNS for the system VM
        dns2:
          dataType: string
          description: the second DNS for the system VM
        gateway:
          dataType: string
          description: the gateway for the system VM
        hostid:
          dataType: string
          description: the host ID for the system VM
        hostname:
          dataType: string
          description: the hostname for the system VM
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the system VM
        jobid:
          dataType: string
          description: the job ID associated with the system VM. This is only displayed
            if the router listed is part of a currently running asynchronous job.
        jobstatus:
          dataType: integer
          description: the job status associated with the system VM.  This is only
            displayed if the router listed is part of a currently running asynchronous
            job.
        linklocalip:
          dataType: string
          description: the link local IP address for the system vm
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the system vm
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the system vm
        name:
          dataType: string
          description: the name of the system VM
        networkdomain:
          dataType: string
          description: the network domain for the system VM
        podid:
          dataType: string
          description: the Pod ID for the system VM
        privateip:
          dataType: string
          description: the private IP address for the system VM
        privatemacaddress:
          dataType: string
          description: the private MAC address for the system VM
        privatenetmask:
          dataType: string
          description: the private netmask for the system VM
        publicip:
          dataType: string
          description: the public IP address for the system VM
        publicmacaddress:
          dataType: string
          description: the public MAC address for the system VM
        publicnetmask:
          dataType: string
          description: the public netmask for the system VM
        state:
          dataType: string
          description: the state of the system VM
        systemvmtype:
          dataType: string
          description: the system VM type
        templateid:
          dataType: string
          description: the template ID for the system VM
        zoneid:
          dataType: string
          description: the Zone ID for the system VM
        zonename:
          dataType: string
          description: the Zone name for the system VM
    user_types:
    - root
  rebootVirtualMachine:
    description: Reboots a virtual machine.
    isAsync: 'true'
    name: rebootVirtualMachine
    request:
      parms:
        dataType: uuid
        description: The ID of the virtual machine
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  reconnectHost:
    description: Reconnects a host.
    isAsync: 'true'
    name: reconnectHost
    request:
      parms:
        dataType: uuid
        description: the host ID
        name: id
        required: 'true'
    response:
      parms:
        averageload:
          dataType: long
          description: the cpu average load on the host
        capabilities:
          dataType: string
          description: capabilities of the host
        clusterid:
          dataType: string
          description: the cluster ID of the host
        clustername:
          dataType: string
          description: the cluster name of the host
        clustertype:
          dataType: string
          description: the cluster type of the cluster that host belongs to
        cpuallocated:
          dataType: string
          description: the amount of the host's CPU currently allocated
        cpunumber:
          dataType: integer
          description: the CPU number of the host
        cpusockets:
          dataType: integer
          description: the number of CPU sockets on the host
        cpuspeed:
          dataType: long
          description: the CPU speed of the host
        cpuused:
          dataType: string
          description: the amount of the host's CPU currently used
        cpuwithoverprovisioning:
          dataType: string
          description: 'the amount of the host''s CPU after applying the cpu.overprovisioning.factor '
        created:
          dataType: date
          description: the date and time the host was created
        details:
          dataType: map
          description: Host details in key/value pairs.
          sinceVersion: '4.5'
        disconnected:
          dataType: date
          description: true if the host is disconnected. False otherwise.
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the host
        events:
          dataType: string
          description: events available for the host
        gpugroup:
          dataType: list
          description: GPU cards present in the host
          parms:
            gpugroupname:
              dataType: string
              description: GPU cards present in the host
            vgpu:
              dataType: list
              description: the list of enabled vGPUs
              parms:
                maxcapacity:
                  dataType: long
                  description: Maximum vgpu can be created with this vgpu type on
                    the given gpu group
                maxheads:
                  dataType: long
                  description: Maximum displays per user
                maxresolutionx:
                  dataType: long
                  description: Maximum X resolution per display
                maxresolutiony:
                  dataType: long
                  description: Maximum Y resolution per display
                maxvgpuperpgpu:
                  dataType: long
                  description: Maximum no. of vgpu per gpu card (pgpu)
                remainingcapacity:
                  dataType: long
                  description: Remaining capacity in terms of no. of more VMs that
                    can be deployped with this vGPU type
                vgputype:
                  dataType: string
                  description: Model Name of vGPU
                videoram:
                  dataType: long
                  description: Video RAM for this vGPU type
          sinceVersion: '4.4'
        hahost:
          dataType: boolean
          description: true if the host is Ha host (dedicated to vms started by HA
            process; false otherwise
        hasenoughcapacity:
          dataType: boolean
          description: true if this host has enough CPU and RAM capacity to migrate
            a VM to it, false otherwise
        hosttags:
          dataType: string
          description: comma-separated list of tags for the host
        hypervisor:
          dataType: hypervisortype
          description: the host hypervisor
        hypervisorversion:
          dataType: string
          description: the hypervisor version
        id:
          dataType: string
          description: the ID of the host
        ipaddress:
          dataType: string
          description: the IP address of the host
        islocalstorageactive:
          dataType: boolean
          description: true if local storage is active, false otherwise
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        lastpinged:
          dataType: date
          description: the date and time the host was last pinged
        managementserverid:
          dataType: long
          description: the management server ID of the host
        memoryallocated:
          dataType: long
          description: the amount of the host's memory currently allocated
        memorytotal:
          dataType: long
          description: the memory total of the host
        memoryused:
          dataType: long
          description: the amount of the host's memory currently used
        name:
          dataType: string
          description: the name of the host
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the host
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        oscategoryid:
          dataType: string
          description: the OS category ID of the host
        oscategoryname:
          dataType: string
          description: the OS category name of the host
        podid:
          dataType: string
          description: the Pod ID of the host
        podname:
          dataType: string
          description: the Pod name of the host
        removed:
          dataType: date
          description: the date and time the host was removed
        resourcestate:
          dataType: string
          description: the resource state of the host
        state:
          dataType: status
          description: the state of the host
        suitableformigration:
          dataType: boolean
          description: true if this host is suitable(has enough capacity and satisfies
            all conditions like hosttags, max guests vm limit etc) to migrate a VM
            to it , false otherwise
        type:
          dataType: type
          description: the host type
        version:
          dataType: string
          description: the host version
        zoneid:
          dataType: string
          description: the Zone ID of the host
        zonename:
          dataType: string
          description: the Zone name of the host
    user_types:
    - root
  recoverVirtualMachine:
    description: Recovers a virtual machine.
    isAsync: 'false'
    name: recoverVirtualMachine
    request:
      parms:
        dataType: uuid
        description: The ID of the virtual machine
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
  registerIso:
    description: Registers an existing ISO into the CloudStack Cloud.
    isAsync: 'false'
    name: registerIso
    request:
      parms:
        account:
          dataType: string
          description: an optional account name. Must be used with domainId.
          required: 'false'
        bootable:
          dataType: boolean
          description: true if this ISO is bootable. If not passed explicitly its
            assumed to be true
          required: 'false'
        checksum:
          dataType: string
          description: the MD5 checksum value of this ISO
          required: 'false'
        displaytext:
          dataType: string
          description: the display text of the ISO. This is usually used for display
            purposes.
          required: 'true'
        domainid:
          dataType: uuid
          description: an optional domainId. If the account parameter is used, domainId
            must also be used.
          required: 'false'
        imagestoreuuid:
          dataType: string
          description: Image store uuid
          required: 'false'
        isdynamicallyscalable:
          dataType: boolean
          description: true if iso contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory
          required: 'false'
        isextractable:
          dataType: boolean
          description: true if the iso or its derivatives are extractable; default
            is false
          required: 'false'
        isfeatured:
          dataType: boolean
          description: true if you want this ISO to be featured
          required: 'false'
        ispublic:
          dataType: boolean
          description: true if you want to register the ISO to be publicly available
            to all users, false otherwise.
          required: 'false'
        name:
          dataType: string
          description: the name of the ISO
          required: 'true'
        ostypeid:
          dataType: uuid
          description: the ID of the OS Type that best represents the OS of this ISO.
            If the iso is bootable this parameter needs to be passed
          required: 'false'
        projectid:
          dataType: uuid
          description: Register iso for the project
          required: 'false'
        url:
          dataType: string
          description: the URL to where the ISO is currently being hosted
          required: 'true'
        zoneid:
          dataType: uuid
          description: the ID of the zone you wish to register the ISO to.
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name to which the template belongs
        accountid:
          dataType: string
          description: the account id to which the template belongs
        bootable:
          dataType: boolean
          description: true if the ISO is bootable, false otherwise
        checksum:
          dataType: string
          description: checksum of the template
        created:
          dataType: date
          description: the date this template was created
        crossZones:
          dataType: boolean
          description: true if the template is managed across all Zones, false otherwise
        details:
          dataType: map
          description: additional key/value details tied with template
        displaytext:
          dataType: string
          description: the template display text
        domain:
          dataType: string
          description: the name of the domain to which the template belongs
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        format:
          dataType: imageformat
          description: the format of the template.
        hostid:
          dataType: string
          description: the ID of the secondary storage host for the template
        hostname:
          dataType: string
          description: the name of the secondary storage host for the template
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the template ID
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
        isextractable:
          dataType: boolean
          description: true if the template is extractable, false otherwise
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        isready:
          dataType: boolean
          description: true if the template is ready to be deployed from, false otherwise.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the template name
        ostypeid:
          dataType: string
          description: the ID of the OS type for this template.
        ostypename:
          dataType: string
          description: the name of the OS type for this template.
        passwordenabled:
          dataType: boolean
          description: true if the reset password feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the template
        projectid:
          dataType: string
          description: the project id of the template
        removed:
          dataType: date
          description: the date this template was removed
        size:
          dataType: long
          description: the size of the template
        sourcetemplateid:
          dataType: string
          description: the template ID of the parent template if present
        sshkeyenabled:
          dataType: boolean
          description: true if template is sshkey enabled, false otherwise
        status:
          dataType: string
          description: the status of the template
        tags:
          dataType: set
          description: the list of resource tags associated with tempate
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatetag:
          dataType: string
          description: the tag of this template
        templatetype:
          dataType: string
          description: the type of the template
        zoneid:
          dataType: string
          description: the ID of the zone for this template
        zonename:
          dataType: string
          description: the name of the zone for this template
    user_types:
    - domain
    - root
    - user
  registerSSHKeyPair:
    description: Register a public key in a keypair under a certain name
    isAsync: 'false'
    name: registerSSHKeyPair
    request:
      parms:
        account:
          dataType: string
          description: an optional account for the ssh key. Must be used with domainId.
          required: 'false'
        domainid:
          dataType: uuid
          description: an optional domainId for the ssh key. If the account parameter
            is used, domainId must also be used.
          required: 'false'
        name:
          dataType: string
          description: Name of the keypair
          required: 'true'
        projectid:
          dataType: uuid
          description: an optional project for the ssh key
          required: 'false'
        publickey:
          dataType: string
          description: Public key material of the keypair
          required: 'true'
    response:
      parms:
        fingerprint:
          dataType: string
          description: Fingerprint of the public key
        name:
          dataType: string
          description: Name of the keypair
    user_types:
    - domain
    - root
    - user
  registerTemplate:
    description: 'Registers an existing template into the CloudStack cloud. '
    isAsync: 'false'
    name: registerTemplate
    request:
      parms:
        account:
          dataType: string
          description: an optional accountName. Must be used with domainId.
          required: 'false'
        bits:
          dataType: integer
          description: 32 or 64 bits support. 64 by default
          required: 'false'
        checksum:
          dataType: string
          description: the MD5 checksum value of this template
          required: 'false'
        details:
          dataType: map
          description: Template details in key/value pairs.
          required: 'false'
          type: map
        displaytext:
          dataType: string
          description: the display text of the template. This is usually used for
            display purposes.
          required: 'true'
        domainid:
          dataType: uuid
          description: an optional domainId. If the account parameter is used, domainId
            must also be used.
          required: 'false'
        format:
          dataType: string
          description: the format for the template. Possible values include QCOW2,
            RAW, and VHD.
          required: 'true'
        hypervisor:
          dataType: string
          description: the target hypervisor for the template
          required: 'true'
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
          required: 'false'
        isextractable:
          dataType: boolean
          description: true if the template or its derivatives are extractable; default
            is false
          required: 'false'
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
          required: 'false'
        ispublic:
          dataType: boolean
          description: true if the template is available to all accounts; default
            is true
          required: 'false'
        isrouting:
          dataType: boolean
          description: true if the template type is routing i.e., if template is used
            to deploy router
          required: 'false'
        name:
          dataType: string
          description: the name of the template
          required: 'true'
        ostypeid:
          dataType: uuid
          description: the ID of the OS Type that best represents the OS of this template.
          required: 'true'
        passwordenabled:
          dataType: boolean
          description: true if the template supports the password reset feature; default
            is false
          required: 'false'
        projectid:
          dataType: uuid
          description: Register template for the project
          required: 'false'
        requireshvm:
          dataType: boolean
          description: true if this template requires HVM
          required: 'false'
        sshkeyenabled:
          dataType: boolean
          description: true if the template supports the sshkey upload feature; default
            is false
          required: 'false'
        templatetag:
          dataType: string
          description: the tag for this template.
          required: 'false'
        url:
          dataType: string
          description: the URL of where the template is hosted. Possible URL include
            http:// and https://
          required: 'true'
        zoneid:
          dataType: uuid
          description: the ID of the zone the template is to be hosted on
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name to which the template belongs
        accountid:
          dataType: string
          description: the account id to which the template belongs
        bootable:
          dataType: boolean
          description: true if the ISO is bootable, false otherwise
        checksum:
          dataType: string
          description: checksum of the template
        created:
          dataType: date
          description: the date this template was created
        crossZones:
          dataType: boolean
          description: true if the template is managed across all Zones, false otherwise
        details:
          dataType: map
          description: additional key/value details tied with template
        displaytext:
          dataType: string
          description: the template display text
        domain:
          dataType: string
          description: the name of the domain to which the template belongs
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        format:
          dataType: imageformat
          description: the format of the template.
        hostid:
          dataType: string
          description: the ID of the secondary storage host for the template
        hostname:
          dataType: string
          description: the name of the secondary storage host for the template
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the template ID
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
        isextractable:
          dataType: boolean
          description: true if the template is extractable, false otherwise
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        isready:
          dataType: boolean
          description: true if the template is ready to be deployed from, false otherwise.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the template name
        ostypeid:
          dataType: string
          description: the ID of the OS type for this template.
        ostypename:
          dataType: string
          description: the name of the OS type for this template.
        passwordenabled:
          dataType: boolean
          description: true if the reset password feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the template
        projectid:
          dataType: string
          description: the project id of the template
        removed:
          dataType: date
          description: the date this template was removed
        size:
          dataType: long
          description: the size of the template
        sourcetemplateid:
          dataType: string
          description: the template ID of the parent template if present
        sshkeyenabled:
          dataType: boolean
          description: true if template is sshkey enabled, false otherwise
        status:
          dataType: string
          description: the status of the template
        tags:
          dataType: set
          description: the list of resource tags associated with tempate
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatetag:
          dataType: string
          description: the tag of this template
        templatetype:
          dataType: string
          description: the type of the template
        zoneid:
          dataType: string
          description: the ID of the zone for this template
        zonename:
          dataType: string
          description: the name of the zone for this template
    user_types:
    - domain
    - root
    - user
  registerUserKeys:
    description: This command allows a user to register for the developer API, returning
      a secret key and an API key. This request is made through the integration API
      port, so it is a privileged command and must be made on behalf of a user. It
      is up to the implementer just how the username and password are entered, and
      then how that translates to an integration API request. Both secret key and
      API key should be returned to the user
    isAsync: 'false'
    name: registerUserKeys
    request:
      parms:
        dataType: uuid
        description: User id
        name: id
        required: 'true'
    response:
      parms:
        apikey:
          dataType: string
          description: the api key of the registered user
        secretkey:
          dataType: string
          description: the secret key of the registered user
    user_types:
    - domain
    - root
    - user
  releaseDedicatedCluster:
    description: Release the dedication for cluster
    isAsync: 'true'
    name: releaseDedicatedCluster
    request:
      parms:
        dataType: uuid
        description: the ID of the Cluster
        name: clusterid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  releaseDedicatedGuestVlanRange:
    description: Releases a dedicated guest vlan range to the system
    isAsync: 'true'
    name: releaseDedicatedGuestVlanRange
    request:
      parms:
        dataType: uuid
        description: the ID of the dedicated guest vlan range
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  releaseDedicatedHost:
    description: Release the dedication for host
    isAsync: 'true'
    name: releaseDedicatedHost
    request:
      parms:
        dataType: uuid
        description: the ID of the host
        name: hostid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  releaseDedicatedPod:
    description: Release the dedication for the pod
    isAsync: 'true'
    name: releaseDedicatedPod
    request:
      parms:
        dataType: uuid
        description: the ID of the Pod
        name: podid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  releaseDedicatedZone:
    description: Release dedication of zone
    isAsync: 'true'
    name: releaseDedicatedZone
    request:
      parms:
        dataType: uuid
        description: the ID of the Zone
        name: zoneid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  releaseHostReservation:
    description: Releases host reservation.
    isAsync: 'true'
    name: releaseHostReservation
    request:
      parms:
        dataType: uuid
        description: the host ID
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  releasePublicIpRange:
    description: Releases a Public IP range back to the system pool
    isAsync: 'false'
    name: releasePublicIpRange
    request:
      parms:
        dataType: uuid
        description: the id of the Public IP range
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  removeCertFromLoadBalancer:
    description: Removes a certificate from a Load Balancer Rule
    isAsync: 'true'
    name: removeCertFromLoadBalancer
    request:
      parms:
        dataType: uuid
        description: the ID of the load balancer rule
        name: lbruleid
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  removeFromGlobalLoadBalancerRule:
    description: Removes a load balancer rule association with global load balancer
      rule
    isAsync: 'true'
    name: removeFromGlobalLoadBalancerRule
    request:
      parms:
        id:
          dataType: uuid
          description: The ID of the load balancer rule
          required: 'true'
        loadbalancerrulelist:
          dataType: list
          description: the list load balancer rules that will be assigned to gloabal
            load balacner rule
          required: 'true'
          type: list
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  removeFromLoadBalancerRule:
    description: Removes a virtual machine or a list of virtual machines from a load
      balancer rule.
    isAsync: 'true'
    name: removeFromLoadBalancerRule
    request:
      parms:
        id:
          dataType: uuid
          description: The ID of the load balancer rule
          required: 'true'
        virtualmachineids:
          dataType: list
          description: the list of IDs of the virtual machines that are being removed
            from the load balancer rule (i.e. virtualMachineIds=1,2,3)
          required: 'false'
          type: list
        vmidipmap:
          dataType: map
          description: VM ID and IP map, vmidipmap[0].vmid=1 vmidipmap[0].ip=10.1.1.75
          required: 'false'
          sinceVersion: '4.4'
          type: map
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  removeGuestOs:
    description: Removes a Guest OS from listing.
    isAsync: 'true'
    name: removeGuestOs
    request:
      parms:
        dataType: uuid
        description: ID of the guest OS
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 4.4.0
    user_types:
    - root
  removeGuestOsMapping:
    description: Removes a Guest OS Mapping.
    isAsync: 'true'
    name: removeGuestOsMapping
    request:
      parms:
        dataType: uuid
        description: ID of the guest OS mapping
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 4.4.0
    user_types:
    - root
  removeIpFromNic:
    description: Removes secondary IP from the NIC.
    isAsync: 'true'
    name: removeIpFromNic
    request:
      parms:
        dataType: uuid
        description: the ID of the secondary ip address to nic
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  removeNicFromVirtualMachine:
    description: Removes VM from specified network by deleting a NIC
    isAsync: 'true'
    name: removeNicFromVirtualMachine
    request:
      parms:
        nicid:
          dataType: uuid
          description: NIC ID
          required: 'true'
        virtualmachineid:
          dataType: uuid
          description: Virtual Machine ID
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  removeRegion:
    description: Removes specified region
    isAsync: 'false'
    name: removeRegion
    request:
      parms:
        dataType: integer
        description: ID of the region to delete
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  removeResourceDetail:
    description: Removes detail for the Resource.
    isAsync: 'true'
    name: removeResourceDetail
    request:
      parms:
        key:
          dataType: string
          description: Delete details matching key/value pairs
          required: 'false'
        resourceid:
          dataType: string
          description: Delete details for resource id
          required: 'true'
        resourcetype:
          dataType: string
          description: Delete detail by resource type
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  removeVpnUser:
    description: Removes vpn user
    isAsync: 'true'
    name: removeVpnUser
    request:
      parms:
        account:
          dataType: string
          description: an optional account for the vpn user. Must be used with domainId.
          required: 'false'
        domainid:
          dataType: uuid
          description: an optional domainId for the vpn user. If the account parameter
            is used, domainId must also be used.
          required: 'false'
        projectid:
          dataType: uuid
          description: remove vpn user from the project
          required: 'false'
        username:
          dataType: string
          description: username for the vpn user
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  replaceNetworkACLList:
    description: Replaces ACL associated with a Network or private gateway
    isAsync: 'true'
    name: replaceNetworkACLList
    request:
      parms:
        aclid:
          dataType: uuid
          description: the ID of the network ACL
          required: 'true'
        gatewayid:
          dataType: uuid
          description: the ID of the private gateway
          required: 'false'
        networkid:
          dataType: uuid
          description: the ID of the network
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  resetApiLimit:
    description: Reset api count
    isAsync: 'false'
    name: resetApiLimit
    request:
      parms:
        dataType: uuid
        description: the ID of the acount whose limit to be reset
        name: account
        required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the api remaining count
        accountid:
          dataType: string
          description: the account uuid of the api remaining count
        apiAllowed:
          dataType: int
          description: currently allowed number of apis
        apiIssued:
          dataType: int
          description: number of api already issued
        expireAfter:
          dataType: long
          description: seconds left to reset counters
    user_types:
    - root
  resetPasswordForVirtualMachine:
    description: Resets the password for virtual machine. The virtual machine must
      be in a "Stopped" state and the template must already support this feature for
      this command to take effect. [async]
    isAsync: 'true'
    name: resetPasswordForVirtualMachine
    request:
      parms:
        dataType: uuid
        description: The ID of the virtual machine
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  resetSSHKeyForVirtualMachine:
    description: Resets the SSH Key for virtual machine. The virtual machine must
      be in a "Stopped" state. [async]
    isAsync: 'true'
    name: resetSSHKeyForVirtualMachine
    request:
      parms:
        account:
          dataType: string
          description: an optional account for the ssh key. Must be used with domainId.
          required: 'false'
        domainid:
          dataType: uuid
          description: an optional domainId for the virtual machine. If the account
            parameter is used, domainId must also be used.
          required: 'false'
        id:
          dataType: uuid
          description: The ID of the virtual machine
          required: 'true'
        keypair:
          dataType: string
          description: name of the ssh key pair used to login to the virtual machine
          required: 'true'
        projectid:
          dataType: uuid
          description: an optional project for the ssh key
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  resetVpnConnection:
    description: Reset site to site vpn connection
    isAsync: 'true'
    name: resetVpnConnection
    request:
      parms:
        account:
          dataType: string
          description: an optional account for connection. Must be used with domainId.
          required: 'false'
        domainid:
          dataType: uuid
          description: an optional domainId for connection. If the account parameter
            is used, domainId must also be used.
          required: 'false'
        id:
          dataType: uuid
          description: id of vpn connection
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the owner
        cidrlist:
          dataType: string
          description: guest cidr list of the customer gateway
        created:
          dataType: date
          description: the date and time the host was created
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the owner
        dpd:
          dataType: boolean
          description: if DPD is enabled for customer gateway
        esplifetime:
          dataType: long
          description: Lifetime of ESP SA of customer gateway
        esppolicy:
          dataType: string
          description: ESP policy of the customer gateway
        fordisplay:
          dataType: boolean
          description: is connection for display to the regular user
          sinceVersion: '4.4'
        gateway:
          dataType: string
          description: public ip address id of the customer gateway
        id:
          dataType: string
          description: the connection ID
        ikelifetime:
          dataType: long
          description: Lifetime of IKE SA of customer gateway
        ikepolicy:
          dataType: string
          description: IKE policy of the customer gateway
        ipsecpsk:
          dataType: string
          description: IPsec Preshared-Key of the customer gateway
        passive:
          dataType: boolean
          description: State of vpn connection
        project:
          dataType: string
          description: the project name
        projectid:
          dataType: string
          description: the project id
        publicip:
          dataType: string
          description: the public IP address
        removed:
          dataType: date
          description: the date and time the host was removed
        s2scustomergatewayid:
          dataType: string
          description: the customer gateway ID
        s2svpngatewayid:
          dataType: string
          description: the vpn gateway ID
        state:
          dataType: string
          description: State of vpn connection
    user_types:
    - domain
    - root
    - user
  resizeVolume:
    description: Resizes a volume
    isAsync: 'true'
    name: resizeVolume
    request:
      parms:
        diskofferingid:
          dataType: uuid
          description: new disk offering id
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the disk volume
          required: 'true'
        maxiops:
          dataType: long
          description: New maximum number of IOPS
          required: 'false'
        miniops:
          dataType: long
          description: New minimum number of IOPS
          required: 'false'
        shrinkok:
          dataType: boolean
          description: Verify OK to Shrink
          required: 'false'
        size:
          dataType: long
          description: New volume size in GB
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the disk volume
        attached:
          dataType: date
          description: the date the volume was attached to a VM instance
        chaininfo:
          dataType: string
          description: the chain info of the volume
          sinceVersion: '4.4'
        created:
          dataType: date
          description: the date the disk volume was created
        destroyed:
          dataType: boolean
          description: the boolean state of whether the volume is destroyed or not
        deviceid:
          dataType: long
          description: the ID of the device on user vm the volume is attahed to. This
            tag is not returned when the volume is detached.
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the disk volume
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the disk volume
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the disk volume
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the disk volume
        diskofferingdisplaytext:
          dataType: string
          description: the display text of the disk offering
        diskofferingid:
          dataType: string
          description: ID of the disk offering
        diskofferingname:
          dataType: string
          description: name of the disk offering
        displayvolume:
          dataType: boolean
          description: an optional field whether to the display the volume to the
            end user or not.
        domain:
          dataType: string
          description: the domain associated with the disk volume
        domainid:
          dataType: string
          description: the ID of the domain associated with the disk volume
        hypervisor:
          dataType: string
          description: Hypervisor the volume belongs to
        id:
          dataType: string
          description: ID of the disk volume
        isextractable:
          dataType: boolean
          description: true if the volume is extractable, false otherwise
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        maxiops:
          dataType: long
          description: max iops of the disk volume
        miniops:
          dataType: long
          description: min iops of the disk volume
        name:
          dataType: string
          description: name of the disk volume
        path:
          dataType: string
          description: the path of the volume
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes.
        quiescevm:
          dataType: boolean
          description: need quiesce vm or not when taking snapshot
          sinceVersion: '4.3'
        serviceofferingdisplaytext:
          dataType: string
          description: the display text of the service offering for root disk
        serviceofferingid:
          dataType: string
          description: ID of the service offering for root disk
        serviceofferingname:
          dataType: string
          description: name of the service offering for root disk
        size:
          dataType: long
          description: size of the disk volume
        snapshotid:
          dataType: string
          description: ID of the snapshot from which this volume was created
        state:
          dataType: string
          description: the state of the disk volume
        status:
          dataType: string
          description: the status of the volume
        storage:
          dataType: string
          description: name of the primary storage hosting the disk volume
        storageid:
          dataType: string
          description: id of the primary storage hosting the disk volume; returned
            to admin user only
          sinceVersion: '4.3'
        storagetype:
          dataType: string
          description: shared or local storage
        tags:
          dataType: set
          description: the list of resource tags associated with volume
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        type:
          dataType: string
          description: type of the disk volume (ROOT or DATADISK)
        virtualmachineid:
          dataType: string
          description: id of the virtual machine
        vmdisplayname:
          dataType: string
          description: display name of the virtual machine
        vmname:
          dataType: string
          description: name of the virtual machine
        vmstate:
          dataType: string
          description: state of the virtual machine
        zoneid:
          dataType: string
          description: ID of the availability zone
        zonename:
          dataType: string
          description: name of the availability zone
    user_types:
    - domain
    - root
    - user
  restartNetwork:
    description: Restarts the network; includes 1) restarting network elements - virtual
      routers, dhcp servers 2) reapplying all public ips 3) reapplying loadBalancing/portForwarding
      rules
    isAsync: 'true'
    name: restartNetwork
    request:
      parms:
        cleanup:
          dataType: boolean
          description: If cleanup old network elements
          required: 'false'
        id:
          dataType: uuid
          description: The id of the network to restart.
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account the public IP address is associated with
        allocated:
          dataType: date
          description: date the public IP address was acquired
        associatednetworkid:
          dataType: string
          description: the ID of the Network associated with the IP address
        associatednetworkname:
          dataType: string
          description: the name of the Network associated with the IP address
        domain:
          dataType: string
          description: the domain the public IP address is associated with
        domainid:
          dataType: string
          description: the domain ID the public IP address is associated with
        fordisplay:
          dataType: boolean
          description: is public ip for display to the regular user
          sinceVersion: '4.4'
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the IP address
        id:
          dataType: string
          description: public IP address id
        ipaddress:
          dataType: string
          description: public IP address
        isportable:
          dataType: boolean
          description: is public IP portable across the zones
        issourcenat:
          dataType: boolean
          description: true if the IP address is a source nat address, false otherwise
        isstaticnat:
          dataType: boolean
          description: true if this ip is for static nat, false otherwise
        issystem:
          dataType: boolean
          description: true if this ip is system ip (was allocated as a part of deployVm
            or createLbRule)
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        networkid:
          dataType: string
          description: the ID of the Network where ip belongs to
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        purpose:
          dataType: string
          description: purpose of the IP address. In Acton this value is not null
            for Ips with isSystem=true, and can have either StaticNat or LB value
        state:
          dataType: string
          description: 'State of the ip address. Can be: Allocatin, Allocated and
            Releasing'
        tags:
          dataType: list
          description: the list of resource tags associated with ip address
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        virtualmachinedisplayname:
          dataType: string
          description: virutal machine display name the ip address is assigned to
            (not null only for static nat Ip)
        virtualmachineid:
          dataType: string
          description: virutal machine id the ip address is assigned to (not null
            only for static nat Ip)
        virtualmachinename:
          dataType: string
          description: virutal machine name the ip address is assigned to (not null
            only for static nat Ip)
        vlanid:
          dataType: string
          description: the ID of the VLAN associated with the IP address. This parameter
            is visible to ROOT admins only
        vlanname:
          dataType: string
          description: the VLAN associated with the IP address
        vmipaddress:
          dataType: string
          description: virutal machine (dnat) ip address (not null only for static
            nat Ip)
        vpcid:
          dataType: string
          description: VPC the ip belongs to
        zoneid:
          dataType: string
          description: the ID of the zone the public IP address belongs to
        zonename:
          dataType: string
          description: the name of the zone the public IP address belongs to
    user_types:
    - domain
    - root
    - user
  restartVPC:
    description: Restarts a VPC
    isAsync: 'true'
    name: restartVPC
    request:
      parms:
        dataType: uuid
        description: the id of the VPC
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the VPC
        cidr:
          dataType: string
          description: the cidr the VPC
        created:
          dataType: date
          description: the date this VPC was created
        displaytext:
          dataType: string
          description: an alternate display text of the VPC.
        distributedvpcrouter:
          dataType: boolean
          description: is VPC uses distributed router for one hop forwarding and host
            based network ACL's
          sinceVersion: '4.4'
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the VPC owner
        fordisplay:
          dataType: boolean
          description: is vpc for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the VPC
        name:
          dataType: string
          description: the name of the VPC
        network:
          dataType: list
          description: the list of networks belongign to the VPC
          parms:
            account:
              dataType: string
              description: the owner of the network
            aclid:
              dataType: string
              description: ACL Id associated with the VPC network
            acltype:
              dataType: string
              description: acl type - access type to the network
            broadcastdomaintype:
              dataType: string
              description: Broadcast domain type of the network
            broadcasturi:
              dataType: string
              description: broadcast uri of the network. This parameter is visible
                to ROOT admins only
            canusefordeploy:
              dataType: boolean
              description: list networks available for vm deployment
            cidr:
              dataType: string
              description: Cloudstack managed address space, all CloudStack managed
                VMs get IP address from CIDR
            displaynetwork:
              dataType: boolean
              description: an optional field, whether to the display the network to
                the end user or not.
            displaytext:
              dataType: string
              description: the displaytext of the network
            dns1:
              dataType: string
              description: the first DNS for the network
            dns2:
              dataType: string
              description: the second DNS for the network
            domain:
              dataType: string
              description: the domain name of the network owner
            domainid:
              dataType: string
              description: the domain id of the network owner
            gateway:
              dataType: string
              description: the network's gateway
            id:
              dataType: string
              description: the id of the network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            isdefault:
              dataType: boolean
              description: true if network is default, false otherwise
            ispersistent:
              dataType: boolean
              description: list networks that are persistent
            issystem:
              dataType: boolean
              description: true if network is system, false otherwise
            name:
              dataType: string
              description: the name of the network
            netmask:
              dataType: string
              description: the network's netmask
            networkcidr:
              dataType: string
              description: the network CIDR of the guest network configured with IP
                reservation. It is the summation of CIDR and RESERVED_IP_RANGE
            networkdomain:
              dataType: string
              description: the network domain
            networkofferingavailability:
              dataType: string
              description: availability of the network offering the network is created
                from
            networkofferingconservemode:
              dataType: boolean
              description: true if network offering is ip conserve mode enabled
            networkofferingdisplaytext:
              dataType: string
              description: display text of the network offering the network is created
                from
            networkofferingid:
              dataType: string
              description: network offering id the network is created from
            networkofferingname:
              dataType: string
              description: name of the network offering the network is created from
            physicalnetworkid:
              dataType: string
              description: the physical network id
            project:
              dataType: string
              description: the project name of the address
            projectid:
              dataType: string
              description: the project id of the ipaddress
            related:
              dataType: string
              description: related to what other network configuration
            reservediprange:
              dataType: string
              description: the network's IP range not to be used by CloudStack guest
                VMs and can be used for non CloudStack purposes
            restartrequired:
              dataType: boolean
              description: true network requires restart
            service:
              dataType: list
              description: the list of services
              parms:
                capability:
                  dataType: list
                  description: the list of capabilities
                  parms:
                    canchooseservicecapability:
                      dataType: boolean
                      description: can this service capability value can be choosable
                        while creatine network offerings
                    name:
                      dataType: string
                      description: the capability name
                    value:
                      dataType: string
                      description: the capability value
                name:
                  dataType: string
                  description: the service name
                provider:
                  dataType: list
                  description: the service provider name
                  parms:
                    canenableindividualservice:
                      dataType: boolean
                      description: true if individual services can be enabled/disabled
                    destinationphysicalnetworkid:
                      dataType: string
                      description: the destination physical network
                    id:
                      dataType: string
                      description: uuid of the network provider
                    name:
                      dataType: string
                      description: the provider name
                    physicalnetworkid:
                      dataType: string
                      description: the physical network this belongs to
                    servicelist:
                      dataType: list
                      description: services for this provider
                    state:
                      dataType: string
                      description: state of the network provider
            specifyipranges:
              dataType: boolean
              description: true if network supports specifying ip ranges, false otherwise
            state:
              dataType: string
              description: state of the network
            strechedl2subnet:
              dataType: boolean
              description: true if network can span multiple zones
              sinceVersion: '4.4'
            subdomainaccess:
              dataType: boolean
              description: true if users from subdomains can access the domain level
                network
            tags:
              dataType: list
              description: the list of resource tags associated with network
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
            traffictype:
              dataType: string
              description: the traffic type of the network
            type:
              dataType: string
              description: the type of the network
            vlan:
              dataType: string
              description: The vlan of the network. This parameter is visible to ROOT
                admins only
            vpcid:
              dataType: string
              description: VPC the network belongs to
            zoneid:
              dataType: string
              description: zone id of the network
            zonename:
              dataType: string
              description: the name of the zone the network belongs to
            zonesnetworkspans:
              dataType: set
              description: If a network is enabled for 'streched l2 subnet' then represents
                zones on which network currently spans
              sinceVersion: '4.4'
        networkdomain:
          dataType: string
          description: the network domain of the VPC
        project:
          dataType: string
          description: the project name of the VPC
        projectid:
          dataType: string
          description: the project id of the VPC
        regionlevelvpc:
          dataType: boolean
          description: true if VPC is region level
          sinceVersion: '4.4'
        restartrequired:
          dataType: boolean
          description: true VPC requires restart
        service:
          dataType: list
          description: the list of supported services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        state:
          dataType: string
          description: state of the VPC. Can be Inactive/Enabled
        tags:
          dataType: list
          description: the list of resource tags associated with the project
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        vpcofferingid:
          dataType: string
          description: vpc offering id the VPC is created from
        zoneid:
          dataType: string
          description: zone id of the vpc
        zonename:
          dataType: string
          description: the name of the zone the VPC belongs to
    user_types:
    - domain
    - root
    - user
  restoreVirtualMachine:
    description: Restore a VM to original template/ISO or new template/ISO
    isAsync: 'true'
    name: restoreVirtualMachine
    request:
      parms:
        templateid:
          dataType: uuid
          description: an optional template Id to restore vm from the new template.
            This can be an ISO id in case of restore vm deployed using ISO
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: Virtual Machine ID
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  revertSnapshot:
    description: revert a volume snapshot.
    isAsync: 'true'
    name: revertSnapshot
    request:
      parms:
        dataType: uuid
        description: The ID of the snapshot
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the snapshot
        created:
          dataType: date
          description: '  the date the snapshot was created'
        domain:
          dataType: string
          description: the domain name of the snapshot's account
        domainid:
          dataType: string
          description: the domain ID of the snapshot's account
        id:
          dataType: string
          description: ID of the snapshot
        intervaltype:
          dataType: string
          description: valid types are hourly, daily, weekly, monthy, template, and
            none.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: name of the snapshot
        physicalsize:
          dataType: long
          description: physical size of backedup snapshot on image store
        project:
          dataType: string
          description: the project name of the snapshot
        projectid:
          dataType: string
          description: the project id of the snapshot
        revertable:
          dataType: boolean
          description: indicates whether the underlying storage supports reverting
            the volume to this snapshot
        snapshottype:
          dataType: string
          description: the type of the snapshot
        state:
          dataType: state
          description: the state of the snapshot. BackedUp means that snapshot is
            ready to be used; Creating - the snapshot is being allocated on the primary
            storage; BackingUp - the snapshot is being backed up on secondary storage
        tags:
          dataType: list
          description: the list of resource tags associated with snapshot
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        volumeid:
          dataType: string
          description: ID of the disk volume
        volumename:
          dataType: string
          description: name of the disk volume
        volumetype:
          dataType: string
          description: type of the disk volume
        zoneid:
          dataType: string
          description: id of the availability zone
    user_types:
    - domain
    - root
    - user
  revertToVMSnapshot:
    description: Revert VM from a vmsnapshot.
    isAsync: 'true'
    name: revertToVMSnapshot
    request:
      parms:
        dataType: uuid
        description: The ID of the vm snapshot
        name: vmsnapshotid
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    sinceVersion: 4.2.0
    user_types:
    - domain
    - root
    - user
  revokeSecurityGroupEgress:
    description: Deletes a particular egress rule from this security group
    isAsync: 'true'
    name: revokeSecurityGroupEgress
    request:
      parms:
        dataType: uuid
        description: The ID of the egress rule
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  revokeSecurityGroupIngress:
    description: Deletes a particular ingress rule from this security group
    isAsync: 'true'
    name: revokeSecurityGroupIngress
    request:
      parms:
        dataType: uuid
        description: The ID of the ingress rule
        name: id
        required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  samlSlo:
    description: SAML Global Log Out API
    isAsync: 'false'
    name: samlSlo
    request: {}
    response:
      parms:
        dataType: string
        description: Response description
        name: description
    user_types:
    - domain
    - root
    - user
  samlSso:
    description: SP initiated SAML Single Sign On
    isAsync: 'false'
    name: samlSso
    request:
      parms:
        dataType: string
        description: Identity Provider SSO HTTP-Redirect binding URL
        name: idpurl
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name the user belongs to
        domainid:
          dataType: string
          description: Domain ID that the user belongs to
        firstname:
          dataType: string
          description: first name of the user
        lastname:
          dataType: string
          description: last name of the user
        registered:
          dataType: string
          description: Is user registered
        sessionkey:
          dataType: string
          description: Session key that can be passed in subsequent Query command
            calls
        timeout:
          dataType: integer
          description: the time period before the session has expired
        timezone:
          dataType: string
          description: user time zone
        type:
          dataType: string
          description: the account type (admin, domain-admin, read-only-admin, user)
        userid:
          dataType: string
          description: User ID
        username:
          dataType: string
          description: Username
    user_types:
    - domain
    - root
    - user
  scaleSystemVm:
    description: Scale the service offering for a system vm (console proxy or secondary
      storage). The system vm must be in a "Stopped" state for this command to take
      effect.
    isAsync: 'true'
    name: scaleSystemVm
    request:
      parms:
        details:
          dataType: map
          description: name value pairs of custom parameters for cpu, memory and cpunumber.
            example details[i].name=value
          required: 'false'
          type: map
        id:
          dataType: uuid
          description: The ID of the system vm
          required: 'true'
        serviceofferingid:
          dataType: uuid
          description: the service offering ID to apply to the system vm
          required: 'true'
    response:
      parms:
        activeviewersessions:
          dataType: integer
          description: the number of active console sessions for the console proxy
            system vm
        created:
          dataType: date
          description: the date and time the system VM was created
        dns1:
          dataType: string
          description: the first DNS for the system VM
        dns2:
          dataType: string
          description: the second DNS for the system VM
        gateway:
          dataType: string
          description: the gateway for the system VM
        hostid:
          dataType: string
          description: the host ID for the system VM
        hostname:
          dataType: string
          description: the hostname for the system VM
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the system VM
        jobid:
          dataType: string
          description: the job ID associated with the system VM. This is only displayed
            if the router listed is part of a currently running asynchronous job.
        jobstatus:
          dataType: integer
          description: the job status associated with the system VM.  This is only
            displayed if the router listed is part of a currently running asynchronous
            job.
        linklocalip:
          dataType: string
          description: the link local IP address for the system vm
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the system vm
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the system vm
        name:
          dataType: string
          description: the name of the system VM
        networkdomain:
          dataType: string
          description: the network domain for the system VM
        podid:
          dataType: string
          description: the Pod ID for the system VM
        privateip:
          dataType: string
          description: the private IP address for the system VM
        privatemacaddress:
          dataType: string
          description: the private MAC address for the system VM
        privatenetmask:
          dataType: string
          description: the private netmask for the system VM
        publicip:
          dataType: string
          description: the public IP address for the system VM
        publicmacaddress:
          dataType: string
          description: the public MAC address for the system VM
        publicnetmask:
          dataType: string
          description: the public netmask for the system VM
        state:
          dataType: string
          description: the state of the system VM
        systemvmtype:
          dataType: string
          description: the system VM type
        templateid:
          dataType: string
          description: the template ID for the system VM
        zoneid:
          dataType: string
          description: the Zone ID for the system VM
        zonename:
          dataType: string
          description: the Zone name for the system VM
    user_types:
    - root
  scaleVirtualMachine:
    description: Scales the virtual machine to a new service offering.
    isAsync: 'true'
    name: scaleVirtualMachine
    request:
      parms:
        details:
          dataType: map
          description: name value pairs of custom parameters for cpu,memory and cpunumber.
            example details[i].name=value
          required: 'false'
          type: map
        id:
          dataType: uuid
          description: The ID of the virtual machine
          required: 'true'
        serviceofferingid:
          dataType: uuid
          description: the ID of the service offering for the virtual machine
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  startInternalLoadBalancerVM:
    description: Starts an existing internal lb vm.
    isAsync: 'true'
    name: startInternalLoadBalancerVM
    request:
      parms:
        dataType: uuid
        description: the ID of the internal lb vm
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the router
        created:
          dataType: date
          description: the date and time the router was created
        dns1:
          dataType: string
          description: the first DNS for the router
        dns2:
          dataType: string
          description: the second DNS for the router
        domain:
          dataType: string
          description: the domain associated with the router
        domainid:
          dataType: string
          description: the domain ID associated with the router
        gateway:
          dataType: string
          description: the gateway for the router
        guestipaddress:
          dataType: string
          description: the guest IP address for the router
        guestmacaddress:
          dataType: string
          description: the guest MAC address for the router
        guestnetmask:
          dataType: string
          description: the guest netmask for the router
        guestnetworkid:
          dataType: string
          description: the ID of the corresponding guest network
        hostid:
          dataType: string
          description: the host ID for the router
        hostname:
          dataType: string
          description: the hostname for the router
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the id of the router
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the router
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the router
        isredundantrouter:
          dataType: boolean
          description: if this router is an redundant virtual router
        linklocalip:
          dataType: string
          description: the link local IP address for the router
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the router
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the router
        linklocalnetworkid:
          dataType: string
          description: the ID of the corresponding link local network
        name:
          dataType: string
          description: the name of the router
        networkdomain:
          dataType: string
          description: the network domain for the router
        nic:
          dataType: set
          description: the list of nics associated with the router
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
          sinceVersion: '4.0'
        podid:
          dataType: string
          description: the Pod ID for the router
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        publicip:
          dataType: string
          description: the public IP address for the router
        publicmacaddress:
          dataType: string
          description: the public MAC address for the router
        publicnetmask:
          dataType: string
          description: the public netmask for the router
        publicnetworkid:
          dataType: string
          description: the ID of the corresponding public network
        redundantstate:
          dataType: string
          description: the state of redundant virtual router
        requiresupgrade:
          dataType: boolean
          description: true if the router template requires upgrader
        role:
          dataType: string
          description: role of the domain router
        scriptsversion:
          dataType: string
          description: the version of scripts
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        state:
          dataType: state
          description: the state of the router
        templateid:
          dataType: string
          description: the template ID for the router
        version:
          dataType: string
          description: the version of template
        vpcid:
          dataType: string
          description: VPC the router belongs to
        zoneid:
          dataType: string
          description: the Zone ID for the router
        zonename:
          dataType: string
          description: the Zone name for the router
    user_types:
    - root
  startRouter:
    description: Starts a router.
    isAsync: 'true'
    name: startRouter
    request:
      parms:
        dataType: uuid
        description: the ID of the router
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the router
        created:
          dataType: date
          description: the date and time the router was created
        dns1:
          dataType: string
          description: the first DNS for the router
        dns2:
          dataType: string
          description: the second DNS for the router
        domain:
          dataType: string
          description: the domain associated with the router
        domainid:
          dataType: string
          description: the domain ID associated with the router
        gateway:
          dataType: string
          description: the gateway for the router
        guestipaddress:
          dataType: string
          description: the guest IP address for the router
        guestmacaddress:
          dataType: string
          description: the guest MAC address for the router
        guestnetmask:
          dataType: string
          description: the guest netmask for the router
        guestnetworkid:
          dataType: string
          description: the ID of the corresponding guest network
        hostid:
          dataType: string
          description: the host ID for the router
        hostname:
          dataType: string
          description: the hostname for the router
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the id of the router
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the router
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the router
        isredundantrouter:
          dataType: boolean
          description: if this router is an redundant virtual router
        linklocalip:
          dataType: string
          description: the link local IP address for the router
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the router
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the router
        linklocalnetworkid:
          dataType: string
          description: the ID of the corresponding link local network
        name:
          dataType: string
          description: the name of the router
        networkdomain:
          dataType: string
          description: the network domain for the router
        nic:
          dataType: set
          description: the list of nics associated with the router
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
          sinceVersion: '4.0'
        podid:
          dataType: string
          description: the Pod ID for the router
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        publicip:
          dataType: string
          description: the public IP address for the router
        publicmacaddress:
          dataType: string
          description: the public MAC address for the router
        publicnetmask:
          dataType: string
          description: the public netmask for the router
        publicnetworkid:
          dataType: string
          description: the ID of the corresponding public network
        redundantstate:
          dataType: string
          description: the state of redundant virtual router
        requiresupgrade:
          dataType: boolean
          description: true if the router template requires upgrader
        role:
          dataType: string
          description: role of the domain router
        scriptsversion:
          dataType: string
          description: the version of scripts
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        state:
          dataType: state
          description: the state of the router
        templateid:
          dataType: string
          description: the template ID for the router
        version:
          dataType: string
          description: the version of template
        vpcid:
          dataType: string
          description: VPC the router belongs to
        zoneid:
          dataType: string
          description: the Zone ID for the router
        zonename:
          dataType: string
          description: the Zone name for the router
    user_types:
    - domain
    - root
  startSystemVm:
    description: Starts a system virtual machine.
    isAsync: 'true'
    name: startSystemVm
    request:
      parms:
        dataType: uuid
        description: The ID of the system virtual machine
        name: id
        required: 'true'
    response:
      parms:
        activeviewersessions:
          dataType: integer
          description: the number of active console sessions for the console proxy
            system vm
        created:
          dataType: date
          description: the date and time the system VM was created
        dns1:
          dataType: string
          description: the first DNS for the system VM
        dns2:
          dataType: string
          description: the second DNS for the system VM
        gateway:
          dataType: string
          description: the gateway for the system VM
        hostid:
          dataType: string
          description: the host ID for the system VM
        hostname:
          dataType: string
          description: the hostname for the system VM
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the system VM
        jobid:
          dataType: string
          description: the job ID associated with the system VM. This is only displayed
            if the router listed is part of a currently running asynchronous job.
        jobstatus:
          dataType: integer
          description: the job status associated with the system VM.  This is only
            displayed if the router listed is part of a currently running asynchronous
            job.
        linklocalip:
          dataType: string
          description: the link local IP address for the system vm
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the system vm
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the system vm
        name:
          dataType: string
          description: the name of the system VM
        networkdomain:
          dataType: string
          description: the network domain for the system VM
        podid:
          dataType: string
          description: the Pod ID for the system VM
        privateip:
          dataType: string
          description: the private IP address for the system VM
        privatemacaddress:
          dataType: string
          description: the private MAC address for the system VM
        privatenetmask:
          dataType: string
          description: the private netmask for the system VM
        publicip:
          dataType: string
          description: the public IP address for the system VM
        publicmacaddress:
          dataType: string
          description: the public MAC address for the system VM
        publicnetmask:
          dataType: string
          description: the public netmask for the system VM
        state:
          dataType: string
          description: the state of the system VM
        systemvmtype:
          dataType: string
          description: the system VM type
        templateid:
          dataType: string
          description: the template ID for the system VM
        zoneid:
          dataType: string
          description: the Zone ID for the system VM
        zonename:
          dataType: string
          description: the Zone name for the system VM
    user_types:
    - root
  startVirtualMachine:
    description: Starts a virtual machine.
    isAsync: 'true'
    name: startVirtualMachine
    request:
      parms:
        deploymentplanner:
          dataType: string
          description: Deployment planner to use for vm allocation. Available to ROOT
            admin only
          required: 'false'
          sinceVersion: '4.4'
        hostid:
          dataType: uuid
          description: destination Host ID to deploy the VM to - parameter available
            for root admin only
          required: 'false'
          sinceVersion: 3.0.1
        id:
          dataType: uuid
          description: The ID of the virtual machine
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  stopInternalLoadBalancerVM:
    description: Stops an Internal LB vm.
    isAsync: 'true'
    name: stopInternalLoadBalancerVM
    request:
      parms:
        forced:
          dataType: boolean
          description: Force stop the VM. The caller knows the VM is stopped.
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the internal lb vm
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the router
        created:
          dataType: date
          description: the date and time the router was created
        dns1:
          dataType: string
          description: the first DNS for the router
        dns2:
          dataType: string
          description: the second DNS for the router
        domain:
          dataType: string
          description: the domain associated with the router
        domainid:
          dataType: string
          description: the domain ID associated with the router
        gateway:
          dataType: string
          description: the gateway for the router
        guestipaddress:
          dataType: string
          description: the guest IP address for the router
        guestmacaddress:
          dataType: string
          description: the guest MAC address for the router
        guestnetmask:
          dataType: string
          description: the guest netmask for the router
        guestnetworkid:
          dataType: string
          description: the ID of the corresponding guest network
        hostid:
          dataType: string
          description: the host ID for the router
        hostname:
          dataType: string
          description: the hostname for the router
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the id of the router
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the router
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the router
        isredundantrouter:
          dataType: boolean
          description: if this router is an redundant virtual router
        linklocalip:
          dataType: string
          description: the link local IP address for the router
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the router
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the router
        linklocalnetworkid:
          dataType: string
          description: the ID of the corresponding link local network
        name:
          dataType: string
          description: the name of the router
        networkdomain:
          dataType: string
          description: the network domain for the router
        nic:
          dataType: set
          description: the list of nics associated with the router
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
          sinceVersion: '4.0'
        podid:
          dataType: string
          description: the Pod ID for the router
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        publicip:
          dataType: string
          description: the public IP address for the router
        publicmacaddress:
          dataType: string
          description: the public MAC address for the router
        publicnetmask:
          dataType: string
          description: the public netmask for the router
        publicnetworkid:
          dataType: string
          description: the ID of the corresponding public network
        redundantstate:
          dataType: string
          description: the state of redundant virtual router
        requiresupgrade:
          dataType: boolean
          description: true if the router template requires upgrader
        role:
          dataType: string
          description: role of the domain router
        scriptsversion:
          dataType: string
          description: the version of scripts
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        state:
          dataType: state
          description: the state of the router
        templateid:
          dataType: string
          description: the template ID for the router
        version:
          dataType: string
          description: the version of template
        vpcid:
          dataType: string
          description: VPC the router belongs to
        zoneid:
          dataType: string
          description: the Zone ID for the router
        zonename:
          dataType: string
          description: the Zone name for the router
    user_types:
    - root
  stopRouter:
    description: Stops a router.
    isAsync: 'true'
    name: stopRouter
    request:
      parms:
        forced:
          dataType: boolean
          description: Force stop the VM. The caller knows the VM is stopped.
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the router
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the router
        created:
          dataType: date
          description: the date and time the router was created
        dns1:
          dataType: string
          description: the first DNS for the router
        dns2:
          dataType: string
          description: the second DNS for the router
        domain:
          dataType: string
          description: the domain associated with the router
        domainid:
          dataType: string
          description: the domain ID associated with the router
        gateway:
          dataType: string
          description: the gateway for the router
        guestipaddress:
          dataType: string
          description: the guest IP address for the router
        guestmacaddress:
          dataType: string
          description: the guest MAC address for the router
        guestnetmask:
          dataType: string
          description: the guest netmask for the router
        guestnetworkid:
          dataType: string
          description: the ID of the corresponding guest network
        hostid:
          dataType: string
          description: the host ID for the router
        hostname:
          dataType: string
          description: the hostname for the router
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the id of the router
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the router
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the router
        isredundantrouter:
          dataType: boolean
          description: if this router is an redundant virtual router
        linklocalip:
          dataType: string
          description: the link local IP address for the router
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the router
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the router
        linklocalnetworkid:
          dataType: string
          description: the ID of the corresponding link local network
        name:
          dataType: string
          description: the name of the router
        networkdomain:
          dataType: string
          description: the network domain for the router
        nic:
          dataType: set
          description: the list of nics associated with the router
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
          sinceVersion: '4.0'
        podid:
          dataType: string
          description: the Pod ID for the router
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        publicip:
          dataType: string
          description: the public IP address for the router
        publicmacaddress:
          dataType: string
          description: the public MAC address for the router
        publicnetmask:
          dataType: string
          description: the public netmask for the router
        publicnetworkid:
          dataType: string
          description: the ID of the corresponding public network
        redundantstate:
          dataType: string
          description: the state of redundant virtual router
        requiresupgrade:
          dataType: boolean
          description: true if the router template requires upgrader
        role:
          dataType: string
          description: role of the domain router
        scriptsversion:
          dataType: string
          description: the version of scripts
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        state:
          dataType: state
          description: the state of the router
        templateid:
          dataType: string
          description: the template ID for the router
        version:
          dataType: string
          description: the version of template
        vpcid:
          dataType: string
          description: VPC the router belongs to
        zoneid:
          dataType: string
          description: the Zone ID for the router
        zonename:
          dataType: string
          description: the Zone name for the router
    user_types:
    - domain
    - root
  stopSystemVm:
    description: Stops a system VM.
    isAsync: 'true'
    name: stopSystemVm
    request:
      parms:
        forced:
          dataType: boolean
          description: Force stop the VM.  The caller knows the VM is stopped.
          required: 'false'
        id:
          dataType: uuid
          description: The ID of the system virtual machine
          required: 'true'
    response:
      parms:
        activeviewersessions:
          dataType: integer
          description: the number of active console sessions for the console proxy
            system vm
        created:
          dataType: date
          description: the date and time the system VM was created
        dns1:
          dataType: string
          description: the first DNS for the system VM
        dns2:
          dataType: string
          description: the second DNS for the system VM
        gateway:
          dataType: string
          description: the gateway for the system VM
        hostid:
          dataType: string
          description: the host ID for the system VM
        hostname:
          dataType: string
          description: the hostname for the system VM
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the system VM
        jobid:
          dataType: string
          description: the job ID associated with the system VM. This is only displayed
            if the router listed is part of a currently running asynchronous job.
        jobstatus:
          dataType: integer
          description: the job status associated with the system VM.  This is only
            displayed if the router listed is part of a currently running asynchronous
            job.
        linklocalip:
          dataType: string
          description: the link local IP address for the system vm
        linklocalmacaddress:
          dataType: string
          description: the link local MAC address for the system vm
        linklocalnetmask:
          dataType: string
          description: the link local netmask for the system vm
        name:
          dataType: string
          description: the name of the system VM
        networkdomain:
          dataType: string
          description: the network domain for the system VM
        podid:
          dataType: string
          description: the Pod ID for the system VM
        privateip:
          dataType: string
          description: the private IP address for the system VM
        privatemacaddress:
          dataType: string
          description: the private MAC address for the system VM
        privatenetmask:
          dataType: string
          description: the private netmask for the system VM
        publicip:
          dataType: string
          description: the public IP address for the system VM
        publicmacaddress:
          dataType: string
          description: the public MAC address for the system VM
        publicnetmask:
          dataType: string
          description: the public netmask for the system VM
        state:
          dataType: string
          description: the state of the system VM
        systemvmtype:
          dataType: string
          description: the system VM type
        templateid:
          dataType: string
          description: the template ID for the system VM
        zoneid:
          dataType: string
          description: the Zone ID for the system VM
        zonename:
          dataType: string
          description: the Zone name for the system VM
    user_types:
    - root
  stopVirtualMachine:
    description: Stops a virtual machine.
    isAsync: 'true'
    name: stopVirtualMachine
    request:
      parms:
        forced:
          dataType: boolean
          description: Force stop the VM (vm is marked as Stopped even when command
            fails to be send to the backend).  The caller knows the VM is stopped.
          required: 'false'
        id:
          dataType: uuid
          description: The ID of the virtual machine
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  suspendProject:
    description: Suspends a project
    isAsync: 'true'
    name: suspendProject
    request:
      parms:
        dataType: uuid
        description: id of the project to be suspended
        name: id
        required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the project's owner
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            project
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the project can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by project
          sinceVersion: 4.2.0
        displaytext:
          dataType: string
          description: the displaytext of the project
        domain:
          dataType: string
          description: the domain name where the project belongs to
        domainid:
          dataType: string
          description: the domain id the project belongs to
        id:
          dataType: string
          description: the id of the project
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            project to acquire
          sinceVersion: 4.2.0
        iplimit:
          dataType: string
          description: the total number of public ip addresses this project can acquire
          sinceVersion: 4.2.0
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            project
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this project
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the project can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by project
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the project
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            project
          sinceVersion: 4.2.0
        networklimit:
          dataType: string
          description: the total number of networks the project can own
          sinceVersion: 4.2.0
        networktotal:
          dataType: long
          description: the total number of networks owned by project
          sinceVersion: 4.2.0
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this project
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the project can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this project
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the project can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this project
          sinceVersion: 4.2.0
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this project
          sinceVersion: 4.2.0
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this project
          sinceVersion: 4.2.0
        state:
          dataType: string
          description: the state of the project
        tags:
          dataType: list
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            project
          sinceVersion: 4.2.0
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            project
          sinceVersion: 4.2.0
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            project
          sinceVersion: 4.2.0
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this project
            to acquire
          sinceVersion: 4.2.0
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this project
          sinceVersion: 4.2.0
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this project
          sinceVersion: 4.2.0
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this project
          sinceVersion: 4.2.0
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this project
          sinceVersion: 4.2.0
        volumeavailable:
          dataType: string
          description: the total volume available for this project
          sinceVersion: 4.2.0
        volumelimit:
          dataType: string
          description: the total volume which can be used by this project
          sinceVersion: 4.2.0
        volumetotal:
          dataType: long
          description: the total volume being used by this project
          sinceVersion: 4.2.0
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this project
          sinceVersion: 4.2.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the project can own
          sinceVersion: 4.2.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by project
          sinceVersion: 4.2.0
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  updateAccount:
    description: Updates account information for the authenticated user
    isAsync: 'false'
    name: updateAccount
    request:
      parms:
        account:
          dataType: string
          description: the current account name
          required: 'false'
        accountdetails:
          dataType: map
          description: details for account used to store specific parameters
          required: 'false'
          type: map
        domainid:
          dataType: uuid
          description: the ID of the domain where the account exists
          required: 'false'
        id:
          dataType: uuid
          description: Account id
          required: 'false'
        networkdomain:
          dataType: string
          description: Network domain for the account's networks; empty string will
            update domainName with NULL value
          required: 'false'
        newname:
          dataType: string
          description: new name for the account
          required: 'true'
    response:
      parms:
        accountdetails:
          dataType: map
          description: details for the account
        accounttype:
          dataType: short
          description: account type (admin, domain-admin, user)
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            account
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the account can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by account
          sinceVersion: 4.2.0
        defaultzoneid:
          dataType: string
          description: the default zone of the account
        domain:
          dataType: string
          description: name of the Domain the account belongs too
        domainid:
          dataType: string
          description: id of the Domain the account belongs too
        groups:
          dataType: list
          description: the list of acl groups that account belongs to
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the account
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            account to acquire
        iplimit:
          dataType: string
          description: the total number of public ip addresses this account can acquire
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            account
        iscleanuprequired:
          dataType: boolean
          description: true if the account requires cleanup
        isdefault:
          dataType: boolean
          description: true if account is default, false otherwise
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this account
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the account can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by account
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the account
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            account
          sinceVersion: 3.0.1
        networkdomain:
          dataType: string
          description: the network domain
        networklimit:
          dataType: string
          description: the total number of networks the account can own
          sinceVersion: 3.0.1
        networktotal:
          dataType: long
          description: the total number of networks owned by account
          sinceVersion: 3.0.1
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this account
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the account can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        projectavailable:
          dataType: string
          description: the total number of projects available for administration by
            this account
          sinceVersion: 3.0.1
        projectlimit:
          dataType: string
          description: the total number of projects the account can own
          sinceVersion: 3.0.1
        projecttotal:
          dataType: long
          description: the total number of projects being administrated by this account
          sinceVersion: 3.0.1
        receivedbytes:
          dataType: long
          description: the total number of network traffic bytes received
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this account
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the account can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by account
          sinceVersion: 4.2.0
        sentbytes:
          dataType: long
          description: the total number of network traffic bytes sent
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this account
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this account
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this account
        state:
          dataType: string
          description: the state of the account
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            account
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            account
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            account
        user:
          dataType: list
          description: the list of users associated with account
          parms:
            account:
              dataType: string
              description: the account name of the user
            accountid:
              dataType: string
              description: the account ID of the user
            accounttype:
              dataType: short
              description: the account type of the user
            apikey:
              dataType: string
              description: the api key of the user
            created:
              dataType: date
              description: the date and time the user account was created
            domain:
              dataType: string
              description: the domain name of the user
            domainid:
              dataType: string
              description: the domain ID of the user
            email:
              dataType: string
              description: the user email address
            firstname:
              dataType: string
              description: the user firstname
            id:
              dataType: string
              description: the user ID
            iscallerchilddomain:
              dataType: boolean
              description: the boolean value representing if the updating target is
                in caller's child domain
            isdefault:
              dataType: boolean
              description: true if user is default, false otherwise
              sinceVersion: 4.2.0
            lastname:
              dataType: string
              description: the user lastname
            secretkey:
              dataType: string
              description: the secret key of the user
            state:
              dataType: string
              description: the user state
            timezone:
              dataType: string
              description: the timezone user was created in
            username:
              dataType: string
              description: the user name
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this account
            to acquire
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this account
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this account
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this account
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this account
        volumeavailable:
          dataType: string
          description: the total volume available for this account
        volumelimit:
          dataType: string
          description: the total volume which can be used by this account
        volumetotal:
          dataType: long
          description: the total volume being used by this account
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this account
          sinceVersion: 4.0.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the account can own
          sinceVersion: 4.0.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by account
          sinceVersion: 4.0.0
    user_types:
    - domain
    - root
  updateAutoScalePolicy:
    description: Updates an existing autoscale policy.
    isAsync: 'true'
    name: updateAutoScalePolicy
    request:
      parms:
        conditionids:
          dataType: list
          description: the list of IDs of the conditions that are being evaluated
            on every interval
          required: 'false'
          type: list
        duration:
          dataType: integer
          description: the duration for which the conditions have to be true before
            action is taken
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the autoscale policy
          required: 'true'
        quiettime:
          dataType: integer
          description: the cool down period for which the policy should not be evaluated
            after the action has been taken
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the autoscale policy
        action:
          dataType: string
          description: the action to be executed if all the conditions evaluate to
            true for the specified duration.
        conditions:
          dataType: list
          description: the list of IDs of the conditions that are being evaluated
            on every interval
        domain:
          dataType: string
          description: the domain name of the autoscale policy
        domainid:
          dataType: string
          description: the domain ID of the autoscale policy
        duration:
          dataType: integer
          description: the duration for which the conditions have to be true before
            action is taken
        id:
          dataType: string
          description: the autoscale policy ID
        project:
          dataType: string
          description: the project name of the autoscale policy
        projectid:
          dataType: string
          description: the project id autoscale policy
        quiettime:
          dataType: integer
          description: the cool down period for which the policy should not be evaluated
            after the action has been taken
    user_types:
    - domain
    - root
    - user
  updateAutoScaleVmGroup:
    description: Updates an existing autoscale vm group.
    isAsync: 'true'
    name: updateAutoScaleVmGroup
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the group to the
            end user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the autoscale group
          required: 'true'
        interval:
          dataType: integer
          description: the frequency at which the conditions have to be evaluated
          required: 'false'
        maxmembers:
          dataType: integer
          description: the maximum number of members in the vmgroup, The number of
            instances in the vm group will be equal to or less than this number.
          required: 'false'
        minmembers:
          dataType: integer
          description: the minimum number of members in the vmgroup, the number of
            instances in the vm group will be equal to or more than this number.
          required: 'false'
        scaledownpolicyids:
          dataType: list
          description: list of scaledown autoscale policies
          required: 'false'
          type: list
        scaleuppolicyids:
          dataType: list
          description: list of scaleup autoscale policies
          required: 'false'
          type: list
    response:
      parms:
        account:
          dataType: string
          description: the account owning the instance group
        domain:
          dataType: string
          description: the domain name of the vm profile
        domainid:
          dataType: string
          description: the domain ID of the vm profile
        fordisplay:
          dataType: boolean
          description: is group for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the autoscale vm group ID
        interval:
          dataType: int
          description: the frequency at which the conditions have to be evaluated
        lbruleid:
          dataType: string
          description: the load balancer rule ID
        maxmembers:
          dataType: int
          description: the maximum number of members in the vmgroup, The number of
            instances in the vm group will be equal to or less than this number.
        minmembers:
          dataType: int
          description: the minimum number of members in the vmgroup, the number of
            instances in the vm group will be equal to or more than this number.
        project:
          dataType: string
          description: the project name of the vm profile
        projectid:
          dataType: string
          description: the project id vm profile
        scaledownpolicies:
          dataType: list
          description: list of scaledown autoscale policies
        scaleuppolicies:
          dataType: list
          description: list of scaleup autoscale policies
        state:
          dataType: string
          description: the current state of the AutoScale Vm Group
        vmprofileid:
          dataType: string
          description: the autoscale profile that contains information about the vms
            in the vm group.
    user_types:
    - domain
    - root
    - user
  updateAutoScaleVmProfile:
    description: Updates an existing autoscale vm profile.
    isAsync: 'true'
    name: updateAutoScaleVmProfile
    request:
      parms:
        autoscaleuserid:
          dataType: uuid
          description: the ID of the user used to launch and destroy the VMs
          required: 'false'
        counterparam:
          dataType: map
          description: 'counterparam list. Example: counterparam[0].name=snmpcommunity&counterparam[0].value=public&counterparam[1].name=snmpport&counterparam[1].value=161'
          required: 'false'
          type: map
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        destroyvmgraceperiod:
          dataType: integer
          description: the time allowed for existing connections to get closed before
            a vm is destroyed
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the profile to the
            end user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the autoscale vm profile
          required: 'true'
        templateid:
          dataType: uuid
          description: the template of the auto deployed virtual machine
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the instance group
        autoscaleuserid:
          dataType: string
          description: the ID of the user used to launch and destroy the VMs
        destroyvmgraceperiod:
          dataType: integer
          description: the time allowed for existing connections to get closed before
            a vm is destroyed
        domain:
          dataType: string
          description: the domain name of the vm profile
        domainid:
          dataType: string
          description: the domain ID of the vm profile
        fordisplay:
          dataType: boolean
          description: is profile for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the autoscale vm profile ID
        otherdeployparams:
          dataType: string
          description: parameters other than zoneId/serviceOfferringId/templateId
            to be used while deploying a virtual machine
        project:
          dataType: string
          description: the project name of the vm profile
        projectid:
          dataType: string
          description: the project id vm profile
        serviceofferingid:
          dataType: string
          description: the service offering to be used while deploying a virtual machine
        templateid:
          dataType: string
          description: the template to be used while deploying a virtual machine
        zoneid:
          dataType: string
          description: the availability zone to be used while deploying a virtual
            machine
    user_types:
    - domain
    - root
    - user
  updateCloudToUseObjectStore:
    description: Migrate current NFS secondary storages to use object store.
    isAsync: 'false'
    name: updateCloudToUseObjectStore
    request:
      parms:
        details:
          dataType: map
          description: 'the details for the image store. Example: details[0].key=accesskey&details[0].value=s389ddssaa&details[1].key=secretkey&details[1].value=8dshfsss'
          required: 'false'
          type: map
        name:
          dataType: string
          description: the name for the image store
          required: 'false'
        provider:
          dataType: string
          description: the image store provider name
          required: 'true'
        url:
          dataType: string
          description: the URL for the image store
          required: 'false'
    response:
      parms:
        details:
          dataType: set
          description: the details of the image store
        id:
          dataType: string
          description: the ID of the image store
        name:
          dataType: string
          description: the name of the image store
        protocol:
          dataType: string
          description: the protocol of the image store
        providername:
          dataType: string
          description: the provider name of the image store
        scope:
          dataType: scopetype
          description: the scope of the image store
        url:
          dataType: string
          description: the url of the image store
        zoneid:
          dataType: string
          description: the Zone ID of the image store
        zonename:
          dataType: string
          description: the Zone name of the image store
    sinceVersion: 4.3.0
    user_types:
    - root
  updateCluster:
    description: Updates an existing cluster
    isAsync: 'false'
    name: updateCluster
    request:
      parms:
        allocationstate:
          dataType: string
          description: Allocation state of this cluster for allocation of new resources
          required: 'false'
        clustername:
          dataType: string
          description: the cluster name
          required: 'false'
        clustertype:
          dataType: string
          description: hypervisor type of the cluster
          required: 'false'
        hypervisor:
          dataType: string
          description: hypervisor type of the cluster
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the Cluster
          required: 'true'
        managedstate:
          dataType: string
          description: whether this cluster is managed by cloudstack
          required: 'false'
    response:
      parms:
        allocationstate:
          dataType: string
          description: the allocation state of the cluster
        capacity:
          dataType: list
          description: the capacity of the Cluster
          parms:
            capacitytotal:
              dataType: long
              description: the total capacity available
            capacityused:
              dataType: long
              description: the capacity currently in use
            clusterid:
              dataType: string
              description: the Cluster ID
            clustername:
              dataType: string
              description: the Cluster name
            percentused:
              dataType: string
              description: the percentage of capacity currently in use
            podid:
              dataType: string
              description: the Pod ID
            podname:
              dataType: string
              description: the Pod name
            type:
              dataType: short
              description: the capacity type
            zoneid:
              dataType: string
              description: the Zone ID
            zonename:
              dataType: string
              description: the Zone name
        clustertype:
          dataType: string
          description: the type of the cluster
        cpuovercommitratio:
          dataType: string
          description: The cpu overcommit ratio of the cluster
        hypervisortype:
          dataType: string
          description: the hypervisor type of the cluster
        id:
          dataType: string
          description: the cluster ID
        managedstate:
          dataType: string
          description: whether this cluster is managed by cloudstack
        memoryovercommitratio:
          dataType: string
          description: The memory overcommit ratio of the cluster
        name:
          dataType: string
          description: the cluster name
        podid:
          dataType: string
          description: the Pod ID of the cluster
        podname:
          dataType: string
          description: the Pod name of the cluster
        zoneid:
          dataType: string
          description: the Zone ID of the cluster
        zonename:
          dataType: string
          description: the Zone name of the cluster
    user_types:
    - root
  updateConfiguration:
    description: Updates a configuration.
    isAsync: 'false'
    name: updateConfiguration
    request:
      parms:
        accountid:
          dataType: uuid
          description: the ID of the Account to update the parameter value for corresponding
            account
          required: 'false'
        clusterid:
          dataType: uuid
          description: the ID of the Cluster to update the parameter value for corresponding
            cluster
          required: 'false'
        name:
          dataType: string
          description: the name of the configuration
          required: 'true'
        storageid:
          dataType: uuid
          description: the ID of the Storage pool to update the parameter value for
            corresponding storage pool
          required: 'false'
        value:
          dataType: string
          description: the value of the configuration
          required: 'false'
        zoneid:
          dataType: uuid
          description: the ID of the Zone to update the parameter value for corresponding
            zone
          required: 'false'
    response:
      parms:
        category:
          dataType: string
          description: the category of the configuration
        description:
          dataType: string
          description: the description of the configuration
        id:
          dataType: long
          description: the value of the configuration
        name:
          dataType: string
          description: the name of the configuration
        scope:
          dataType: string
          description: scope(zone/cluster/pool/account) of the parameter that needs
            to be updated
        value:
          dataType: string
          description: the value of the configuration
    user_types:
    - root
  updateDefaultNicForVirtualMachine:
    description: Changes the default NIC on a VM
    isAsync: 'true'
    name: updateDefaultNicForVirtualMachine
    request:
      parms:
        nicid:
          dataType: uuid
          description: NIC ID
          required: 'true'
        virtualmachineid:
          dataType: uuid
          description: Virtual Machine ID
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  updateDiskOffering:
    description: Updates a disk offering.
    isAsync: 'false'
    name: updateDiskOffering
    request:
      parms:
        displayoffering:
          dataType: boolean
          description: an optional field, whether to display the offering to the end
            user or not.
          required: 'false'
        displaytext:
          dataType: string
          description: updates alternate display text of the disk offering with this
            value
          required: 'false'
        id:
          dataType: uuid
          description: ID of the disk offering
          required: 'true'
        name:
          dataType: string
          description: updates name of the disk offering with this value
          required: 'false'
        sortkey:
          dataType: integer
          description: sort key of the disk offering, integer
          required: 'false'
    response:
      parms:
        cacheMode:
          dataType: string
          description: the cache mode to use for this disk offering. none, writeback
            or writethrough
          sinceVersion: '4.4'
        created:
          dataType: date
          description: the date this disk offering was created
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the disk offering
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the disk offering
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the disk offering
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the disk offering
        disksize:
          dataType: long
          description: the size of the disk offering in GB
        displayoffering:
          dataType: boolean
          description: whether to display the offering to the end user or not.
        displaytext:
          dataType: string
          description: an alternate display text of the disk offering.
        domain:
          dataType: string
          description: the domain name this disk offering belongs to. Ignore this
            information as it is not currently applicable.
        domainid:
          dataType: string
          description: the domain ID this disk offering belongs to. Ignore this information
            as it is not currently applicable.
        hypervisorsnapshotreserve:
          dataType: integer
          description: Hypervisor snapshot reserve space as a percent of a volume
            (for managed storage using Xen or VMware)
          sinceVersion: '4.4'
        id:
          dataType: string
          description: unique ID of the disk offering
        iscustomized:
          dataType: boolean
          description: true if disk offering uses custom size, false otherwise
        iscustomizediops:
          dataType: boolean
          description: true if disk offering uses custom iops, false otherwise
        maxiops:
          dataType: long
          description: the max iops of the disk offering
        miniops:
          dataType: long
          description: the min iops of the disk offering
        name:
          dataType: string
          description: the name of the disk offering
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes. Valid values are
            thin, sparse, fat.
          sinceVersion: 4.4.0
        storagetype:
          dataType: string
          description: the storage type for this disk offering
        tags:
          dataType: string
          description: the tags for the disk offering
    user_types:
    - root
  updateDomain:
    description: Updates a domain with a new name
    isAsync: 'false'
    name: updateDomain
    request:
      parms:
        id:
          dataType: uuid
          description: ID of domain to update
          required: 'true'
        name:
          dataType: string
          description: updates domain with this name
          required: 'false'
        networkdomain:
          dataType: string
          description: Network domain for the domain's networks; empty string will
            update domainName with NULL value
          required: 'false'
    response:
      parms:
        haschild:
          dataType: boolean
          description: whether the domain has one or more sub-domains
        id:
          dataType: string
          description: the ID of the domain
        level:
          dataType: integer
          description: the level of the domain
        name:
          dataType: string
          description: the name of the domain
        networkdomain:
          dataType: string
          description: the network domain
        parentdomainid:
          dataType: string
          description: the domain ID of the parent domain
        parentdomainname:
          dataType: string
          description: the domain name of the parent domain
        path:
          dataType: string
          description: the path of the domain
    user_types:
    - root
  updateEgressFirewallRule:
    description: 'Updates egress firewall rule '
    isAsync: 'true'
    name: updateEgressFirewallRule
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the egress firewall rule
          required: 'true'
    response:
      parms:
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        endport:
          dataType: string
          description: the ending port of firewall rule's port range
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
        id:
          dataType: string
          description: the ID of the firewall rule
        ipaddress:
          dataType: string
          description: the public ip address for the firewall rule
        ipaddressid:
          dataType: string
          description: the public ip address id for the firewall rule
        networkid:
          dataType: string
          description: the network id of the firewall rule
        protocol:
          dataType: string
          description: the protocol of the firewall rule
        startport:
          dataType: string
          description: the starting port of firewall rule's port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  updateFirewallRule:
    description: 'Updates firewall rule '
    isAsync: 'true'
    name: updateFirewallRule
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the firewall rule
          required: 'true'
    response:
      parms:
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        endport:
          dataType: string
          description: the ending port of firewall rule's port range
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
        id:
          dataType: string
          description: the ID of the firewall rule
        ipaddress:
          dataType: string
          description: the public ip address for the firewall rule
        ipaddressid:
          dataType: string
          description: the public ip address id for the firewall rule
        networkid:
          dataType: string
          description: the network id of the firewall rule
        protocol:
          dataType: string
          description: the protocol of the firewall rule
        startport:
          dataType: string
          description: the starting port of firewall rule's port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  updateGlobalLoadBalancerRule:
    description: update global load balancer rules.
    isAsync: 'true'
    name: updateGlobalLoadBalancerRule
    request:
      parms:
        description:
          dataType: string
          description: the description of the load balancer rule
          required: 'false'
        gslblbmethod:
          dataType: string
          description: load balancer algorithm (roundrobin, leastconn, proximity)
            that is used to distributed traffic across the zones participating in
            global server load balancing, if not specified defaults to 'round robin'
          required: 'false'
        gslbstickysessionmethodname:
          dataType: string
          description: session sticky method (sourceip) if not specified defaults
            to sourceip
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the global load balancer rule
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account of the load balancer rule
        description:
          dataType: string
          description: the description of the global load balancer rule
        domain:
          dataType: string
          description: the domain of the load balancer rule
        domainid:
          dataType: string
          description: the domain ID of the load balancer rule
        gslbdomainname:
          dataType: string
          description: DNS domain name given for the global load balancer
        gslblbmethod:
          dataType: string
          description: Load balancing method used for the global load balancer
        gslbservicetype:
          dataType: string
          description: GSLB service type
        gslbstickysessionmethodname:
          dataType: string
          description: session persistence method used for the global load balancer
        id:
          dataType: string
          description: global load balancer rule ID
        loadbalancerrule:
          dataType: list
          description: List of load balancer rules that are part of GSLB rule
          parms:
            account:
              dataType: string
              description: the account of the load balancer rule
            algorithm:
              dataType: string
              description: the load balancer algorithm (source, roundrobin, leastconn)
            cidrlist:
              dataType: string
              description: the cidr list to forward traffic from
            description:
              dataType: string
              description: the description of the load balancer
            domain:
              dataType: string
              description: the domain of the load balancer rule
            domainid:
              dataType: string
              description: the domain ID of the load balancer rule
            fordisplay:
              dataType: boolean
              description: is rule for display to the regular user
              sinceVersion: '4.4'
            id:
              dataType: string
              description: the load balancer rule ID
            name:
              dataType: string
              description: the name of the load balancer
            networkid:
              dataType: string
              description: the id of the guest network the lb rule belongs to
            privateport:
              dataType: string
              description: the private port
            project:
              dataType: string
              description: the project name of the load balancer
            projectid:
              dataType: string
              description: the project id of the load balancer
            protocol:
              dataType: string
              description: the protocol of the loadbalanacer rule
            publicip:
              dataType: string
              description: the public ip address
            publicipid:
              dataType: string
              description: the public ip address id
            publicport:
              dataType: string
              description: the public port
            state:
              dataType: string
              description: the state of the rule
            tags:
              dataType: list
              description: the list of resource tags associated with load balancer
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
            zoneid:
              dataType: string
              description: the id of the zone the rule belongs to
        name:
          dataType: string
          description: name of the global load balancer rule
        project:
          dataType: string
          description: the project name of the load balancer
        projectid:
          dataType: string
          description: the project id of the load balancer
        regionid:
          dataType: integer
          description: Region Id in which global load balancer is created
    user_types:
    - domain
    - root
    - user
  updateGuestOs:
    description: Updates the information about Guest OS
    isAsync: 'true'
    name: updateGuestOs
    request:
      parms:
        id:
          dataType: uuid
          description: UUID of the Guest OS
          required: 'true'
        osdisplayname:
          dataType: string
          description: Unique display name for Guest OS
          required: 'true'
    response:
      parms:
        description:
          dataType: string
          description: the name/description of the OS type
        id:
          dataType: string
          description: the ID of the OS type
        isuserdefined:
          dataType: string
          description: is the guest OS user defined
        oscategoryid:
          dataType: string
          description: the ID of the OS category
    sinceVersion: 4.4.0
    user_types:
    - root
  updateGuestOsMapping:
    description: Updates the information about Guest OS to Hypervisor specific name
      mapping
    isAsync: 'true'
    name: updateGuestOsMapping
    request:
      parms:
        id:
          dataType: uuid
          description: UUID of the Guest OS to hypervisor name Mapping
          required: 'true'
        osnameforhypervisor:
          dataType: string
          description: Hypervisor specific name for this Guest OS
          required: 'true'
    response:
      parms:
        hypervisor:
          dataType: string
          description: the hypervisor
        hypervisorversion:
          dataType: string
          description: version of the hypervisor for mapping
        id:
          dataType: string
          description: the ID of the Guest OS mapping
        isuserdefined:
          dataType: string
          description: is the mapping user defined
        osdisplayname:
          dataType: string
          description: standard display name for the Guest OS
        osnameforhypervisor:
          dataType: string
          description: hypervisor specific name for the Guest OS
        ostypeid:
          dataType: string
          description: the ID of the Guest OS type
    sinceVersion: 4.4.0
    user_types:
    - root
  updateHost:
    description: Updates a host.
    isAsync: 'false'
    name: updateHost
    request:
      parms:
        allocationstate:
          dataType: string
          description: Change resource state of host, valid values are [Enable, Disable].
            Operation may failed if host in states not allowing Enable/Disable
          required: 'false'
        hosttags:
          dataType: list
          description: list of tags to be added to the host
          required: 'false'
          type: list
        id:
          dataType: uuid
          description: the ID of the host to update
          required: 'true'
        oscategoryid:
          dataType: uuid
          description: the id of Os category to update the host with
          required: 'false'
        url:
          dataType: string
          description: 'the new uri for the secondary storage: nfs://host/path'
          required: 'false'
    response:
      parms:
        averageload:
          dataType: long
          description: the cpu average load on the host
        capabilities:
          dataType: string
          description: capabilities of the host
        clusterid:
          dataType: string
          description: the cluster ID of the host
        clustername:
          dataType: string
          description: the cluster name of the host
        clustertype:
          dataType: string
          description: the cluster type of the cluster that host belongs to
        cpuallocated:
          dataType: string
          description: the amount of the host's CPU currently allocated
        cpunumber:
          dataType: integer
          description: the CPU number of the host
        cpusockets:
          dataType: integer
          description: the number of CPU sockets on the host
        cpuspeed:
          dataType: long
          description: the CPU speed of the host
        cpuused:
          dataType: string
          description: the amount of the host's CPU currently used
        cpuwithoverprovisioning:
          dataType: string
          description: 'the amount of the host''s CPU after applying the cpu.overprovisioning.factor '
        created:
          dataType: date
          description: the date and time the host was created
        details:
          dataType: map
          description: Host details in key/value pairs.
          sinceVersion: '4.5'
        disconnected:
          dataType: date
          description: true if the host is disconnected. False otherwise.
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the host
        events:
          dataType: string
          description: events available for the host
        gpugroup:
          dataType: list
          description: GPU cards present in the host
          parms:
            gpugroupname:
              dataType: string
              description: GPU cards present in the host
            vgpu:
              dataType: list
              description: the list of enabled vGPUs
              parms:
                maxcapacity:
                  dataType: long
                  description: Maximum vgpu can be created with this vgpu type on
                    the given gpu group
                maxheads:
                  dataType: long
                  description: Maximum displays per user
                maxresolutionx:
                  dataType: long
                  description: Maximum X resolution per display
                maxresolutiony:
                  dataType: long
                  description: Maximum Y resolution per display
                maxvgpuperpgpu:
                  dataType: long
                  description: Maximum no. of vgpu per gpu card (pgpu)
                remainingcapacity:
                  dataType: long
                  description: Remaining capacity in terms of no. of more VMs that
                    can be deployped with this vGPU type
                vgputype:
                  dataType: string
                  description: Model Name of vGPU
                videoram:
                  dataType: long
                  description: Video RAM for this vGPU type
          sinceVersion: '4.4'
        hahost:
          dataType: boolean
          description: true if the host is Ha host (dedicated to vms started by HA
            process; false otherwise
        hasenoughcapacity:
          dataType: boolean
          description: true if this host has enough CPU and RAM capacity to migrate
            a VM to it, false otherwise
        hosttags:
          dataType: string
          description: comma-separated list of tags for the host
        hypervisor:
          dataType: hypervisortype
          description: the host hypervisor
        hypervisorversion:
          dataType: string
          description: the hypervisor version
        id:
          dataType: string
          description: the ID of the host
        ipaddress:
          dataType: string
          description: the IP address of the host
        islocalstorageactive:
          dataType: boolean
          description: true if local storage is active, false otherwise
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        lastpinged:
          dataType: date
          description: the date and time the host was last pinged
        managementserverid:
          dataType: long
          description: the management server ID of the host
        memoryallocated:
          dataType: long
          description: the amount of the host's memory currently allocated
        memorytotal:
          dataType: long
          description: the memory total of the host
        memoryused:
          dataType: long
          description: the amount of the host's memory currently used
        name:
          dataType: string
          description: the name of the host
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the host
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        oscategoryid:
          dataType: string
          description: the OS category ID of the host
        oscategoryname:
          dataType: string
          description: the OS category name of the host
        podid:
          dataType: string
          description: the Pod ID of the host
        podname:
          dataType: string
          description: the Pod name of the host
        removed:
          dataType: date
          description: the date and time the host was removed
        resourcestate:
          dataType: string
          description: the resource state of the host
        state:
          dataType: status
          description: the state of the host
        suitableformigration:
          dataType: boolean
          description: true if this host is suitable(has enough capacity and satisfies
            all conditions like hosttags, max guests vm limit etc) to migrate a VM
            to it , false otherwise
        type:
          dataType: type
          description: the host type
        version:
          dataType: string
          description: the host version
        zoneid:
          dataType: string
          description: the Zone ID of the host
        zonename:
          dataType: string
          description: the Zone name of the host
    user_types:
    - root
  updateHostPassword:
    description: Update password of a host/pool on management server.
    isAsync: 'false'
    name: updateHostPassword
    request:
      parms:
        clusterid:
          dataType: uuid
          description: the cluster ID
          required: 'false'
        hostid:
          dataType: uuid
          description: the host ID
          required: 'false'
        password:
          dataType: string
          description: the new password for the host/cluster
          required: 'true'
        username:
          dataType: string
          description: the username for the host/cluster
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - root
  updateHypervisorCapabilities:
    description: Updates a hypervisor capabilities.
    isAsync: 'false'
    name: updateHypervisorCapabilities
    request:
      parms:
        id:
          dataType: uuid
          description: ID of the hypervisor capability
          required: 'false'
        maxguestslimit:
          dataType: long
          description: the max number of Guest VMs per host for this hypervisor.
          required: 'false'
        securitygroupenabled:
          dataType: boolean
          description: set true to enable security group for this hypervisor.
          required: 'false'
    response:
      parms:
        hypervisor:
          dataType: hypervisortype
          description: the hypervisor type
        hypervisorversion:
          dataType: string
          description: the hypervisor version
        id:
          dataType: string
          description: the ID of the hypervisor capabilities row
        maxdatavolumeslimit:
          dataType: integer
          description: the maximum number of Data Volumes that can be attached for
            this hypervisor
        maxguestslimit:
          dataType: long
          description: the maximum number of guest vms recommended for this hypervisor
        maxhostspercluster:
          dataType: integer
          description: the maximum number of Hosts per cluster for this hypervisor
        securitygroupenabled:
          dataType: boolean
          description: true if security group is supported
        storagemotionenabled:
          dataType: boolean
          description: true if storage motion is supported
    sinceVersion: 3.0.0
    user_types:
    - root
  updateInstanceGroup:
    description: Updates a vm group
    isAsync: 'false'
    name: updateInstanceGroup
    request:
      parms:
        id:
          dataType: uuid
          description: Instance group ID
          required: 'true'
        name:
          dataType: string
          description: new instance group name
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account owning the instance group
        created:
          dataType: date
          description: time and date the instance group was created
        domain:
          dataType: string
          description: the domain name of the instance group
        domainid:
          dataType: string
          description: the domain ID of the instance group
        id:
          dataType: string
          description: the id of the instance group
        name:
          dataType: string
          description: the name of the instance group
        project:
          dataType: string
          description: the project name of the group
        projectid:
          dataType: string
          description: the project id of the group
    user_types:
    - domain
    - root
    - user
  updateIpAddress:
    description: Updates an ip address
    isAsync: 'true'
    name: updateIpAddress
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the ip to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the id of the public ip address to update
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account the public IP address is associated with
        allocated:
          dataType: date
          description: date the public IP address was acquired
        associatednetworkid:
          dataType: string
          description: the ID of the Network associated with the IP address
        associatednetworkname:
          dataType: string
          description: the name of the Network associated with the IP address
        domain:
          dataType: string
          description: the domain the public IP address is associated with
        domainid:
          dataType: string
          description: the domain ID the public IP address is associated with
        fordisplay:
          dataType: boolean
          description: is public ip for display to the regular user
          sinceVersion: '4.4'
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the IP address
        id:
          dataType: string
          description: public IP address id
        ipaddress:
          dataType: string
          description: public IP address
        isportable:
          dataType: boolean
          description: is public IP portable across the zones
        issourcenat:
          dataType: boolean
          description: true if the IP address is a source nat address, false otherwise
        isstaticnat:
          dataType: boolean
          description: true if this ip is for static nat, false otherwise
        issystem:
          dataType: boolean
          description: true if this ip is system ip (was allocated as a part of deployVm
            or createLbRule)
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        networkid:
          dataType: string
          description: the ID of the Network where ip belongs to
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        purpose:
          dataType: string
          description: purpose of the IP address. In Acton this value is not null
            for Ips with isSystem=true, and can have either StaticNat or LB value
        state:
          dataType: string
          description: 'State of the ip address. Can be: Allocatin, Allocated and
            Releasing'
        tags:
          dataType: list
          description: the list of resource tags associated with ip address
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        virtualmachinedisplayname:
          dataType: string
          description: virutal machine display name the ip address is assigned to
            (not null only for static nat Ip)
        virtualmachineid:
          dataType: string
          description: virutal machine id the ip address is assigned to (not null
            only for static nat Ip)
        virtualmachinename:
          dataType: string
          description: virutal machine name the ip address is assigned to (not null
            only for static nat Ip)
        vlanid:
          dataType: string
          description: the ID of the VLAN associated with the IP address. This parameter
            is visible to ROOT admins only
        vlanname:
          dataType: string
          description: the VLAN associated with the IP address
        vmipaddress:
          dataType: string
          description: virutal machine (dnat) ip address (not null only for static
            nat Ip)
        vpcid:
          dataType: string
          description: VPC the ip belongs to
        zoneid:
          dataType: string
          description: the ID of the zone the public IP address belongs to
        zonename:
          dataType: string
          description: the name of the zone the public IP address belongs to
    user_types:
    - domain
    - root
    - user
  updateIso:
    description: Updates an ISO file.
    isAsync: 'false'
    name: updateIso
    request:
      parms:
        bootable:
          dataType: boolean
          description: true if image is bootable, false otherwise; available only
            for updateIso API
          required: 'false'
        details:
          dataType: map
          description: Details in key/value pairs.
          required: 'false'
          type: map
        displaytext:
          dataType: string
          description: the display text of the image
          required: 'false'
        format:
          dataType: string
          description: the format for the image
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the image file
          required: 'true'
        isdynamicallyscalable:
          dataType: boolean
          description: true if template/ISO contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
          required: 'false'
        isrouting:
          dataType: boolean
          description: true if the template type is routing i.e., if template is used
            to deploy router
          required: 'false'
        name:
          dataType: string
          description: the name of the image file
          required: 'false'
        ostypeid:
          dataType: uuid
          description: the ID of the OS type that best represents the OS of this image.
          required: 'false'
        passwordenabled:
          dataType: boolean
          description: true if the image supports the password reset feature; default
            is false
          required: 'false'
        requireshvm:
          dataType: boolean
          description: true if the template requres HVM, false otherwise; available
            only for updateTemplate API
          required: 'false'
        sortkey:
          dataType: integer
          description: sort key of the template, integer
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name to which the template belongs
        accountid:
          dataType: string
          description: the account id to which the template belongs
        bootable:
          dataType: boolean
          description: true if the ISO is bootable, false otherwise
        checksum:
          dataType: string
          description: checksum of the template
        created:
          dataType: date
          description: the date this template was created
        crossZones:
          dataType: boolean
          description: true if the template is managed across all Zones, false otherwise
        details:
          dataType: map
          description: additional key/value details tied with template
        displaytext:
          dataType: string
          description: the template display text
        domain:
          dataType: string
          description: the name of the domain to which the template belongs
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        format:
          dataType: imageformat
          description: the format of the template.
        hostid:
          dataType: string
          description: the ID of the secondary storage host for the template
        hostname:
          dataType: string
          description: the name of the secondary storage host for the template
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the template ID
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
        isextractable:
          dataType: boolean
          description: true if the template is extractable, false otherwise
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        isready:
          dataType: boolean
          description: true if the template is ready to be deployed from, false otherwise.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the template name
        ostypeid:
          dataType: string
          description: the ID of the OS type for this template.
        ostypename:
          dataType: string
          description: the name of the OS type for this template.
        passwordenabled:
          dataType: boolean
          description: true if the reset password feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the template
        projectid:
          dataType: string
          description: the project id of the template
        removed:
          dataType: date
          description: the date this template was removed
        size:
          dataType: long
          description: the size of the template
        sourcetemplateid:
          dataType: string
          description: the template ID of the parent template if present
        sshkeyenabled:
          dataType: boolean
          description: true if template is sshkey enabled, false otherwise
        status:
          dataType: string
          description: the status of the template
        tags:
          dataType: set
          description: the list of resource tags associated with tempate
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatetag:
          dataType: string
          description: the tag of this template
        templatetype:
          dataType: string
          description: the type of the template
        zoneid:
          dataType: string
          description: the ID of the zone for this template
        zonename:
          dataType: string
          description: the name of the zone for this template
    user_types:
    - domain
    - root
    - user
  updateIsoPermissions:
    description: Updates iso permissions
    isAsync: 'false'
    name: updateIsoPermissions
    request:
      parms:
        accounts:
          dataType: list
          description: a comma delimited list of accounts. If specified, "op" parameter
            has to be passed in.
          required: 'false'
          type: list
        id:
          dataType: uuid
          description: the template ID
          required: 'true'
        isextractable:
          dataType: boolean
          description: true if the template/iso is extractable, false other wise.
            Can be set only by root admin
          required: 'false'
        isfeatured:
          dataType: boolean
          description: true for featured template/iso, false otherwise
          required: 'false'
        ispublic:
          dataType: boolean
          description: true for public template/iso, false for private templates/isos
          required: 'false'
        op:
          dataType: string
          description: permission operator (add, remove, reset)
          required: 'false'
        projectids:
          dataType: list
          description: a comma delimited list of projects. If specified, "op" parameter
            has to be passed in.
          required: 'false'
          type: list
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  updateLBHealthCheckPolicy:
    description: Updates LB HealthCheck policy
    isAsync: 'true'
    name: updateLBHealthCheckPolicy
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the policy to the
            end user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: id of lb healthcheck policy
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account of the HealthCheck policy
        domain:
          dataType: string
          description: the domain of the HealthCheck policy
        domainid:
          dataType: string
          description: the domain ID of the HealthCheck policy
        healthcheckpolicy:
          dataType: list
          description: the list of healthcheckpolicies
          parms:
            description:
              dataType: string
              description: the description of the healthcheck policy
            fordisplay:
              dataType: boolean
              description: is policy for display to the regular user
              sinceVersion: '4.4'
            healthcheckinterval:
              dataType: int
              description: Amount of time between health checks
            healthcheckthresshold:
              dataType: int
              description: Number of consecutive health check success before declaring
                an instance healthy
            id:
              dataType: string
              description: the LB HealthCheck policy ID
            pingpath:
              dataType: string
              description: the pingpath  of the healthcheck policy
            responsetime:
              dataType: int
              description: Time to wait when receiving a response from the health
                check
            state:
              dataType: string
              description: the state of the policy
            unhealthcheckthresshold:
              dataType: int
              description: Number of consecutive health check failures before declaring
                an instance unhealthy.
        lbruleid:
          dataType: string
          description: the LB rule ID
        zoneid:
          dataType: string
          description: the id of the zone the HealthCheck policy belongs to
    sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  updateLBStickinessPolicy:
    description: Updates LB Stickiness policy
    isAsync: 'true'
    name: updateLBStickinessPolicy
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the policy to the
            end user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: id of lb stickiness policy
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account of the Stickiness policy
        description:
          dataType: string
          description: the description of the Stickiness policy
        domain:
          dataType: string
          description: the domain of the Stickiness policy
        domainid:
          dataType: string
          description: the domain ID of the Stickiness policy
        lbruleid:
          dataType: string
          description: the LB rule ID
        name:
          dataType: string
          description: the name of the Stickiness policy
        state:
          dataType: string
          description: the state of the policy
        stickinesspolicy:
          dataType: list
          description: the list of stickinesspolicies
          parms:
            description:
              dataType: string
              description: the description of the Stickiness policy
            fordisplay:
              dataType: boolean
              description: is policy for display to the regular user
              sinceVersion: '4.4'
            id:
              dataType: string
              description: the LB Stickiness policy ID
            methodname:
              dataType: string
              description: the method name of the Stickiness policy
            name:
              dataType: string
              description: the name of the Stickiness policy
            params:
              dataType: map
              description: the params of the policy
            state:
              dataType: string
              description: the state of the policy
        zoneid:
          dataType: string
          description: the id of the zone the Stickiness policy belongs to
    sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  updateLoadBalancer:
    description: Updates a Load Balancer
    isAsync: 'true'
    name: updateLoadBalancer
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the Load Balancer
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account of the Load Balancer
        algorithm:
          dataType: string
          description: the load balancer algorithm (source, roundrobin, leastconn)
        description:
          dataType: string
          description: the description of the Load Balancer
        domain:
          dataType: string
          description: the domain of the Load Balancer
        domainid:
          dataType: string
          description: the domain ID of the Load Balancer
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the Load Balancer ID
        loadbalancerinstance:
          dataType: list
          description: the list of instances associated with the Load Balancer
          parms:
            id:
              dataType: string
              description: the instance ID
            ipaddress:
              dataType: string
              description: the ip address of the instance
            name:
              dataType: string
              description: the name of the instance
            state:
              dataType: string
              description: the state of the instance
        loadbalancerrule:
          dataType: list
          description: the list of rules associated with the Load Balancer
          parms:
            instanceport:
              dataType: integer
              description: instance port of the load balancer rule
            sourceport:
              dataType: integer
              description: source port of the load balancer rule
            state:
              dataType: string
              description: the state of the load balancer rule
        name:
          dataType: string
          description: the name of the Load Balancer
        networkid:
          dataType: string
          description: Load Balancer network id
        project:
          dataType: string
          description: the project name of the Load Balancer
        projectid:
          dataType: string
          description: the project id of the Load Balancer
        sourceipaddress:
          dataType: string
          description: Load Balancer source ip
        sourceipaddressnetworkid:
          dataType: string
          description: Load Balancer source ip network id
        tags:
          dataType: list
          description: the list of resource tags associated with the Load Balancer
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
    sinceVersion: 4.4.0
    user_types:
    - domain
    - root
    - user
  updateLoadBalancerRule:
    description: Updates load balancer
    isAsync: 'true'
    name: updateLoadBalancerRule
    request:
      parms:
        algorithm:
          dataType: string
          description: load balancer algorithm (source, roundrobin, leastconn)
          required: 'false'
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        description:
          dataType: string
          description: the description of the load balancer rule
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the id of the load balancer rule to update
          required: 'true'
        name:
          dataType: string
          description: the name of the load balancer rule
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account of the load balancer rule
        algorithm:
          dataType: string
          description: the load balancer algorithm (source, roundrobin, leastconn)
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        description:
          dataType: string
          description: the description of the load balancer
        domain:
          dataType: string
          description: the domain of the load balancer rule
        domainid:
          dataType: string
          description: the domain ID of the load balancer rule
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the load balancer rule ID
        name:
          dataType: string
          description: the name of the load balancer
        networkid:
          dataType: string
          description: the id of the guest network the lb rule belongs to
        privateport:
          dataType: string
          description: the private port
        project:
          dataType: string
          description: the project name of the load balancer
        projectid:
          dataType: string
          description: the project id of the load balancer
        protocol:
          dataType: string
          description: the protocol of the loadbalanacer rule
        publicip:
          dataType: string
          description: the public ip address
        publicipid:
          dataType: string
          description: the public ip address id
        publicport:
          dataType: string
          description: the public port
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with load balancer
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        zoneid:
          dataType: string
          description: the id of the zone the rule belongs to
    user_types:
    - domain
    - root
    - user
  updateNetwork:
    description: Updates a network
    isAsync: 'true'
    name: updateNetwork
    request:
      parms:
        changecidr:
          dataType: boolean
          description: Force update even if cidr type is different
          required: 'false'
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        displaynetwork:
          dataType: boolean
          description: an optional field, whether to the display the network to the
            end user or not.
          required: 'false'
        displaytext:
          dataType: string
          description: the new display text for the network
          required: 'false'
        guestvmcidr:
          dataType: string
          description: CIDR for Guest VMs,Cloudstack allocates IPs to Guest VMs only
            from this CIDR
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the network
          required: 'true'
        name:
          dataType: string
          description: the new name for the network
          required: 'false'
        networkdomain:
          dataType: string
          description: network domain
          required: 'false'
        networkofferingid:
          dataType: uuid
          description: network offering ID
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the network
        aclid:
          dataType: string
          description: ACL Id associated with the VPC network
        acltype:
          dataType: string
          description: acl type - access type to the network
        broadcastdomaintype:
          dataType: string
          description: Broadcast domain type of the network
        broadcasturi:
          dataType: string
          description: broadcast uri of the network. This parameter is visible to
            ROOT admins only
        canusefordeploy:
          dataType: boolean
          description: list networks available for vm deployment
        cidr:
          dataType: string
          description: Cloudstack managed address space, all CloudStack managed VMs
            get IP address from CIDR
        displaynetwork:
          dataType: boolean
          description: an optional field, whether to the display the network to the
            end user or not.
        displaytext:
          dataType: string
          description: the displaytext of the network
        dns1:
          dataType: string
          description: the first DNS for the network
        dns2:
          dataType: string
          description: the second DNS for the network
        domain:
          dataType: string
          description: the domain name of the network owner
        domainid:
          dataType: string
          description: the domain id of the network owner
        gateway:
          dataType: string
          description: the network's gateway
        id:
          dataType: string
          description: the id of the network
        ip6cidr:
          dataType: string
          description: the cidr of IPv6 network
        ip6gateway:
          dataType: string
          description: the gateway of IPv6 network
        isdefault:
          dataType: boolean
          description: true if network is default, false otherwise
        ispersistent:
          dataType: boolean
          description: list networks that are persistent
        issystem:
          dataType: boolean
          description: true if network is system, false otherwise
        name:
          dataType: string
          description: the name of the network
        netmask:
          dataType: string
          description: the network's netmask
        networkcidr:
          dataType: string
          description: the network CIDR of the guest network configured with IP reservation.
            It is the summation of CIDR and RESERVED_IP_RANGE
        networkdomain:
          dataType: string
          description: the network domain
        networkofferingavailability:
          dataType: string
          description: availability of the network offering the network is created
            from
        networkofferingconservemode:
          dataType: boolean
          description: true if network offering is ip conserve mode enabled
        networkofferingdisplaytext:
          dataType: string
          description: display text of the network offering the network is created
            from
        networkofferingid:
          dataType: string
          description: network offering id the network is created from
        networkofferingname:
          dataType: string
          description: name of the network offering the network is created from
        physicalnetworkid:
          dataType: string
          description: the physical network id
        project:
          dataType: string
          description: the project name of the address
        projectid:
          dataType: string
          description: the project id of the ipaddress
        related:
          dataType: string
          description: related to what other network configuration
        reservediprange:
          dataType: string
          description: the network's IP range not to be used by CloudStack guest VMs
            and can be used for non CloudStack purposes
        restartrequired:
          dataType: boolean
          description: true network requires restart
        service:
          dataType: list
          description: the list of services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        specifyipranges:
          dataType: boolean
          description: true if network supports specifying ip ranges, false otherwise
        state:
          dataType: string
          description: state of the network
        strechedl2subnet:
          dataType: boolean
          description: true if network can span multiple zones
          sinceVersion: '4.4'
        subdomainaccess:
          dataType: boolean
          description: true if users from subdomains can access the domain level network
        tags:
          dataType: list
          description: the list of resource tags associated with network
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        traffictype:
          dataType: string
          description: the traffic type of the network
        type:
          dataType: string
          description: the type of the network
        vlan:
          dataType: string
          description: The vlan of the network. This parameter is visible to ROOT
            admins only
        vpcid:
          dataType: string
          description: VPC the network belongs to
        zoneid:
          dataType: string
          description: zone id of the network
        zonename:
          dataType: string
          description: the name of the zone the network belongs to
        zonesnetworkspans:
          dataType: set
          description: If a network is enabled for 'streched l2 subnet' then represents
            zones on which network currently spans
          sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  updateNetworkACLItem:
    description: Updates ACL Item with specified Id
    isAsync: 'true'
    name: updateNetworkACLItem
    request:
      parms:
        action:
          dataType: string
          description: scl entry action, allow or deny
          required: 'false'
        cidrlist:
          dataType: list
          description: the cidr list to allow traffic from/to
          required: 'false'
          type: list
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        endport:
          dataType: integer
          description: the ending port of ACL
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
          required: 'false'
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the network ACL Item
          required: 'true'
        number:
          dataType: integer
          description: The network of the vm the ACL will be created for
          required: 'false'
        protocol:
          dataType: string
          description: the protocol for the ACL rule. Valid values are TCP/UDP/ICMP/ALL
            or valid protocol number
          required: 'false'
        startport:
          dataType: integer
          description: the starting port of ACL
          required: 'false'
        traffictype:
          dataType: string
          description: the traffic type for the ACL,can be Ingress or Egress, defaulted
            to Ingress if not specified
          required: 'false'
    response:
      parms:
        aclid:
          dataType: string
          description: the ID of the ACL this item belongs to
        action:
          dataType: string
          description: Action of ACL Item. Allow/Deny
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        endport:
          dataType: string
          description: the ending port of ACL's port range
        fordisplay:
          dataType: boolean
          description: is rule for display to the regular user
          sinceVersion: '4.4'
        icmpcode:
          dataType: integer
          description: error code for this icmp message
        icmptype:
          dataType: integer
          description: type of the icmp message being sent
        id:
          dataType: string
          description: the ID of the ACL Item
        number:
          dataType: integer
          description: Number of the ACL Item
        protocol:
          dataType: string
          description: the protocol of the ACL
        startport:
          dataType: string
          description: the starting port of ACL's port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the network ACLs
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        traffictype:
          dataType: string
          description: the traffic type for the ACL
    user_types:
    - domain
    - root
    - user
  updateNetworkACLList:
    description: Updates Network ACL list
    isAsync: 'true'
    name: updateNetworkACLList
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the list to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the network ACL
          required: 'true'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  updateNetworkOffering:
    description: Updates a network offering.
    isAsync: 'false'
    name: updateNetworkOffering
    request:
      parms:
        availability:
          dataType: string
          description: the availability of network offering. Default value is Required
            for Guest Virtual network offering; Optional for Guest Direct network
            offering
          required: 'false'
        displaytext:
          dataType: string
          description: the display text of the network offering
          required: 'false'
        id:
          dataType: uuid
          description: the id of the network offering
          required: 'false'
        keepaliveenabled:
          dataType: boolean
          description: if true keepalive will be turned on in the loadbalancer. At
            the time of writing this has only an effect on haproxy; the mode http
            and httpclose options are unset in the haproxy conf file.
          required: 'false'
        maxconnections:
          dataType: integer
          description: maximum number of concurrent connections supported by the network
            offering
          required: 'false'
        name:
          dataType: string
          description: the name of the network offering
          required: 'false'
        sortkey:
          dataType: integer
          description: sort key of the network offering, integer
          required: 'false'
        state:
          dataType: string
          description: update state for the network offering
          required: 'false'
    response:
      parms:
        availability:
          dataType: string
          description: availability of the network offering
        conservemode:
          dataType: boolean
          description: true if network offering is ip conserve mode enabled
        created:
          dataType: date
          description: the date this network offering was created
        details:
          dataType: map
          description: additional key/value details tied with network offering
          sinceVersion: 4.2.0
        displaytext:
          dataType: string
          description: an alternate display text of the network offering.
        egressdefaultpolicy:
          dataType: boolean
          description: true if guest network default egress policy is allow; false
            if default egress policy is deny
        forvpc:
          dataType: boolean
          description: true if network offering can be used by VPC networks only
        guestiptype:
          dataType: string
          description: guest type of the network offering, can be Shared or Isolated
        id:
          dataType: string
          description: the id of the network offering
        isdefault:
          dataType: boolean
          description: true if network offering is default, false otherwise
        ispersistent:
          dataType: boolean
          description: true if network offering supports persistent networks, false
            otherwise
        maxconnections:
          dataType: integer
          description: maximum number of concurrents connections to be handled by
            lb
        name:
          dataType: string
          description: the name of the network offering
        networkrate:
          dataType: integer
          description: data transfer rate in megabits per second allowed.
        service:
          dataType: list
          description: the list of supported services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        serviceofferingid:
          dataType: string
          description: the ID of the service offering used by virtual router provider
        specifyipranges:
          dataType: boolean
          description: true if network offering supports specifying ip ranges, false
            otherwise
        specifyvlan:
          dataType: boolean
          description: true if network offering supports vlans, false otherwise
        state:
          dataType: string
          description: state of the network offering. Can be Disabled/Enabled/Inactive
        supportsstrechedl2subnet:
          dataType: boolean
          description: true if network offering supports network that span multiple
            zones
          sinceVersion: '4.4'
        tags:
          dataType: string
          description: the tags for the network offering
        traffictype:
          dataType: string
          description: the traffic type for the network offering, supported types
            are Public, Management, Control, Guest, Vlan or Storage.
    user_types:
    - root
  updateNetworkServiceProvider:
    description: Updates a network serviceProvider of a physical network
    isAsync: 'true'
    name: updateNetworkServiceProvider
    request:
      parms:
        id:
          dataType: uuid
          description: network service provider id
          required: 'true'
        servicelist:
          dataType: list
          description: the list of services to be enabled for this physical network
            service provider
          required: 'false'
          type: list
        state:
          dataType: string
          description: Enabled/Disabled/Shutdown the physical network service provider
          required: 'false'
    response:
      parms:
        canenableindividualservice:
          dataType: boolean
          description: true if individual services can be enabled/disabled
        destinationphysicalnetworkid:
          dataType: string
          description: the destination physical network
        id:
          dataType: string
          description: uuid of the network provider
        name:
          dataType: string
          description: the provider name
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        servicelist:
          dataType: list
          description: services for this provider
        state:
          dataType: string
          description: state of the network provider
    sinceVersion: 3.0.0
    user_types:
    - root
  updatePhysicalNetwork:
    description: Updates a physical network
    isAsync: 'true'
    name: updatePhysicalNetwork
    request:
      parms:
        id:
          dataType: uuid
          description: physical network id
          required: 'true'
        networkspeed:
          dataType: string
          description: the speed for the physical network[1G/10G]
          required: 'false'
        state:
          dataType: string
          description: Enabled/Disabled
          required: 'false'
        tags:
          dataType: list
          description: Tag the physical network
          required: 'false'
          type: list
        vlan:
          dataType: string
          description: the VLAN for the physical network
          required: 'false'
    response:
      parms:
        broadcastdomainrange:
          dataType: string
          description: Broadcast domain range of the physical network
        domainid:
          dataType: string
          description: the domain id of the physical network owner
        id:
          dataType: string
          description: the uuid of the physical network
        isolationmethods:
          dataType: string
          description: isolation methods
        name:
          dataType: string
          description: name of the physical network
        networkspeed:
          dataType: string
          description: the speed of the physical network
        state:
          dataType: string
          description: state of the physical network
        tags:
          dataType: string
          description: comma separated tag
        vlan:
          dataType: string
          description: the vlan of the physical network
        zoneid:
          dataType: string
          description: zone id of the physical network
    sinceVersion: 3.0.0
    user_types:
    - root
  updatePod:
    description: Updates a Pod.
    isAsync: 'false'
    name: updatePod
    request:
      parms:
        allocationstate:
          dataType: string
          description: Allocation state of this cluster for allocation of new resources
          required: 'false'
        endip:
          dataType: string
          description: the ending IP address for the Pod
          required: 'false'
        gateway:
          dataType: string
          description: the gateway for the Pod
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the Pod
          required: 'true'
        name:
          dataType: string
          description: the name of the Pod
          required: 'false'
        netmask:
          dataType: string
          description: the netmask of the Pod
          required: 'false'
        startip:
          dataType: string
          description: the starting IP address for the Pod
          required: 'false'
    response:
      parms:
        allocationstate:
          dataType: string
          description: the allocation state of the Pod
        capacity:
          dataType: list
          description: the capacity of the Pod
          parms:
            capacitytotal:
              dataType: long
              description: the total capacity available
            capacityused:
              dataType: long
              description: the capacity currently in use
            clusterid:
              dataType: string
              description: the Cluster ID
            clustername:
              dataType: string
              description: the Cluster name
            percentused:
              dataType: string
              description: the percentage of capacity currently in use
            podid:
              dataType: string
              description: the Pod ID
            podname:
              dataType: string
              description: the Pod name
            type:
              dataType: short
              description: the capacity type
            zoneid:
              dataType: string
              description: the Zone ID
            zonename:
              dataType: string
              description: the Zone name
        endip:
          dataType: string
          description: the ending IP for the Pod
        gateway:
          dataType: string
          description: the gateway of the Pod
        id:
          dataType: string
          description: the ID of the Pod
        name:
          dataType: string
          description: the name of the Pod
        netmask:
          dataType: string
          description: the netmask of the Pod
        startip:
          dataType: string
          description: the starting IP for the Pod
        zoneid:
          dataType: string
          description: the Zone ID of the Pod
        zonename:
          dataType: string
          description: the Zone name of the Pod
    user_types:
    - root
  updatePortForwardingRule:
    description: Updates a port forwarding rule.  Only the private port and the virtual
      machine can be updated.
    isAsync: 'true'
    name: updatePortForwardingRule
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the rule to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the port forwarding rule
          required: 'true'
          sinceVersion: '4.4'
        ipaddressid:
          dataType: uuid
          description: the IP address id of the port forwarding rule
          required: 'false'
        privateip:
          dataType: string
          description: the private IP address of the port forwarding rule
          required: 'false'
        privateport:
          dataType: string
          description: the private port of the port forwarding rule
          required: 'false'
        protocol:
          dataType: string
          description: the protocol for the port fowarding rule. Valid values are
            TCP or UDP.
          required: 'false'
        publicport:
          dataType: string
          description: the public port of the port forwarding rule
          required: 'false'
        virtualmachineid:
          dataType: uuid
          description: the ID of the virtual machine for the port forwarding rule
          required: 'false'
    response:
      parms:
        cidrlist:
          dataType: string
          description: the cidr list to forward traffic from
        fordisplay:
          dataType: boolean
          description: is firewall for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the ID of the port forwarding rule
        ipaddress:
          dataType: string
          description: the public ip address for the port forwarding rule
        ipaddressid:
          dataType: string
          description: the public ip address id for the port forwarding rule
        networkid:
          dataType: string
          description: the id of the guest network the port forwarding rule belongs
            to
        privateendport:
          dataType: string
          description: the ending port of port forwarding rule's private port range
        privateport:
          dataType: string
          description: the starting port of port forwarding rule's private port range
        protocol:
          dataType: string
          description: the protocol of the port forwarding rule
        publicendport:
          dataType: string
          description: the ending port of port forwarding rule's private port range
        publicport:
          dataType: string
          description: the starting port of port forwarding rule's public port range
        state:
          dataType: string
          description: the state of the rule
        tags:
          dataType: list
          description: the list of resource tags associated with the rule
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        virtualmachinedisplayname:
          dataType: string
          description: the VM display name for the port forwarding rule
        virtualmachineid:
          dataType: string
          description: the VM ID for the port forwarding rule
        virtualmachinename:
          dataType: string
          description: the VM name for the port forwarding rule
        vmguestip:
          dataType: string
          description: the vm ip address for the port forwarding rule
    user_types:
    - domain
    - root
    - user
  updateProject:
    description: Updates a project
    isAsync: 'true'
    name: updateProject
    request:
      parms:
        account:
          dataType: string
          description: new Admin account for the project
          required: 'false'
        displaytext:
          dataType: string
          description: display text of the project
          required: 'false'
        id:
          dataType: uuid
          description: id of the project to be modified
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the project's owner
        cpuavailable:
          dataType: string
          description: the total number of cpu cores available to be created for this
            project
          sinceVersion: 4.2.0
        cpulimit:
          dataType: string
          description: the total number of cpu cores the project can own
          sinceVersion: 4.2.0
        cputotal:
          dataType: long
          description: the total number of cpu cores owned by project
          sinceVersion: 4.2.0
        displaytext:
          dataType: string
          description: the displaytext of the project
        domain:
          dataType: string
          description: the domain name where the project belongs to
        domainid:
          dataType: string
          description: the domain id the project belongs to
        id:
          dataType: string
          description: the id of the project
        ipavailable:
          dataType: string
          description: the total number of public ip addresses available for this
            project to acquire
          sinceVersion: 4.2.0
        iplimit:
          dataType: string
          description: the total number of public ip addresses this project can acquire
          sinceVersion: 4.2.0
        iptotal:
          dataType: long
          description: the total number of public ip addresses allocated for this
            project
          sinceVersion: 4.2.0
        memoryavailable:
          dataType: string
          description: the total memory (in MB) available to be created for this project
          sinceVersion: 4.2.0
        memorylimit:
          dataType: string
          description: the total memory (in MB) the project can own
          sinceVersion: 4.2.0
        memorytotal:
          dataType: long
          description: the total memory (in MB) owned by project
          sinceVersion: 4.2.0
        name:
          dataType: string
          description: the name of the project
        networkavailable:
          dataType: string
          description: the total number of networks available to be created for this
            project
          sinceVersion: 4.2.0
        networklimit:
          dataType: string
          description: the total number of networks the project can own
          sinceVersion: 4.2.0
        networktotal:
          dataType: long
          description: the total number of networks owned by project
          sinceVersion: 4.2.0
        primarystorageavailable:
          dataType: string
          description: the total primary storage space (in GiB) available to be used
            for this project
          sinceVersion: 4.2.0
        primarystoragelimit:
          dataType: string
          description: the total primary storage space (in GiB) the project can own
          sinceVersion: 4.2.0
        primarystoragetotal:
          dataType: long
          description: the total primary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        secondarystorageavailable:
          dataType: string
          description: the total secondary storage space (in GiB) available to be
            used for this project
          sinceVersion: 4.2.0
        secondarystoragelimit:
          dataType: string
          description: the total secondary storage space (in GiB) the project can
            own
          sinceVersion: 4.2.0
        secondarystoragetotal:
          dataType: long
          description: the total secondary storage space (in GiB) owned by project
          sinceVersion: 4.2.0
        snapshotavailable:
          dataType: string
          description: the total number of snapshots available for this project
          sinceVersion: 4.2.0
        snapshotlimit:
          dataType: string
          description: the total number of snapshots which can be stored by this project
          sinceVersion: 4.2.0
        snapshottotal:
          dataType: long
          description: the total number of snapshots stored by this project
          sinceVersion: 4.2.0
        state:
          dataType: string
          description: the state of the project
        tags:
          dataType: list
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templateavailable:
          dataType: string
          description: the total number of templates available to be created by this
            project
          sinceVersion: 4.2.0
        templatelimit:
          dataType: string
          description: the total number of templates which can be created by this
            project
          sinceVersion: 4.2.0
        templatetotal:
          dataType: long
          description: the total number of templates which have been created by this
            project
          sinceVersion: 4.2.0
        vmavailable:
          dataType: string
          description: the total number of virtual machines available for this project
            to acquire
          sinceVersion: 4.2.0
        vmlimit:
          dataType: string
          description: the total number of virtual machines that can be deployed by
            this project
          sinceVersion: 4.2.0
        vmrunning:
          dataType: integer
          description: the total number of virtual machines running for this project
          sinceVersion: 4.2.0
        vmstopped:
          dataType: integer
          description: the total number of virtual machines stopped for this project
          sinceVersion: 4.2.0
        vmtotal:
          dataType: long
          description: the total number of virtual machines deployed by this project
          sinceVersion: 4.2.0
        volumeavailable:
          dataType: string
          description: the total volume available for this project
          sinceVersion: 4.2.0
        volumelimit:
          dataType: string
          description: the total volume which can be used by this project
          sinceVersion: 4.2.0
        volumetotal:
          dataType: long
          description: the total volume being used by this project
          sinceVersion: 4.2.0
        vpcavailable:
          dataType: string
          description: the total number of vpcs available to be created for this project
          sinceVersion: 4.2.0
        vpclimit:
          dataType: string
          description: the total number of vpcs the project can own
          sinceVersion: 4.2.0
        vpctotal:
          dataType: long
          description: the total number of vpcs owned by project
          sinceVersion: 4.2.0
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  updateProjectInvitation:
    description: Accepts or declines project invitation
    isAsync: 'true'
    name: updateProjectInvitation
    request:
      parms:
        accept:
          dataType: boolean
          description: if true, accept the invitation, decline if false. True by default
          required: 'false'
        account:
          dataType: string
          description: account that is joining the project
          required: 'false'
        projectid:
          dataType: uuid
          description: id of the project to join
          required: 'true'
        token:
          dataType: string
          description: list invitations for specified account; this parameter has
            to be specified with domainId
          required: 'false'
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    sinceVersion: 3.0.0
    user_types:
    - domain
    - root
    - user
  updateRegion:
    description: Updates a region
    isAsync: 'false'
    name: updateRegion
    request:
      parms:
        endpoint:
          dataType: string
          description: updates region with this end point
          required: 'false'
        id:
          dataType: integer
          description: Id of region to update
          required: 'true'
        name:
          dataType: string
          description: updates region with this name
          required: 'false'
    response:
      parms:
        endpoint:
          dataType: string
          description: the end point of the region
        gslbserviceenabled:
          dataType: boolean
          description: true if GSLB service is enabled in the region, false otherwise
        id:
          dataType: integer
          description: the ID of the region
        name:
          dataType: string
          description: the name of the region
        portableipserviceenabled:
          dataType: boolean
          description: true if security groups support is enabled, false otherwise
    user_types:
    - root
  updateRemoteAccessVpn:
    description: Updates remote access vpn
    isAsync: 'true'
    name: updateRemoteAccessVpn
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the vpn to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: id of the remote access vpn
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account of the remote access vpn
        domain:
          dataType: string
          description: the domain name of the account of the remote access vpn
        domainid:
          dataType: string
          description: the domain id of the account of the remote access vpn
        fordisplay:
          dataType: boolean
          description: is vpn for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the remote access vpn
        iprange:
          dataType: string
          description: the range of ips to allocate to the clients
        presharedkey:
          dataType: string
          description: the ipsec preshared key
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        publicip:
          dataType: string
          description: the public ip address of the vpn server
        publicipid:
          dataType: string
          description: the public ip address of the vpn server
        state:
          dataType: string
          description: the state of the rule
    sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  updateResourceCount:
    description: Recalculate and update resource count for an account or domain.
    isAsync: 'false'
    name: updateResourceCount
    request:
      parms:
        account:
          dataType: string
          description: Update resource count for a specified account. Must be used
            with the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: If account parameter specified then updates resource counts
            for a specified account in this domain else update resource counts for
            all accounts & child domains in specified domain.
          required: 'true'
        projectid:
          dataType: uuid
          description: Update resource limits for project
          required: 'false'
        resourcetype:
          dataType: integer
          description: Type of resource to update. If specifies valid values are 0,
            1, 2, 3, 4, 5, 6, 7, 8, 9, 10 and 11. If not specified will update all
            resource counts0 - Instance. Number of instances a user can create. 1
            - IP. Number of public IP addresses a user can own. 2 - Volume. Number
            of disk volumes a user can create.3 - Snapshot. Number of snapshots a
            user can create.4 - Template. Number of templates that a user can register/create.5
            - Project. Number of projects that a user can create.6 - Network. Number
            of guest network a user can create.7 - VPC. Number of VPC a user can create.8
            - CPU. Total number of CPU cores a user can use.9 - Memory. Total Memory
            (in MB) a user can use.10 - PrimaryStorage. Total primary storage space
            (in GiB) a user can use.11 - SecondaryStorage. Total secondary storage
            space (in GiB) a user can use.
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account for which resource count's are updated
        domain:
          dataType: string
          description: the domain name for which resource count's are updated
        domainid:
          dataType: string
          description: the domain ID for which resource count's are updated
        project:
          dataType: string
          description: the project name for which resource count's are updated
        projectid:
          dataType: string
          description: the project id for which resource count's are updated
        resourcecount:
          dataType: long
          description: resource count
        resourcetype:
          dataType: string
          description: resource type. Values include 0, 1, 2, 3, 4, 5, 6, 7, 8, 9,
            10, 11. See the resourceType parameter for more information on these values.
    user_types:
    - domain
    - root
  updateResourceLimit:
    description: Updates resource limits for an account or domain.
    isAsync: 'false'
    name: updateResourceLimit
    request:
      parms:
        account:
          dataType: string
          description: Update resource for a specified account. Must be used with
            the domainId parameter.
          required: 'false'
        domainid:
          dataType: uuid
          description: Update resource limits for all accounts in specified domain.
            If used with the account parameter, updates resource limits for a specified
            account in specified domain.
          required: 'false'
        max:
          dataType: long
          description: '  Maximum resource limit.'
          required: 'false'
        projectid:
          dataType: uuid
          description: Update resource limits for project
          required: 'false'
        resourcetype:
          dataType: integer
          description: Type of resource to update. Values are 0, 1, 2, 3, 4, 6, 7,
            8, 9, 10 and 11. 0 - Instance. Number of instances a user can create.
            1 - IP. Number of public IP addresses a user can own. 2 - Volume. Number
            of disk volumes a user can create.3 - Snapshot. Number of snapshots a
            user can create.4 - Template. Number of templates that a user can register/create.6
            - Network. Number of guest network a user can create.7 - VPC. Number of
            VPC a user can create.8 - CPU. Total number of CPU cores a user can use.9
            - Memory. Total Memory (in MB) a user can use.10 - PrimaryStorage. Total
            primary storage space (in GiB) a user can use.11 - SecondaryStorage. Total
            secondary storage space (in GiB) a user can use.
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account of the resource limit
        domain:
          dataType: string
          description: the domain name of the resource limit
        domainid:
          dataType: string
          description: the domain ID of the resource limit
        max:
          dataType: long
          description: the maximum number of the resource. A -1 means the resource
            currently has no limit.
        project:
          dataType: string
          description: the project name of the resource limit
        projectid:
          dataType: string
          description: the project id of the resource limit
        resourcetype:
          dataType: string
          description: resource type. Values include 0, 1, 2, 3, 4, 6, 7, 8, 9, 10,
            11. See the resourceType parameter for more information on these values.
    user_types:
    - domain
    - root
  updateServiceOffering:
    description: Updates a service offering.
    isAsync: 'false'
    name: updateServiceOffering
    request:
      parms:
        displaytext:
          dataType: string
          description: the display text of the service offering to be updated
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the service offering to be updated
          required: 'true'
        name:
          dataType: string
          description: the name of the service offering to be updated
          required: 'false'
        sortkey:
          dataType: integer
          description: sort key of the service offering, integer
          required: 'false'
    response:
      parms:
        cpunumber:
          dataType: integer
          description: the number of CPU
        cpuspeed:
          dataType: integer
          description: the clock rate CPU speed in Mhz
        created:
          dataType: date
          description: the date this service offering was created
        defaultuse:
          dataType: boolean
          description: is this a  default system vm offering
        deploymentplanner:
          dataType: string
          description: deployment strategy used to deploy VM.
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the service offering
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the service offering
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the service offering
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the service offering
        displaytext:
          dataType: string
          description: an alternate display text of the service offering.
        domain:
          dataType: string
          description: Domain name for the offering
        domainid:
          dataType: string
          description: the domain id of the service offering
        hosttags:
          dataType: string
          description: the host tag for the service offering
        hypervisorsnapshotreserve:
          dataType: integer
          description: Hypervisor snapshot reserve space as a percent of a volume
            (for managed storage using Xen or VMware)
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the service offering
        iscustomized:
          dataType: boolean
          description: is true if the offering is customized
          sinceVersion: 4.3.0
        iscustomizediops:
          dataType: boolean
          description: true if disk offering uses custom iops, false otherwise
          sinceVersion: '4.4'
        issystem:
          dataType: boolean
          description: is this a system vm offering
        isvolatile:
          dataType: boolean
          description: true if the vm needs to be volatile, i.e., on every reboot
            of vm from API root disk is discarded and creates a new root disk
        limitcpuuse:
          dataType: boolean
          description: restrict the CPU usage to committed service offering
        maxiops:
          dataType: long
          description: the max iops of the disk offering
          sinceVersion: '4.4'
        memory:
          dataType: integer
          description: the memory in MB
        miniops:
          dataType: long
          description: the min iops of the disk offering
          sinceVersion: '4.4'
        name:
          dataType: string
          description: the name of the service offering
        networkrate:
          dataType: integer
          description: data transfer rate in megabits per second allowed.
        offerha:
          dataType: boolean
          description: the ha support in the service offering
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes. Valid values are
            thin, sparse, fat.
          sinceVersion: 4.4.0
        serviceofferingdetails:
          dataType: map
          description: additional key/value details tied with this service offering
          sinceVersion: 4.2.0
        storagetype:
          dataType: string
          description: the storage type for this service offering
        systemvmtype:
          dataType: string
          description: is this a the systemvm type for system vm offering
        tags:
          dataType: string
          description: the tags for the service offering
    user_types:
    - root
  updateSnapshotPolicy:
    description: Updates the snapshot policy.
    isAsync: 'true'
    name: updateSnapshotPolicy
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the snapshot policy
            to the end user or not.
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the ID of the snapshot policy
          required: 'false'
    response:
      parms:
        fordisplay:
          dataType: boolean
          description: is this policy for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the ID of the snapshot policy
        intervaltype:
          dataType: short
          description: the interval type of the snapshot policy
        maxsnaps:
          dataType: int
          description: maximum number of snapshots retained
        schedule:
          dataType: string
          description: time the snapshot is scheduled to be taken.
        timezone:
          dataType: string
          description: the time zone of the snapshot policy
        volumeid:
          dataType: string
          description: the ID of the disk volume
    user_types:
    - domain
    - root
    - user
  updateStorageNetworkIpRange:
    description: Update a Storage network IP range, only allowed when no IPs in this
      range have been allocated.
    isAsync: 'true'
    name: updateStorageNetworkIpRange
    request:
      parms:
        endip:
          dataType: string
          description: the ending IP address
          required: 'false'
        id:
          dataType: uuid
          description: UUID of storage network ip range
          required: 'true'
        netmask:
          dataType: string
          description: the netmask for storage network
          required: 'false'
        startip:
          dataType: string
          description: the beginning IP address
          required: 'false'
        vlan:
          dataType: integer
          description: Optional. the vlan the ip range sits on
          required: 'false'
    response:
      parms:
        endip:
          dataType: string
          description: the end ip of the storage network IP range
        gateway:
          dataType: string
          description: the gateway of the storage network IP range
        id:
          dataType: string
          description: the uuid of storage network IP range.
        netmask:
          dataType: string
          description: the netmask of the storage network IP range
        networkid:
          dataType: string
          description: the network uuid of storage network IP range
        podid:
          dataType: string
          description: the Pod uuid for the storage network IP range
        startip:
          dataType: string
          description: the start ip of the storage network IP range
        vlan:
          dataType: integer
          description: the ID or VID of the VLAN.
        zoneid:
          dataType: string
          description: the Zone uuid of the storage network IP range
    sinceVersion: 3.0.0
    user_types:
    - root
  updateStoragePool:
    description: Updates a storage pool.
    isAsync: 'false'
    name: updateStoragePool
    request:
      parms:
        capacitybytes:
          dataType: long
          description: bytes CloudStack can provision from this storage pool
          required: 'false'
        capacityiops:
          dataType: long
          description: IOPS CloudStack can provision from this storage pool
          required: 'false'
        id:
          dataType: uuid
          description: the Id of the storage pool
          required: 'true'
        tags:
          dataType: list
          description: comma-separated list of tags for the storage pool
          required: 'false'
          type: list
    response:
      parms:
        capacityiops:
          dataType: long
          description: IOPS CloudStack can provision from this storage pool
        clusterid:
          dataType: string
          description: the ID of the cluster for the storage pool
        clustername:
          dataType: string
          description: the name of the cluster for the storage pool
        created:
          dataType: date
          description: the date and time the storage pool was created
        disksizeallocated:
          dataType: long
          description: the host's currently allocated disk size
        disksizetotal:
          dataType: long
          description: the total disk size of the storage pool
        disksizeused:
          dataType: long
          description: the host's currently used disk size
        hypervisor:
          dataType: string
          description: the hypervisor type of the storage pool
        id:
          dataType: string
          description: the ID of the storage pool
        ipaddress:
          dataType: string
          description: the IP address of the storage pool
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the name of the storage pool
        overprovisionfactor:
          dataType: string
          description: the overprovisionfactor for the storage pool
          sinceVersion: '4.4'
        path:
          dataType: string
          description: the storage pool path
        podid:
          dataType: string
          description: the Pod ID of the storage pool
        podname:
          dataType: string
          description: the Pod name of the storage pool
        scope:
          dataType: string
          description: the scope of the storage pool
        state:
          dataType: storagepoolstatus
          description: the state of the storage pool
        storagecapabilities:
          dataType: map
          description: the storage pool capabilities
        suitableformigration:
          dataType: boolean
          description: true if this pool is suitable to migrate a volume, false otherwise
        tags:
          dataType: string
          description: the tags for the storage pool
        type:
          dataType: string
          description: the storage pool type
        zoneid:
          dataType: string
          description: the Zone ID of the storage pool
        zonename:
          dataType: string
          description: the Zone name of the storage pool
    sinceVersion: 3.0.0
    user_types:
    - root
  updateTemplate:
    description: Updates attributes of a template.
    isAsync: 'false'
    name: updateTemplate
    request:
      parms:
        bootable:
          dataType: boolean
          description: true if image is bootable, false otherwise; available only
            for updateIso API
          required: 'false'
        details:
          dataType: map
          description: Details in key/value pairs.
          required: 'false'
          type: map
        displaytext:
          dataType: string
          description: the display text of the image
          required: 'false'
        format:
          dataType: string
          description: the format for the image
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the image file
          required: 'true'
        isdynamicallyscalable:
          dataType: boolean
          description: true if template/ISO contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
          required: 'false'
        isrouting:
          dataType: boolean
          description: true if the template type is routing i.e., if template is used
            to deploy router
          required: 'false'
        name:
          dataType: string
          description: the name of the image file
          required: 'false'
        ostypeid:
          dataType: uuid
          description: the ID of the OS type that best represents the OS of this image.
          required: 'false'
        passwordenabled:
          dataType: boolean
          description: true if the image supports the password reset feature; default
            is false
          required: 'false'
        requireshvm:
          dataType: boolean
          description: true if the template requres HVM, false otherwise; available
            only for updateTemplate API
          required: 'false'
        sortkey:
          dataType: integer
          description: sort key of the template, integer
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name to which the template belongs
        accountid:
          dataType: string
          description: the account id to which the template belongs
        bootable:
          dataType: boolean
          description: true if the ISO is bootable, false otherwise
        checksum:
          dataType: string
          description: checksum of the template
        created:
          dataType: date
          description: the date this template was created
        crossZones:
          dataType: boolean
          description: true if the template is managed across all Zones, false otherwise
        details:
          dataType: map
          description: additional key/value details tied with template
        displaytext:
          dataType: string
          description: the template display text
        domain:
          dataType: string
          description: the name of the domain to which the template belongs
        domainid:
          dataType: string
          description: the ID of the domain to which the template belongs
        format:
          dataType: imageformat
          description: the format of the template.
        hostid:
          dataType: string
          description: the ID of the secondary storage host for the template
        hostname:
          dataType: string
          description: the name of the secondary storage host for the template
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the template ID
        isdynamicallyscalable:
          dataType: boolean
          description: true if template contains XS/VMWare tools inorder to support
            dynamic scaling of VM cpu/memory
        isextractable:
          dataType: boolean
          description: true if the template is extractable, false otherwise
        isfeatured:
          dataType: boolean
          description: true if this template is a featured template, false otherwise
        ispublic:
          dataType: boolean
          description: true if this template is a public template, false otherwise
        isready:
          dataType: boolean
          description: true if the template is ready to be deployed from, false otherwise.
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        name:
          dataType: string
          description: the template name
        ostypeid:
          dataType: string
          description: the ID of the OS type for this template.
        ostypename:
          dataType: string
          description: the name of the OS type for this template.
        passwordenabled:
          dataType: boolean
          description: true if the reset password feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the template
        projectid:
          dataType: string
          description: the project id of the template
        removed:
          dataType: date
          description: the date this template was removed
        size:
          dataType: long
          description: the size of the template
        sourcetemplateid:
          dataType: string
          description: the template ID of the parent template if present
        sshkeyenabled:
          dataType: boolean
          description: true if template is sshkey enabled, false otherwise
        status:
          dataType: string
          description: the status of the template
        tags:
          dataType: set
          description: the list of resource tags associated with tempate
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatetag:
          dataType: string
          description: the tag of this template
        templatetype:
          dataType: string
          description: the type of the template
        zoneid:
          dataType: string
          description: the ID of the zone for this template
        zonename:
          dataType: string
          description: the name of the zone for this template
    user_types:
    - domain
    - root
    - user
  updateTemplatePermissions:
    description: Updates a template visibility permissions. A public template is visible
      to all accounts within the same domain. A private template is visible only to
      the owner of the template. A priviledged template is a private template with
      account permissions added. Only accounts specified under the template permissions
      are visible to them.
    isAsync: 'false'
    name: updateTemplatePermissions
    request:
      parms:
        accounts:
          dataType: list
          description: a comma delimited list of accounts. If specified, "op" parameter
            has to be passed in.
          required: 'false'
          type: list
        id:
          dataType: uuid
          description: the template ID
          required: 'true'
        isextractable:
          dataType: boolean
          description: true if the template/iso is extractable, false other wise.
            Can be set only by root admin
          required: 'false'
        isfeatured:
          dataType: boolean
          description: true for featured template/iso, false otherwise
          required: 'false'
        ispublic:
          dataType: boolean
          description: true for public template/iso, false for private templates/isos
          required: 'false'
        op:
          dataType: string
          description: permission operator (add, remove, reset)
          required: 'false'
        projectids:
          dataType: list
          description: a comma delimited list of projects. If specified, "op" parameter
            has to be passed in.
          required: 'false'
          type: list
    response:
      parms:
        displaytext:
          dataType: string
          description: any text associated with the success or failure
        success:
          dataType: boolean
          description: true if operation is executed successfully
    user_types:
    - domain
    - root
    - user
  updateTrafficType:
    description: Updates traffic type of a physical network
    isAsync: 'true'
    name: updateTrafficType
    request:
      parms:
        hypervnetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a Hyperv host
          required: 'false'
        id:
          dataType: uuid
          description: traffic type id
          required: 'true'
        kvmnetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a KVM host
          required: 'false'
        vmwarenetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a VMware host
          required: 'false'
        xennetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a XenServer host
          required: 'false'
    response:
      parms:
        hypervnetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a HyperV host
        id:
          dataType: string
          description: id of the network provider
        kvmnetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a KVM host
        physicalnetworkid:
          dataType: string
          description: the physical network this belongs to
        traffictype:
          dataType: string
          description: the trafficType to be added to the physical network
        vmwarenetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a VMware host
        xennetworklabel:
          dataType: string
          description: The network name label of the physical device dedicated to
            this traffic on a XenServer host
    sinceVersion: 3.0.0
    user_types:
    - root
  updateUser:
    description: Updates a user account
    isAsync: 'false'
    name: updateUser
    request:
      parms:
        email:
          dataType: string
          description: email
          required: 'false'
        firstname:
          dataType: string
          description: first name
          required: 'false'
        id:
          dataType: uuid
          description: User uuid
          required: 'true'
        lastname:
          dataType: string
          description: last name
          required: 'false'
        password:
          dataType: string
          description: Clear text password (default hashed to SHA256SALT). If you
            wish to use any other hasing algorithm, you would need to write a custom
            authentication adapter
          required: 'false'
        timezone:
          dataType: string
          description: Specifies a timezone for this command. For more information
            on the timezone parameter, see Time Zone Format.
          required: 'false'
        userapikey:
          dataType: string
          description: The API key for the user. Must be specified with userSecretKey
          required: 'false'
        username:
          dataType: string
          description: Unique username
          required: 'false'
        usersecretkey:
          dataType: string
          description: The secret key for the user. Must be specified with userSecretKey
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account name of the user
        accountid:
          dataType: string
          description: the account ID of the user
        accounttype:
          dataType: short
          description: the account type of the user
        apikey:
          dataType: string
          description: the api key of the user
        created:
          dataType: date
          description: the date and time the user account was created
        domain:
          dataType: string
          description: the domain name of the user
        domainid:
          dataType: string
          description: the domain ID of the user
        email:
          dataType: string
          description: the user email address
        firstname:
          dataType: string
          description: the user firstname
        id:
          dataType: string
          description: the user ID
        iscallerchilddomain:
          dataType: boolean
          description: the boolean value representing if the updating target is in
            caller's child domain
        isdefault:
          dataType: boolean
          description: true if user is default, false otherwise
          sinceVersion: 4.2.0
        lastname:
          dataType: string
          description: the user lastname
        secretkey:
          dataType: string
          description: the secret key of the user
        state:
          dataType: string
          description: the user state
        timezone:
          dataType: string
          description: the timezone user was created in
        username:
          dataType: string
          description: the user name
    user_types:
    - domain
    - root
    - user
  updateVMAffinityGroup:
    description: Updates the affinity/anti-affinity group associations of a virtual
      machine. The VM has to be stopped and restarted for the new properties to take
      effect.
    isAsync: 'true'
    name: updateVMAffinityGroup
    request:
      parms:
        affinitygroupids:
          dataType: list
          description: comma separated list of affinity groups id that are going to
            be applied to the virtual machine. Should be passed only when vm is created
            from a zone with Basic Network support. Mutually exclusive with securitygroupnames
            parameter
          required: 'false'
          type: list
        affinitygroupnames:
          dataType: list
          description: comma separated list of affinity groups names that are going
            to be applied to the virtual machine. Should be passed only when vm is
            created from a zone with Basic Network support. Mutually exclusive with
            securitygroupids parameter
          required: 'false'
          type: list
        id:
          dataType: uuid
          description: The ID of the virtual machine
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  updateVPC:
    description: Updates a VPC
    isAsync: 'true'
    name: updateVPC
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        displaytext:
          dataType: string
          description: the display text of the VPC
          required: 'false'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the vpc to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: the id of the VPC
          required: 'true'
        name:
          dataType: string
          description: the name of the VPC
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner of the VPC
        cidr:
          dataType: string
          description: the cidr the VPC
        created:
          dataType: date
          description: the date this VPC was created
        displaytext:
          dataType: string
          description: an alternate display text of the VPC.
        distributedvpcrouter:
          dataType: boolean
          description: is VPC uses distributed router for one hop forwarding and host
            based network ACL's
          sinceVersion: '4.4'
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the VPC owner
        fordisplay:
          dataType: boolean
          description: is vpc for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the VPC
        name:
          dataType: string
          description: the name of the VPC
        network:
          dataType: list
          description: the list of networks belongign to the VPC
          parms:
            account:
              dataType: string
              description: the owner of the network
            aclid:
              dataType: string
              description: ACL Id associated with the VPC network
            acltype:
              dataType: string
              description: acl type - access type to the network
            broadcastdomaintype:
              dataType: string
              description: Broadcast domain type of the network
            broadcasturi:
              dataType: string
              description: broadcast uri of the network. This parameter is visible
                to ROOT admins only
            canusefordeploy:
              dataType: boolean
              description: list networks available for vm deployment
            cidr:
              dataType: string
              description: Cloudstack managed address space, all CloudStack managed
                VMs get IP address from CIDR
            displaynetwork:
              dataType: boolean
              description: an optional field, whether to the display the network to
                the end user or not.
            displaytext:
              dataType: string
              description: the displaytext of the network
            dns1:
              dataType: string
              description: the first DNS for the network
            dns2:
              dataType: string
              description: the second DNS for the network
            domain:
              dataType: string
              description: the domain name of the network owner
            domainid:
              dataType: string
              description: the domain id of the network owner
            gateway:
              dataType: string
              description: the network's gateway
            id:
              dataType: string
              description: the id of the network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            isdefault:
              dataType: boolean
              description: true if network is default, false otherwise
            ispersistent:
              dataType: boolean
              description: list networks that are persistent
            issystem:
              dataType: boolean
              description: true if network is system, false otherwise
            name:
              dataType: string
              description: the name of the network
            netmask:
              dataType: string
              description: the network's netmask
            networkcidr:
              dataType: string
              description: the network CIDR of the guest network configured with IP
                reservation. It is the summation of CIDR and RESERVED_IP_RANGE
            networkdomain:
              dataType: string
              description: the network domain
            networkofferingavailability:
              dataType: string
              description: availability of the network offering the network is created
                from
            networkofferingconservemode:
              dataType: boolean
              description: true if network offering is ip conserve mode enabled
            networkofferingdisplaytext:
              dataType: string
              description: display text of the network offering the network is created
                from
            networkofferingid:
              dataType: string
              description: network offering id the network is created from
            networkofferingname:
              dataType: string
              description: name of the network offering the network is created from
            physicalnetworkid:
              dataType: string
              description: the physical network id
            project:
              dataType: string
              description: the project name of the address
            projectid:
              dataType: string
              description: the project id of the ipaddress
            related:
              dataType: string
              description: related to what other network configuration
            reservediprange:
              dataType: string
              description: the network's IP range not to be used by CloudStack guest
                VMs and can be used for non CloudStack purposes
            restartrequired:
              dataType: boolean
              description: true network requires restart
            service:
              dataType: list
              description: the list of services
              parms:
                capability:
                  dataType: list
                  description: the list of capabilities
                  parms:
                    canchooseservicecapability:
                      dataType: boolean
                      description: can this service capability value can be choosable
                        while creatine network offerings
                    name:
                      dataType: string
                      description: the capability name
                    value:
                      dataType: string
                      description: the capability value
                name:
                  dataType: string
                  description: the service name
                provider:
                  dataType: list
                  description: the service provider name
                  parms:
                    canenableindividualservice:
                      dataType: boolean
                      description: true if individual services can be enabled/disabled
                    destinationphysicalnetworkid:
                      dataType: string
                      description: the destination physical network
                    id:
                      dataType: string
                      description: uuid of the network provider
                    name:
                      dataType: string
                      description: the provider name
                    physicalnetworkid:
                      dataType: string
                      description: the physical network this belongs to
                    servicelist:
                      dataType: list
                      description: services for this provider
                    state:
                      dataType: string
                      description: state of the network provider
            specifyipranges:
              dataType: boolean
              description: true if network supports specifying ip ranges, false otherwise
            state:
              dataType: string
              description: state of the network
            strechedl2subnet:
              dataType: boolean
              description: true if network can span multiple zones
              sinceVersion: '4.4'
            subdomainaccess:
              dataType: boolean
              description: true if users from subdomains can access the domain level
                network
            tags:
              dataType: list
              description: the list of resource tags associated with network
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
            traffictype:
              dataType: string
              description: the traffic type of the network
            type:
              dataType: string
              description: the type of the network
            vlan:
              dataType: string
              description: The vlan of the network. This parameter is visible to ROOT
                admins only
            vpcid:
              dataType: string
              description: VPC the network belongs to
            zoneid:
              dataType: string
              description: zone id of the network
            zonename:
              dataType: string
              description: the name of the zone the network belongs to
            zonesnetworkspans:
              dataType: set
              description: If a network is enabled for 'streched l2 subnet' then represents
                zones on which network currently spans
              sinceVersion: '4.4'
        networkdomain:
          dataType: string
          description: the network domain of the VPC
        project:
          dataType: string
          description: the project name of the VPC
        projectid:
          dataType: string
          description: the project id of the VPC
        regionlevelvpc:
          dataType: boolean
          description: true if VPC is region level
          sinceVersion: '4.4'
        restartrequired:
          dataType: boolean
          description: true VPC requires restart
        service:
          dataType: list
          description: the list of supported services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        state:
          dataType: string
          description: state of the VPC. Can be Inactive/Enabled
        tags:
          dataType: list
          description: the list of resource tags associated with the project
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        vpcofferingid:
          dataType: string
          description: vpc offering id the VPC is created from
        zoneid:
          dataType: string
          description: zone id of the vpc
        zonename:
          dataType: string
          description: the name of the zone the VPC belongs to
    user_types:
    - domain
    - root
    - user
  updateVPCOffering:
    description: Updates VPC offering
    isAsync: 'true'
    name: updateVPCOffering
    request:
      parms:
        displaytext:
          dataType: string
          description: the display text of the VPC offering
          required: 'false'
        id:
          dataType: uuid
          description: the id of the VPC offering
          required: 'true'
        name:
          dataType: string
          description: the name of the VPC offering
          required: 'false'
        state:
          dataType: string
          description: update state for the VPC offering; supported states - Enabled/Disabled
          required: 'false'
    response:
      parms:
        created:
          dataType: date
          description: the date this vpc offering was created
        displaytext:
          dataType: string
          description: an alternate display text of the vpc offering.
        distributedvpcrouter:
          dataType: boolean
          description: ' indicates if the vpc offering supports distributed router
            for one-hop forwarding'
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the id of the vpc offering
        isdefault:
          dataType: boolean
          description: true if vpc offering is default, false otherwise
        name:
          dataType: string
          description: the name of the vpc offering
        service:
          dataType: list
          description: the list of supported services
          parms:
            capability:
              dataType: list
              description: the list of capabilities
              parms:
                canchooseservicecapability:
                  dataType: boolean
                  description: can this service capability value can be choosable
                    while creatine network offerings
                name:
                  dataType: string
                  description: the capability name
                value:
                  dataType: string
                  description: the capability value
            name:
              dataType: string
              description: the service name
            provider:
              dataType: list
              description: the service provider name
              parms:
                canenableindividualservice:
                  dataType: boolean
                  description: true if individual services can be enabled/disabled
                destinationphysicalnetworkid:
                  dataType: string
                  description: the destination physical network
                id:
                  dataType: string
                  description: uuid of the network provider
                name:
                  dataType: string
                  description: the provider name
                physicalnetworkid:
                  dataType: string
                  description: the physical network this belongs to
                servicelist:
                  dataType: list
                  description: services for this provider
                state:
                  dataType: string
                  description: state of the network provider
        state:
          dataType: string
          description: state of the vpc offering. Can be Disabled/Enabled
        supportsregionLevelvpc:
          dataType: boolean
          description: ' indicated if the offering can support region level vpc'
          sinceVersion: '4.4'
    user_types:
    - root
  updateVirtualMachine:
    description: Updates properties of a virtual machine. The VM has to be stopped
      and restarted for the new properties to take effect. UpdateVirtualMachine does
      not first check whether the VM is stopped. Therefore, stop the VM manually before
      issuing this call.
    isAsync: 'false'
    name: updateVirtualMachine
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        details:
          dataType: map
          description: Details in key/value pairs.
          required: 'false'
          type: map
        displayname:
          dataType: string
          description: user generated name
          required: 'false'
        displayvm:
          dataType: boolean
          description: an optional field, whether to the display the vm to the end
            user or not.
          required: 'false'
        group:
          dataType: string
          description: group of the virtual machine
          required: 'false'
        haenable:
          dataType: boolean
          description: true if high-availability is enabled for the virtual machine,
            false otherwise
          required: 'false'
        id:
          dataType: uuid
          description: The ID of the virtual machine
          required: 'true'
        instancename:
          dataType: string
          description: instance name of the user vm
          required: 'false'
          sinceVersion: '4.4'
        isdynamicallyscalable:
          dataType: boolean
          description: true if VM contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory
          required: 'false'
        name:
          dataType: string
          description: new host name of the vm. The VM has to be stopped/started for
            this update to take affect
          required: 'false'
          sinceVersion: '4.4'
        ostypeid:
          dataType: uuid
          description: the ID of the OS type that best represents this VM.
          required: 'false'
        userdata:
          dataType: string
          description: an optional binary data that can be sent to the virtual machine
            upon a successful deployment. This binary data must be base64 encoded
            before adding it to the request. Using HTTP GET (via querystring), you
            can send up to 2KB of data after base64 encoding. Using HTTP POST(via
            POST body), you can send up to 32K of data after base64 encoding.
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the virtual machine
        affinitygroup:
          dataType: set
          description: list of affinity groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the affinity group
            description:
              dataType: string
              description: the description of the affinity group
            domain:
              dataType: string
              description: the domain name of the affinity group
            domainid:
              dataType: string
              description: the domain ID of the affinity group
            id:
              dataType: string
              description: the ID of the affinity group
            name:
              dataType: string
              description: the name of the affinity group
            type:
              dataType: string
              description: the type of the affinity group
            virtualmachineIds:
              dataType: list
              description: 'virtual machine Ids associated with this affinity group '
        cpunumber:
          dataType: integer
          description: the number of cpu this virtual machine is running with
        cpuspeed:
          dataType: integer
          description: the speed of each cpu
        cpuused:
          dataType: string
          description: the amount of the vm's CPU currently used
        created:
          dataType: date
          description: the date when this virtual machine was created
        details:
          dataType: map
          description: Vm details in key/value pairs.
          sinceVersion: 4.2.1
        diskioread:
          dataType: long
          description: the read (io) of disk on the vm
        diskiowrite:
          dataType: long
          description: the write (io) of disk on the vm
        diskkbsread:
          dataType: long
          description: the read (bytes) of disk on the vm
        diskkbswrite:
          dataType: long
          description: the write (bytes) of disk on the vm
        diskofferingid:
          dataType: string
          description: the ID of the disk offering of the virtual machine
          sinceVersion: '4.4'
        diskofferingname:
          dataType: string
          description: the name of the disk offering of the virtual machine
          sinceVersion: '4.4'
        displayname:
          dataType: string
          description: user generated name. The name of the virtual machine is returned
            if no displayname exists.
        displayvm:
          dataType: boolean
          description: an optional field whether to the display the vm to the end
            user or not.
        domain:
          dataType: string
          description: the name of the domain in which the virtual machine exists
        domainid:
          dataType: string
          description: the ID of the domain in which the virtual machine exists
        forvirtualnetwork:
          dataType: boolean
          description: the virtual network for the service offering
        group:
          dataType: string
          description: the group name of the virtual machine
        groupid:
          dataType: string
          description: the group ID of the virtual machine
        guestosid:
          dataType: string
          description: Os type ID of the virtual machine
        haenable:
          dataType: boolean
          description: true if high-availability is enabled, false otherwise
        hostid:
          dataType: string
          description: the ID of the host for the virtual machine
        hostname:
          dataType: string
          description: the name of the host for the virtual machine
        hypervisor:
          dataType: string
          description: the hypervisor on which the template runs
        id:
          dataType: string
          description: the ID of the virtual machine
        instancename:
          dataType: string
          description: instance name of the user vm; this parameter is returned to
            the ROOT admin only
          sinceVersion: 3.0.1
        isdynamicallyscalable:
          dataType: boolean
          description: true if vm contains XS/VMWare tools inorder to support dynamic
            scaling of VM cpu/memory.
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        keypair:
          dataType: string
          description: ssh key-pair
        memory:
          dataType: integer
          description: the memory allocated for the virtual machine
        name:
          dataType: string
          description: the name of the virtual machine
        networkkbsread:
          dataType: long
          description: the incoming network traffic on the vm
        networkkbswrite:
          dataType: long
          description: the outgoing network traffic on the host
        nic:
          dataType: set
          description: the list of nics associated with vm
          parms:
            broadcasturi:
              dataType: string
              description: the broadcast uri of the nic
            deviceid:
              dataType: string
              description: device id for the network when plugged into the virtual
                machine
              sinceVersion: '4.4'
            gateway:
              dataType: string
              description: the gateway of the nic
            id:
              dataType: string
              description: the ID of the nic
            ip6address:
              dataType: string
              description: the IPv6 address of network
            ip6cidr:
              dataType: string
              description: the cidr of IPv6 network
            ip6gateway:
              dataType: string
              description: the gateway of IPv6 network
            ipaddress:
              dataType: string
              description: the ip address of the nic
            isdefault:
              dataType: boolean
              description: true if nic is default, false otherwise
            isolationuri:
              dataType: string
              description: the isolation uri of the nic
            macaddress:
              dataType: string
              description: true if nic is default, false otherwise
            netmask:
              dataType: string
              description: the netmask of the nic
            networkid:
              dataType: string
              description: the ID of the corresponding network
            networkname:
              dataType: string
              description: the name of the corresponding network
            secondaryip:
              dataType: list
              description: the Secondary ipv4 addr of nic
            traffictype:
              dataType: string
              description: the traffic type of the nic
            type:
              dataType: string
              description: the type of the nic
            virtualmachineid:
              dataType: string
              description: Id of the vm to which the nic belongs
        ostypeid:
          dataType: long
          description: OS type id of the vm
          sinceVersion: '4.4'
        password:
          dataType: string
          description: the password (if exists) of the virtual machine
        passwordenabled:
          dataType: boolean
          description: true if the password rest feature is enabled, false otherwise
        project:
          dataType: string
          description: the project name of the vm
        projectid:
          dataType: string
          description: the project id of the vm
        publicip:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        publicipid:
          dataType: string
          description: public IP address id associated with vm via Static nat rule
        rootdeviceid:
          dataType: long
          description: device ID of the root volume
        rootdevicetype:
          dataType: string
          description: device type of the root volume
        securitygroup:
          dataType: set
          description: list of security groups associated with the virtual machine
          parms:
            account:
              dataType: string
              description: the account owning the security group
            description:
              dataType: string
              description: the description of the security group
            domain:
              dataType: string
              description: the domain name of the security group
            domainid:
              dataType: string
              description: the domain ID of the security group
            egressrule:
              dataType: set
              description: the list of egress rules associated with the security group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            id:
              dataType: string
              description: the ID of the security group
            ingressrule:
              dataType: set
              description: the list of ingress rules associated with the security
                group
              parms:
                account:
                  dataType: string
                  description: account owning the security group rule
                cidr:
                  dataType: string
                  description: the CIDR notation for the base IP address of the security
                    group rule
                endport:
                  dataType: integer
                  description: 'the ending IP of the security group rule '
                icmpcode:
                  dataType: integer
                  description: the code for the ICMP message response
                icmptype:
                  dataType: integer
                  description: the type of the ICMP message response
                protocol:
                  dataType: string
                  description: the protocol of the security group rule
                ruleid:
                  dataType: string
                  description: the id of the security group rule
                securitygroupname:
                  dataType: string
                  description: security group name
                startport:
                  dataType: integer
                  description: the starting IP of the security group rule
                tags:
                  dataType: set
                  description: the list of resource tags associated with the rule
                  parms:
                    account:
                      dataType: string
                      description: the account associated with the tag
                    customer:
                      dataType: string
                      description: customer associated with the tag
                    domain:
                      dataType: string
                      description: the domain associated with the tag
                    domainid:
                      dataType: string
                      description: the ID of the domain associated with the tag
                    key:
                      dataType: string
                      description: tag key name
                    project:
                      dataType: string
                      description: the project name where tag belongs to
                    projectid:
                      dataType: string
                      description: the project id the tag belongs to
                    resourceid:
                      dataType: string
                      description: id of the resource
                    resourcetype:
                      dataType: string
                      description: resource type
                    value:
                      dataType: string
                      description: tag value
            jobid:
              description: the ID of the latest async job acting on this object
            jobstatus:
              description: the current status of the latest async job acting on this
                object
            name:
              dataType: string
              description: the name of the security group
            project:
              dataType: string
              description: the project name of the group
            projectid:
              dataType: string
              description: the project id of the group
            tags:
              dataType: set
              description: the list of resource tags associated with the rule
              parms:
                account:
                  dataType: string
                  description: the account associated with the tag
                customer:
                  dataType: string
                  description: customer associated with the tag
                domain:
                  dataType: string
                  description: the domain associated with the tag
                domainid:
                  dataType: string
                  description: the ID of the domain associated with the tag
                key:
                  dataType: string
                  description: tag key name
                project:
                  dataType: string
                  description: the project name where tag belongs to
                projectid:
                  dataType: string
                  description: the project id the tag belongs to
                resourceid:
                  dataType: string
                  description: id of the resource
                resourcetype:
                  dataType: string
                  description: resource type
                value:
                  dataType: string
                  description: tag value
        serviceofferingid:
          dataType: string
          description: the ID of the service offering of the virtual machine
        serviceofferingname:
          dataType: string
          description: the name of the service offering of the virtual machine
        servicestate:
          dataType: string
          description: State of the Service from LB rule
        state:
          dataType: string
          description: the state of the virtual machine
        tags:
          dataType: set
          description: the list of resource tags associated with vm
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        vgpu:
          dataType: string
          description: the vgpu type used by the virtual machine
          sinceVersion: '4.4'
        zoneid:
          dataType: string
          description: the ID of the availablility zone for the virtual machine
        zonename:
          dataType: string
          description: the name of the availability zone for the virtual machine
    user_types:
    - domain
    - root
    - user
  updateVolume:
    description: Updates the volume.
    isAsync: 'true'
    name: updateVolume
    request:
      parms:
        chaininfo:
          dataType: string
          description: The chain info of the volume
          required: 'false'
          sinceVersion: '4.4'
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        displayvolume:
          dataType: boolean
          description: an optional field, whether to the display the volume to the
            end user or not.
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the disk volume
          required: 'false'
        path:
          dataType: string
          description: The path of the volume
          required: 'false'
        state:
          dataType: string
          description: The state of the volume
          required: 'false'
          sinceVersion: '4.3'
        storageid:
          dataType: uuid
          description: Destination storage pool UUID for the volume
          required: 'false'
          sinceVersion: '4.3'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the disk volume
        attached:
          dataType: date
          description: the date the volume was attached to a VM instance
        chaininfo:
          dataType: string
          description: the chain info of the volume
          sinceVersion: '4.4'
        created:
          dataType: date
          description: the date the disk volume was created
        destroyed:
          dataType: boolean
          description: the boolean state of whether the volume is destroyed or not
        deviceid:
          dataType: long
          description: the ID of the device on user vm the volume is attahed to. This
            tag is not returned when the volume is detached.
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the disk volume
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the disk volume
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the disk volume
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the disk volume
        diskofferingdisplaytext:
          dataType: string
          description: the display text of the disk offering
        diskofferingid:
          dataType: string
          description: ID of the disk offering
        diskofferingname:
          dataType: string
          description: name of the disk offering
        displayvolume:
          dataType: boolean
          description: an optional field whether to the display the volume to the
            end user or not.
        domain:
          dataType: string
          description: the domain associated with the disk volume
        domainid:
          dataType: string
          description: the ID of the domain associated with the disk volume
        hypervisor:
          dataType: string
          description: Hypervisor the volume belongs to
        id:
          dataType: string
          description: ID of the disk volume
        isextractable:
          dataType: boolean
          description: true if the volume is extractable, false otherwise
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        maxiops:
          dataType: long
          description: max iops of the disk volume
        miniops:
          dataType: long
          description: min iops of the disk volume
        name:
          dataType: string
          description: name of the disk volume
        path:
          dataType: string
          description: the path of the volume
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes.
        quiescevm:
          dataType: boolean
          description: need quiesce vm or not when taking snapshot
          sinceVersion: '4.3'
        serviceofferingdisplaytext:
          dataType: string
          description: the display text of the service offering for root disk
        serviceofferingid:
          dataType: string
          description: ID of the service offering for root disk
        serviceofferingname:
          dataType: string
          description: name of the service offering for root disk
        size:
          dataType: long
          description: size of the disk volume
        snapshotid:
          dataType: string
          description: ID of the snapshot from which this volume was created
        state:
          dataType: string
          description: the state of the disk volume
        status:
          dataType: string
          description: the status of the volume
        storage:
          dataType: string
          description: name of the primary storage hosting the disk volume
        storageid:
          dataType: string
          description: id of the primary storage hosting the disk volume; returned
            to admin user only
          sinceVersion: '4.3'
        storagetype:
          dataType: string
          description: shared or local storage
        tags:
          dataType: set
          description: the list of resource tags associated with volume
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        type:
          dataType: string
          description: type of the disk volume (ROOT or DATADISK)
        virtualmachineid:
          dataType: string
          description: id of the virtual machine
        vmdisplayname:
          dataType: string
          description: display name of the virtual machine
        vmname:
          dataType: string
          description: name of the virtual machine
        vmstate:
          dataType: string
          description: state of the virtual machine
        zoneid:
          dataType: string
          description: ID of the availability zone
        zonename:
          dataType: string
          description: name of the availability zone
    user_types:
    - root
  updateVpnConnection:
    description: Updates site to site vpn connection
    isAsync: 'true'
    name: updateVpnConnection
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the vpn to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: id of vpn connection
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the owner
        cidrlist:
          dataType: string
          description: guest cidr list of the customer gateway
        created:
          dataType: date
          description: the date and time the host was created
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the owner
        dpd:
          dataType: boolean
          description: if DPD is enabled for customer gateway
        esplifetime:
          dataType: long
          description: Lifetime of ESP SA of customer gateway
        esppolicy:
          dataType: string
          description: ESP policy of the customer gateway
        fordisplay:
          dataType: boolean
          description: is connection for display to the regular user
          sinceVersion: '4.4'
        gateway:
          dataType: string
          description: public ip address id of the customer gateway
        id:
          dataType: string
          description: the connection ID
        ikelifetime:
          dataType: long
          description: Lifetime of IKE SA of customer gateway
        ikepolicy:
          dataType: string
          description: IKE policy of the customer gateway
        ipsecpsk:
          dataType: string
          description: IPsec Preshared-Key of the customer gateway
        passive:
          dataType: boolean
          description: State of vpn connection
        project:
          dataType: string
          description: the project name
        projectid:
          dataType: string
          description: the project id
        publicip:
          dataType: string
          description: the public IP address
        removed:
          dataType: date
          description: the date and time the host was removed
        s2scustomergatewayid:
          dataType: string
          description: the customer gateway ID
        s2svpngatewayid:
          dataType: string
          description: the vpn gateway ID
        state:
          dataType: string
          description: State of vpn connection
    sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  updateVpnCustomerGateway:
    description: Update site to site vpn customer gateway
    isAsync: 'true'
    name: updateVpnCustomerGateway
    request:
      parms:
        account:
          dataType: string
          description: the account associated with the gateway. Must be used with
            the domainId parameter.
          required: 'false'
        cidrlist:
          dataType: string
          description: guest cidr of the customer gateway
          required: 'true'
        domainid:
          dataType: uuid
          description: the domain ID associated with the gateway. If used with the
            account parameter returns the gateway associated with the account for
            the specified domain.
          required: 'false'
        dpd:
          dataType: boolean
          description: If DPD is enabled for VPN connection
          required: 'false'
        esplifetime:
          dataType: long
          description: Lifetime of phase 2 VPN connection to the customer gateway,
            in seconds
          required: 'false'
        esppolicy:
          dataType: string
          description: ESP policy of the customer gateway
          required: 'true'
        gateway:
          dataType: string
          description: public ip address id of the customer gateway
          required: 'true'
        id:
          dataType: uuid
          description: id of customer gateway
          required: 'true'
        ikelifetime:
          dataType: long
          description: Lifetime of phase 1 VPN connection to the customer gateway,
            in seconds
          required: 'false'
        ikepolicy:
          dataType: string
          description: IKE policy of the customer gateway
          required: 'true'
        ipsecpsk:
          dataType: string
          description: IPsec Preshared-Key of the customer gateway
          required: 'true'
        name:
          dataType: string
          description: name of this customer gateway
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: the owner
        cidrlist:
          dataType: string
          description: guest cidr list of the customer gateway
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the owner
        dpd:
          dataType: boolean
          description: if DPD is enabled for customer gateway
        esplifetime:
          dataType: long
          description: Lifetime of ESP SA of customer gateway
        esppolicy:
          dataType: string
          description: IPsec policy of customer gateway
        gateway:
          dataType: string
          description: public ip address id of the customer gateway
        id:
          dataType: string
          description: the vpn gateway ID
        ikelifetime:
          dataType: long
          description: Lifetime of IKE SA of customer gateway
        ikepolicy:
          dataType: string
          description: IKE policy of customer gateway
        ipaddress:
          dataType: string
          description: guest ip of the customer gateway
        ipsecpsk:
          dataType: string
          description: IPsec preshared-key of customer gateway
        name:
          dataType: string
          description: name of the customer gateway
        project:
          dataType: string
          description: the project name
        projectid:
          dataType: string
          description: the project id
        removed:
          dataType: date
          description: the date and time the host was removed
    user_types:
    - domain
    - root
    - user
  updateVpnGateway:
    description: Updates site to site vpn local gateway
    isAsync: 'true'
    name: updateVpnGateway
    request:
      parms:
        customid:
          dataType: string
          description: an optional field, in case you want to set a custom id to the
            resource. Allowed to Root Admins only
          required: 'false'
          sinceVersion: '4.4'
        fordisplay:
          dataType: boolean
          description: an optional field, whether to the display the vpn to the end
            user or not
          required: 'false'
          sinceVersion: '4.4'
        id:
          dataType: uuid
          description: id of customer gateway
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the owner
        domain:
          dataType: string
          description: the domain name of the owner
        domainid:
          dataType: string
          description: the domain id of the owner
        fordisplay:
          dataType: boolean
          description: is vpn gateway for display to the regular user
          sinceVersion: '4.4'
        id:
          dataType: string
          description: the vpn gateway ID
        project:
          dataType: string
          description: the project name
        projectid:
          dataType: string
          description: the project id
        publicip:
          dataType: string
          description: the public IP address
        removed:
          dataType: date
          description: the date and time the host was removed
        vpcid:
          dataType: string
          description: the vpc id of this gateway
    sinceVersion: '4.4'
    user_types:
    - domain
    - root
    - user
  updateZone:
    description: Updates a Zone.
    isAsync: 'false'
    name: updateZone
    request:
      parms:
        allocationstate:
          dataType: string
          description: Allocation state of this cluster for allocation of new resources
          required: 'false'
        details:
          dataType: map
          description: the details for the Zone
          required: 'false'
          type: map
        dhcpprovider:
          dataType: string
          description: the dhcp Provider for the Zone
          required: 'false'
        dns1:
          dataType: string
          description: the first DNS for the Zone
          required: 'false'
        dns2:
          dataType: string
          description: the second DNS for the Zone
          required: 'false'
        dnssearchorder:
          dataType: list
          description: the dns search order list
          required: 'false'
          type: list
        domain:
          dataType: string
          description: Network domain name for the networks in the zone; empty string
            will update domain with NULL value
          required: 'false'
        guestcidraddress:
          dataType: string
          description: the guest CIDR address for the Zone
          required: 'false'
        id:
          dataType: uuid
          description: the ID of the Zone
          required: 'true'
        internaldns1:
          dataType: string
          description: the first internal DNS for the Zone
          required: 'false'
        internaldns2:
          dataType: string
          description: the second internal DNS for the Zone
          required: 'false'
        ip6dns1:
          dataType: string
          description: the first DNS for IPv6 network in the Zone
          required: 'false'
        ip6dns2:
          dataType: string
          description: the second DNS for IPv6 network in the Zone
          required: 'false'
        ispublic:
          dataType: boolean
          description: updates a private zone to public if set, but not vice-versa
          required: 'false'
        localstorageenabled:
          dataType: boolean
          description: true if local storage offering enabled, false otherwise
          required: 'false'
        name:
          dataType: string
          description: the name of the Zone
          required: 'false'
    response:
      parms:
        allocationstate:
          dataType: string
          description: the allocation state of the cluster
        capacity:
          dataType: list
          description: the capacity of the Zone
          parms:
            capacitytotal:
              dataType: long
              description: the total capacity available
            capacityused:
              dataType: long
              description: the capacity currently in use
            clusterid:
              dataType: string
              description: the Cluster ID
            clustername:
              dataType: string
              description: the Cluster name
            percentused:
              dataType: string
              description: the percentage of capacity currently in use
            podid:
              dataType: string
              description: the Pod ID
            podname:
              dataType: string
              description: the Pod name
            type:
              dataType: short
              description: the capacity type
            zoneid:
              dataType: string
              description: the Zone ID
            zonename:
              dataType: string
              description: the Zone name
        description:
          dataType: string
          description: Zone description
        dhcpprovider:
          dataType: string
          description: the dhcp Provider for the Zone
        displaytext:
          dataType: string
          description: the display text of the zone
        dns1:
          dataType: string
          description: the first DNS for the Zone
        dns2:
          dataType: string
          description: the second DNS for the Zone
        domain:
          dataType: string
          description: Network domain name for the networks in the zone
        domainid:
          dataType: string
          description: the UUID of the containing domain, null for public zones
        domainname:
          dataType: string
          description: the name of the containing domain, null for public zones
        guestcidraddress:
          dataType: string
          description: the guest CIDR address for the Zone
        id:
          dataType: string
          description: Zone id
        internaldns1:
          dataType: string
          description: the first internal DNS for the Zone
        internaldns2:
          dataType: string
          description: the second internal DNS for the Zone
        ip6dns1:
          dataType: string
          description: the first IPv6 DNS for the Zone
        ip6dns2:
          dataType: string
          description: the second IPv6 DNS for the Zone
        localstorageenabled:
          dataType: boolean
          description: true if local storage offering enabled, false otherwise
        name:
          dataType: string
          description: Zone name
        networktype:
          dataType: string
          description: the network type of the zone; can be Basic or Advanced
        resourcedetails:
          dataType: map
          description: Meta data associated with the zone (key/value pairs)
          sinceVersion: 4.3.0
        securitygroupsenabled:
          dataType: boolean
          description: true if security groups support is enabled, false otherwise
        tags:
          dataType: set
          description: the list of resource tags associated with zone.
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
          sinceVersion: '4.3'
        zonetoken:
          dataType: string
          description: Zone Token
    user_types:
    - root
  upgradeRouterTemplate:
    description: Upgrades router to use newer template
    isAsync: 'false'
    name: upgradeRouterTemplate
    request:
      parms:
        account:
          dataType: string
          description: upgrades all routers owned by the specified account
          required: 'false'
        clusterid:
          dataType: uuid
          description: upgrades all routers within the specified cluster
          required: 'false'
        domainid:
          dataType: uuid
          description: upgrades all routers owned by the specified domain
          required: 'false'
        id:
          dataType: uuid
          description: upgrades router with the specified Id
          required: 'false'
        podid:
          dataType: uuid
          description: upgrades all routers within the specified pod
          required: 'false'
        zoneid:
          dataType: uuid
          description: upgrades all routers within the specified zone
          required: 'false'
    response:
      parms:
        jobid:
          dataType: string
          description: the UUID of the latest async job acting on this object
        jobstatus:
          dataType: integer
          description: the current status of the latest async job acting on this object
    user_types:
    - root
  uploadCustomCertificate:
    description: Uploads a custom certificate for the console proxy VMs to use for
      SSL. Can be used to upload a single certificate signed by a known CA. Can also
      be used, through multiple calls, to upload a chain of certificates from CA to
      the custom certificate itself.
    isAsync: 'true'
    name: uploadCustomCertificate
    request:
      parms:
        certificate:
          dataType: string
          description: The certificate to be uploaded.
          required: 'true'
        domainsuffix:
          dataType: string
          description: DNS domain suffix that the certificate is granted for.
          required: 'true'
        id:
          dataType: integer
          description: An integer providing the location in a chain that the certificate
            will hold. Usually, this can be left empty. When creating a chain, the
            top level certificate should have an ID of 1, with each step in the chain
            incrementing by one. Example, CA with id = 1, Intermediate CA with id
            = 2, Site certificate with ID = 3
          required: 'false'
        name:
          dataType: string
          description: A name / alias for the certificate.
          required: 'false'
        privatekey:
          dataType: string
          description: The private key for the attached certificate.
          required: 'false'
    response:
      parms:
        dataType: string
        description: message of the certificate upload operation
        name: message
    user_types:
    - root
  uploadSslCert:
    description: Upload a certificate to cloudstack
    isAsync: 'false'
    name: uploadSslCert
    request:
      parms:
        account:
          dataType: string
          description: account who will own the ssl cert
          required: 'false'
        certchain:
          dataType: string
          description: Certificate chain of trust
          required: 'false'
        certificate:
          dataType: string
          description: SSL certificate
          required: 'true'
        domainid:
          dataType: uuid
          description: domain ID of the account owning the ssl cert
          required: 'false'
        password:
          dataType: string
          description: Password for the private key
          required: 'false'
        privatekey:
          dataType: string
          description: Private key
          required: 'true'
        projectid:
          dataType: uuid
          description: an optional project for the ssl cert
          required: 'false'
    response:
      parms:
        account:
          dataType: string
          description: account for the certificate
        certchain:
          dataType: string
          description: certificate chain
        certificate:
          dataType: string
          description: certificate
        domain:
          dataType: string
          description: the domain name of the network owner
        domainid:
          dataType: string
          description: the domain id of the network owner
        fingerprint:
          dataType: string
          description: certificate fingerprint
        id:
          dataType: string
          description: SSL certificate ID
        loadbalancerrulelist:
          dataType: list
          description: List of loabalancers this certificate is bound to
        project:
          dataType: string
          description: the project name of the certificate
        projectid:
          dataType: string
          description: the project id of the certificate
    user_types:
    - domain
    - root
    - user
  uploadVolume:
    description: Uploads a data disk.
    isAsync: 'true'
    name: uploadVolume
    request:
      parms:
        account:
          dataType: string
          description: an optional accountName. Must be used with domainId.
          required: 'false'
        checksum:
          dataType: string
          description: the MD5 checksum value of this volume
          required: 'false'
        diskofferingid:
          dataType: uuid
          description: the ID of the disk offering. This must be a custom sized offering
            since during uploadVolume volume size is unknown.
          required: 'false'
        domainid:
          dataType: uuid
          description: an optional domainId. If the account parameter is used, domainId
            must also be used.
          required: 'false'
        format:
          dataType: string
          description: the format for the volume. Possible values include QCOW2, OVA,
            and VHD.
          required: 'true'
        imagestoreuuid:
          dataType: string
          description: Image store uuid
          required: 'false'
        name:
          dataType: string
          description: the name of the volume
          required: 'true'
        projectid:
          dataType: uuid
          description: Upload volume for the project
          required: 'false'
        url:
          dataType: string
          description: the URL of where the volume is hosted. Possible URL include
            http:// and https://
          required: 'true'
        zoneid:
          dataType: uuid
          description: the ID of the zone the volume is to be hosted on
          required: 'true'
    response:
      parms:
        account:
          dataType: string
          description: the account associated with the disk volume
        attached:
          dataType: date
          description: the date the volume was attached to a VM instance
        chaininfo:
          dataType: string
          description: the chain info of the volume
          sinceVersion: '4.4'
        created:
          dataType: date
          description: the date the disk volume was created
        destroyed:
          dataType: boolean
          description: the boolean state of whether the volume is destroyed or not
        deviceid:
          dataType: long
          description: the ID of the device on user vm the volume is attahed to. This
            tag is not returned when the volume is detached.
        diskBytesReadRate:
          dataType: long
          description: bytes read rate of the disk volume
        diskBytesWriteRate:
          dataType: long
          description: bytes write rate of the disk volume
        diskIopsReadRate:
          dataType: long
          description: io requests read rate of the disk volume
        diskIopsWriteRate:
          dataType: long
          description: io requests write rate of the disk volume
        diskofferingdisplaytext:
          dataType: string
          description: the display text of the disk offering
        diskofferingid:
          dataType: string
          description: ID of the disk offering
        diskofferingname:
          dataType: string
          description: name of the disk offering
        displayvolume:
          dataType: boolean
          description: an optional field whether to the display the volume to the
            end user or not.
        domain:
          dataType: string
          description: the domain associated with the disk volume
        domainid:
          dataType: string
          description: the ID of the domain associated with the disk volume
        hypervisor:
          dataType: string
          description: Hypervisor the volume belongs to
        id:
          dataType: string
          description: ID of the disk volume
        isextractable:
          dataType: boolean
          description: true if the volume is extractable, false otherwise
        isodisplaytext:
          dataType: string
          description: an alternate display text of the ISO attached to the virtual
            machine
        isoid:
          dataType: string
          description: the ID of the ISO attached to the virtual machine
        isoname:
          dataType: string
          description: the name of the ISO attached to the virtual machine
        jobid:
          description: the ID of the latest async job acting on this object
        jobstatus:
          description: the current status of the latest async job acting on this object
        maxiops:
          dataType: long
          description: max iops of the disk volume
        miniops:
          dataType: long
          description: min iops of the disk volume
        name:
          dataType: string
          description: name of the disk volume
        path:
          dataType: string
          description: the path of the volume
        project:
          dataType: string
          description: the project name of the vpn
        projectid:
          dataType: string
          description: the project id of the vpn
        provisioningtype:
          dataType: string
          description: provisioning type used to create volumes.
        quiescevm:
          dataType: boolean
          description: need quiesce vm or not when taking snapshot
          sinceVersion: '4.3'
        serviceofferingdisplaytext:
          dataType: string
          description: the display text of the service offering for root disk
        serviceofferingid:
          dataType: string
          description: ID of the service offering for root disk
        serviceofferingname:
          dataType: string
          description: name of the service offering for root disk
        size:
          dataType: long
          description: size of the disk volume
        snapshotid:
          dataType: string
          description: ID of the snapshot from which this volume was created
        state:
          dataType: string
          description: the state of the disk volume
        status:
          dataType: string
          description: the status of the volume
        storage:
          dataType: string
          description: name of the primary storage hosting the disk volume
        storageid:
          dataType: string
          description: id of the primary storage hosting the disk volume; returned
            to admin user only
          sinceVersion: '4.3'
        storagetype:
          dataType: string
          description: shared or local storage
        tags:
          dataType: set
          description: the list of resource tags associated with volume
          parms:
            account:
              dataType: string
              description: the account associated with the tag
            customer:
              dataType: string
              description: customer associated with the tag
            domain:
              dataType: string
              description: the domain associated with the tag
            domainid:
              dataType: string
              description: the ID of the domain associated with the tag
            key:
              dataType: string
              description: tag key name
            project:
              dataType: string
              description: the project name where tag belongs to
            projectid:
              dataType: string
              description: the project id the tag belongs to
            resourceid:
              dataType: string
              description: id of the resource
            resourcetype:
              dataType: string
              description: resource type
            value:
              dataType: string
              description: tag value
        templatedisplaytext:
          dataType: string
          description: ' an alternate display text of the template for the virtual
            machine'
        templateid:
          dataType: string
          description: the ID of the template for the virtual machine. A -1 is returned
            if the virtual machine was created from an ISO file.
        templatename:
          dataType: string
          description: the name of the template for the virtual machine
        type:
          dataType: string
          description: type of the disk volume (ROOT or DATADISK)
        virtualmachineid:
          dataType: string
          description: id of the virtual machine
        vmdisplayname:
          dataType: string
          description: display name of the virtual machine
        vmname:
          dataType: string
          description: name of the virtual machine
        vmstate:
          dataType: string
          description: state of the virtual machine
        zoneid:
          dataType: string
          description: ID of the availability zone
        zonename:
          dataType: string
          description: name of the availability zone
    user_types:
    - domain
    - root
    - user
